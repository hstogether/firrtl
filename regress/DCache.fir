circuit DCache :
  module DCache : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip cpu : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}}, s1_kill : UInt<1>, s1_data : UInt<64>, flip s2_nack : UInt<1>, flip acquire : UInt<1>, flip release : UInt<1>, flip resp : {valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, store_data : UInt<64>}}, flip replay_next : UInt<1>, flip xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}}, invalidate_lr : UInt<1>, flip ordered : UInt<1>}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {prv : UInt<2>, pum : UInt<1>, mxr : UInt<1>, addr : UInt<27>, store : UInt<1>, fetch : UInt<1>}}, flip resp : {valid : UInt<1>, bits : {pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<2>}}, flip ptbr : {mode : UInt<4>, asid : UInt<16>, ppn : UInt<44>}, flip invalidate : UInt<1>, flip status : {debug : UInt<1>, isa : UInt<32>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, pum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}}, mem : {0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, error : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<4>, addr_lo : UInt<3>, data : UInt<64>, error : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<4>}}}}}
    
    io is invalid
    io is invalid
    inst grantackq of Queue_35 @[DCache.scala 48:25]
    grantackq.io is invalid
    grantackq.clock <= clock
    grantackq.reset <= reset
    wire _T_570 : UInt<1> @[Replacement.scala 15:29]
    _T_570 is invalid @[Replacement.scala 15:29]
    _T_570 <= UInt<1>("h00") @[Replacement.scala 16:11]
    reg _T_573 : UInt<16>, clock with : (reset => (reset, UInt<16>("h01"))) @[LFSR.scala 22:19]
    when _T_570 : @[LFSR.scala 23:22]
      node _T_574 = bits(_T_573, 0, 0) @[LFSR.scala 23:40]
      node _T_575 = bits(_T_573, 2, 2) @[LFSR.scala 23:48]
      node _T_576 = xor(_T_574, _T_575) @[LFSR.scala 23:43]
      node _T_577 = bits(_T_573, 3, 3) @[LFSR.scala 23:56]
      node _T_578 = xor(_T_576, _T_577) @[LFSR.scala 23:51]
      node _T_579 = bits(_T_573, 5, 5) @[LFSR.scala 23:64]
      node _T_580 = xor(_T_578, _T_579) @[LFSR.scala 23:59]
      node _T_581 = bits(_T_573, 15, 1) @[LFSR.scala 23:73]
      node _T_582 = cat(_T_580, _T_581) @[Cat.scala 30:58]
      _T_573 <= _T_582 @[LFSR.scala 23:29]
      skip @[LFSR.scala 23:22]
    inst metaReadArb of Arbiter @[DCache.scala 53:27]
    metaReadArb.io is invalid
    metaReadArb.clock <= clock
    metaReadArb.reset <= reset
    inst metaWriteArb of Arbiter_1 @[DCache.scala 54:28]
    metaWriteArb.io is invalid
    metaWriteArb.clock <= clock
    metaWriteArb.reset <= reset
    inst data of DCacheDataArray @[DCache.scala 57:20]
    data.io is invalid
    data.clock <= clock
    data.reset <= reset
    inst dataArb of Arbiter_2 @[DCache.scala 58:23]
    dataArb.io is invalid
    dataArb.clock <= clock
    dataArb.reset <= reset
    data.io.req <- dataArb.io.out @[DCache.scala 59:15]
    dataArb.io.out.ready <= UInt<1>("h01") @[DCache.scala 60:24]
    node _T_602 = and(io.cpu.req.ready, io.cpu.req.valid) @[Decoupled.scala 30:37]
    reg s1_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 62:21]
    s1_valid <= _T_602 @[DCache.scala 62:21]
    node _T_604 = and(io.mem.0.b.ready, io.mem.0.b.valid) @[Decoupled.scala 30:37]
    reg s1_probe : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 63:21]
    s1_probe <= _T_604 @[DCache.scala 63:21]
    node _T_606 = and(io.mem.0.b.ready, io.mem.0.b.valid) @[Decoupled.scala 30:37]
    reg probe_bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}, clock @[Reg.scala 34:16]
    when _T_606 : @[Reg.scala 35:19]
      probe_bits <- io.mem.0.b.bits @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    wire s1_nack : UInt<1>
    s1_nack is invalid
    s1_nack <= UInt<1>("h00")
    node _T_624 = eq(io.cpu.s1_kill, UInt<1>("h00")) @[DCache.scala 66:37]
    node _T_625 = and(s1_valid, _T_624) @[DCache.scala 66:34]
    node _T_626 = cat(io.cpu.xcpt.pf.ld, io.cpu.xcpt.pf.st) @[DCache.scala 66:69]
    node _T_627 = cat(io.cpu.xcpt.ma.ld, io.cpu.xcpt.ma.st) @[DCache.scala 66:69]
    node _T_628 = cat(_T_627, _T_626) @[DCache.scala 66:69]
    node _T_630 = neq(_T_628, UInt<1>("h00")) @[DCache.scala 66:76]
    node _T_632 = eq(_T_630, UInt<1>("h00")) @[DCache.scala 66:56]
    node s1_valid_masked = and(_T_625, _T_632) @[DCache.scala 66:53]
    node _T_634 = eq(s1_nack, UInt<1>("h00")) @[DCache.scala 67:48]
    node s1_valid_not_nacked = and(s1_valid_masked, _T_634) @[DCache.scala 67:45]
    reg s1_req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}, clock @[DCache.scala 68:19]
    when metaReadArb.io.out.valid : @[DCache.scala 69:35]
      s1_req <- io.cpu.req.bits @[DCache.scala 70:12]
      node _T_641 = shr(io.cpu.req.bits.addr, 12) @[DCache.scala 71:45]
      node _T_642 = bits(io.cpu.req.bits.addr, 5, 0) @[DCache.scala 71:108]
      node _T_643 = cat(_T_641, metaReadArb.io.out.bits.idx) @[Cat.scala 30:58]
      node _T_644 = cat(_T_643, _T_642) @[Cat.scala 30:58]
      s1_req.addr <= _T_644 @[DCache.scala 71:17]
      skip @[DCache.scala 69:35]
    node _T_646 = eq(s1_req.cmd, UInt<1>("h00")) @[Consts.scala 35:31]
    node _T_648 = eq(s1_req.cmd, UInt<3>("h06")) @[Consts.scala 35:48]
    node _T_649 = or(_T_646, _T_648) @[Consts.scala 35:41]
    node _T_651 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 35:65]
    node _T_652 = or(_T_649, _T_651) @[Consts.scala 35:58]
    node _T_653 = bits(s1_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_655 = eq(s1_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_656 = or(_T_653, _T_655) @[Consts.scala 33:33]
    node s1_read = or(_T_652, _T_656) @[Consts.scala 35:75]
    node _T_658 = eq(s1_req.cmd, UInt<1>("h01")) @[Consts.scala 36:32]
    node _T_660 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 36:49]
    node _T_661 = or(_T_658, _T_660) @[Consts.scala 36:42]
    node _T_662 = bits(s1_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_664 = eq(s1_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_665 = or(_T_662, _T_664) @[Consts.scala 33:33]
    node s1_write = or(_T_661, _T_665) @[Consts.scala 36:59]
    node s1_readwrite = or(s1_read, s1_write) @[DCache.scala 75:30]
    reg s1_flush_valid : UInt<1>, clock @[DCache.scala 76:27]
    reg cached_grant_wait : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 79:30]
    reg release_ack_wait : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 80:29]
    reg release_state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[DCache.scala 81:26]
    wire pstore1_valid : UInt<1> @[DCache.scala 82:27]
    pstore1_valid is invalid @[DCache.scala 82:27]
    reg pstore2_valid : UInt<1>, clock @[DCache.scala 83:26]
    node _T_672 = eq(release_state, UInt<3>("h01")) @[Package.scala 7:47]
    node _T_673 = eq(release_state, UInt<3>("h02")) @[Package.scala 7:47]
    node inWriteback = or(_T_672, _T_673) @[Package.scala 7:62]
    wire releaseWay : UInt @[DCache.scala 85:24]
    releaseWay is invalid @[DCache.scala 85:24]
    node _T_675 = eq(release_state, UInt<3>("h00")) @[DCache.scala 86:38]
    node _T_677 = eq(cached_grant_wait, UInt<1>("h00")) @[DCache.scala 86:54]
    node _T_678 = and(_T_675, _T_677) @[DCache.scala 86:51]
    node _T_680 = eq(s1_nack, UInt<1>("h00")) @[DCache.scala 86:76]
    node _T_681 = and(_T_678, _T_680) @[DCache.scala 86:73]
    io.cpu.req.ready <= _T_681 @[DCache.scala 86:20]
    wire _T_685 : UInt<1>[1] @[DCache.scala 89:64]
    _T_685 is invalid @[DCache.scala 89:64]
    _T_685[0] <= UInt<1>("h00") @[DCache.scala 89:64]
    reg uncachedInFlight : UInt<1>[1], clock with : (reset => (reset, _T_685)) @[DCache.scala 89:29]
    reg uncachedReqs : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}[1], clock @[DCache.scala 90:25]
    node _T_743 = eq(io.cpu.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 35:31]
    node _T_745 = eq(io.cpu.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 35:48]
    node _T_746 = or(_T_743, _T_745) @[Consts.scala 35:41]
    node _T_748 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 35:65]
    node _T_749 = or(_T_746, _T_748) @[Consts.scala 35:58]
    node _T_750 = bits(io.cpu.req.bits.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_752 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_753 = or(_T_750, _T_752) @[Consts.scala 33:33]
    node _T_754 = or(_T_749, _T_753) @[Consts.scala 35:75]
    node _T_755 = and(io.cpu.req.valid, _T_754) @[DCache.scala 93:46]
    dataArb.io.in[3].valid <= _T_755 @[DCache.scala 93:26]
    dataArb.io.in[3].bits.write <= UInt<1>("h00") @[DCache.scala 94:31]
    dataArb.io.in[3].bits.addr <= io.cpu.req.bits.addr @[DCache.scala 95:30]
    node _T_758 = not(UInt<4>("h00")) @[DCache.scala 96:35]
    dataArb.io.in[3].bits.way_en <= _T_758 @[DCache.scala 96:32]
    node _T_760 = eq(dataArb.io.in[3].ready, UInt<1>("h00")) @[DCache.scala 97:9]
    node _T_762 = eq(io.cpu.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 35:31]
    node _T_764 = eq(io.cpu.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 35:48]
    node _T_765 = or(_T_762, _T_764) @[Consts.scala 35:41]
    node _T_767 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 35:65]
    node _T_768 = or(_T_765, _T_767) @[Consts.scala 35:58]
    node _T_769 = bits(io.cpu.req.bits.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_771 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_772 = or(_T_769, _T_771) @[Consts.scala 33:33]
    node _T_773 = or(_T_768, _T_772) @[Consts.scala 35:75]
    node _T_774 = and(_T_760, _T_773) @[DCache.scala 97:33]
    when _T_774 : @[DCache.scala 97:65]
      io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 97:84]
      skip @[DCache.scala 97:65]
    metaReadArb.io.in[2].valid <= io.cpu.req.valid @[DCache.scala 98:30]
    node _T_776 = bits(io.cpu.req.bits.addr, 11, 6) @[DCache.scala 99:56]
    metaReadArb.io.in[2].bits.idx <= _T_776 @[DCache.scala 99:33]
    node _T_778 = not(UInt<4>("h00")) @[DCache.scala 100:39]
    metaReadArb.io.in[2].bits.way_en <= _T_778 @[DCache.scala 100:36]
    node _T_780 = eq(metaReadArb.io.in[2].ready, UInt<1>("h00")) @[DCache.scala 101:9]
    when _T_780 : @[DCache.scala 101:38]
      io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 101:57]
      skip @[DCache.scala 101:38]
    inst tlb of TLB @[DCache.scala 104:19]
    tlb.io is invalid
    tlb.clock <= clock
    tlb.reset <= reset
    io.ptw <- tlb.io.ptw @[DCache.scala 105:10]
    node _T_782 = and(s1_valid_masked, s1_readwrite) @[DCache.scala 106:39]
    tlb.io.req.valid <= _T_782 @[DCache.scala 106:20]
    tlb.io.req.bits.passthrough <= s1_req.phys @[DCache.scala 107:31]
    tlb.io.req.bits.vaddr <= s1_req.addr @[DCache.scala 108:25]
    tlb.io.req.bits.instruction <= UInt<1>("h00") @[DCache.scala 109:31]
    tlb.io.req.bits.store <= s1_write @[DCache.scala 110:25]
    node _T_785 = eq(tlb.io.req.ready, UInt<1>("h00")) @[DCache.scala 111:9]
    node _T_787 = eq(io.cpu.req.bits.phys, UInt<1>("h00")) @[DCache.scala 111:30]
    node _T_788 = and(_T_785, _T_787) @[DCache.scala 111:27]
    when _T_788 : @[DCache.scala 111:53]
      io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 111:72]
      skip @[DCache.scala 111:53]
    node _T_790 = and(s1_valid, s1_readwrite) @[DCache.scala 112:18]
    node _T_791 = and(_T_790, tlb.io.resp.miss) @[DCache.scala 112:34]
    when _T_791 : @[DCache.scala 112:55]
      s1_nack <= UInt<1>("h01") @[DCache.scala 112:65]
      skip @[DCache.scala 112:55]
    node _T_793 = mux(s1_probe, probe_bits.address, tlb.io.resp.paddr) @[DCache.scala 115:19]
    node s1_tag = bits(_T_793, 31, 12) @[DCache.scala 115:59]
    node _T_794 = bits(_T_573, 1, 0) @[Replacement.scala 19:44]
    wire s1_victim_way : UInt
    s1_victim_way is invalid
    s1_victim_way <= _T_794
    inst L1MetadataArray of L1MetadataArray @[DCache.scala 125:24]
    L1MetadataArray.io is invalid
    L1MetadataArray.clock <= clock
    L1MetadataArray.reset <= reset
    L1MetadataArray.io.read <- metaReadArb.io.out @[DCache.scala 126:20]
    L1MetadataArray.io.write <- metaWriteArb.io.out @[DCache.scala 127:21]
    node _T_796 = gt(L1MetadataArray.io.resp[0].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_797 = eq(L1MetadataArray.io.resp[0].tag, s1_tag) @[DCache.scala 129:71]
    node _T_798 = and(_T_796, _T_797) @[DCache.scala 129:62]
    node _T_800 = gt(L1MetadataArray.io.resp[1].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_801 = eq(L1MetadataArray.io.resp[1].tag, s1_tag) @[DCache.scala 129:71]
    node _T_802 = and(_T_800, _T_801) @[DCache.scala 129:62]
    node _T_804 = gt(L1MetadataArray.io.resp[2].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_805 = eq(L1MetadataArray.io.resp[2].tag, s1_tag) @[DCache.scala 129:71]
    node _T_806 = and(_T_804, _T_805) @[DCache.scala 129:62]
    node _T_808 = gt(L1MetadataArray.io.resp[3].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_809 = eq(L1MetadataArray.io.resp[3].tag, s1_tag) @[DCache.scala 129:71]
    node _T_810 = and(_T_808, _T_809) @[DCache.scala 129:62]
    node _T_811 = cat(_T_802, _T_798) @[Cat.scala 30:58]
    node _T_812 = cat(_T_810, _T_806) @[Cat.scala 30:58]
    node s1_hit_way = cat(_T_812, _T_811) @[Cat.scala 30:58]
    wire _T_816 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_816 is invalid @[Metadata.scala 160:20]
    _T_816.state <= UInt<2>("h00") @[Metadata.scala 161:16]
    node _T_818 = eq(L1MetadataArray.io.resp[0].tag, s1_tag) @[DCache.scala 131:36]
    node _T_820 = mux(_T_818, L1MetadataArray.io.resp[0].coh.state, UInt<1>("h00")) @[DCache.scala 131:29]
    node _T_821 = eq(L1MetadataArray.io.resp[1].tag, s1_tag) @[DCache.scala 131:36]
    node _T_823 = mux(_T_821, L1MetadataArray.io.resp[1].coh.state, UInt<1>("h00")) @[DCache.scala 131:29]
    node _T_824 = eq(L1MetadataArray.io.resp[2].tag, s1_tag) @[DCache.scala 131:36]
    node _T_826 = mux(_T_824, L1MetadataArray.io.resp[2].coh.state, UInt<1>("h00")) @[DCache.scala 131:29]
    node _T_827 = eq(L1MetadataArray.io.resp[3].tag, s1_tag) @[DCache.scala 131:36]
    node _T_829 = mux(_T_827, L1MetadataArray.io.resp[3].coh.state, UInt<1>("h00")) @[DCache.scala 131:29]
    node _T_830 = or(_T_820, _T_823) @[DCache.scala 132:19]
    node _T_831 = or(_T_830, _T_826) @[DCache.scala 132:19]
    node _T_832 = or(_T_831, _T_829) @[DCache.scala 132:19]
    wire s1_hit_state : {state : UInt<2>} @[DCache.scala 130:62]
    s1_hit_state is invalid @[DCache.scala 130:62]
    wire _T_837 : UInt<2>
    _T_837 is invalid
    _T_837 <= _T_832
    node _T_838 = bits(_T_837, 1, 0) @[DCache.scala 130:62]
    s1_hit_state.state <= _T_838 @[DCache.scala 130:62]
    node _T_847 = or(s1_victim_way, UInt<2>("h00"))
    node _T_848 = bits(_T_847, 1, 0)
    node s1_data_way = mux(inWriteback, releaseWay, s1_hit_way) @[DCache.scala 135:24]
    node _T_849 = bits(s1_data_way, 0, 0) @[Mux.scala 21:36]
    node _T_850 = bits(s1_data_way, 1, 1) @[Mux.scala 21:36]
    node _T_851 = bits(s1_data_way, 2, 2) @[Mux.scala 21:36]
    node _T_852 = bits(s1_data_way, 3, 3) @[Mux.scala 21:36]
    node _T_854 = mux(_T_849, data.io.resp[0], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_856 = mux(_T_850, data.io.resp[1], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_858 = mux(_T_851, data.io.resp[2], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_860 = mux(_T_852, data.io.resp[3], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_862 = or(_T_854, _T_856) @[Mux.scala 19:72]
    node _T_863 = or(_T_862, _T_858) @[Mux.scala 19:72]
    node _T_864 = or(_T_863, _T_860) @[Mux.scala 19:72]
    wire s1_data : UInt<64> @[Mux.scala 19:72]
    s1_data is invalid @[Mux.scala 19:72]
    s1_data <= _T_864 @[Mux.scala 19:72]
    reg s2_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 138:21]
    s2_valid <= s1_valid_masked @[DCache.scala 138:21]
    reg s2_probe : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 139:21]
    s2_probe <= s1_probe @[DCache.scala 139:21]
    node _T_868 = or(s1_probe, s2_probe) @[DCache.scala 140:34]
    node _T_869 = neq(release_state, UInt<3>("h00")) @[DCache.scala 140:63]
    node releaseInFlight = or(_T_868, _T_869) @[DCache.scala 140:46]
    node _T_871 = eq(s1_nack, UInt<1>("h00")) @[DCache.scala 141:48]
    reg _T_872 : UInt<1>, clock @[DCache.scala 141:40]
    _T_872 <= _T_871 @[DCache.scala 141:40]
    node s2_valid_masked = and(s2_valid, _T_872) @[DCache.scala 141:34]
    reg s2_req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}, clock @[DCache.scala 142:19]
    node _T_878 = shr(s2_req.addr, 6) @[DCache.scala 143:40]
    node acquire_address = shl(_T_878, 6) @[DCache.scala 143:51]
    reg s2_uncached : UInt<1>, clock @[DCache.scala 144:24]
    node _T_880 = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 145:29]
    when _T_880 : @[DCache.scala 145:48]
      s2_req <- s1_req @[DCache.scala 146:12]
      s2_req.addr <= tlb.io.resp.paddr @[DCache.scala 147:17]
      node _T_882 = eq(tlb.io.resp.cacheable, UInt<1>("h00")) @[DCache.scala 148:20]
      node _T_884 = or(_T_882, UInt<1>("h00")) @[DCache.scala 148:43]
      s2_uncached <= _T_884 @[DCache.scala 148:17]
      skip @[DCache.scala 145:48]
    node _T_886 = eq(s2_req.cmd, UInt<1>("h00")) @[Consts.scala 35:31]
    node _T_888 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 35:48]
    node _T_889 = or(_T_886, _T_888) @[Consts.scala 35:41]
    node _T_891 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 35:65]
    node _T_892 = or(_T_889, _T_891) @[Consts.scala 35:58]
    node _T_893 = bits(s2_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_895 = eq(s2_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_896 = or(_T_893, _T_895) @[Consts.scala 33:33]
    node s2_read = or(_T_892, _T_896) @[Consts.scala 35:75]
    node _T_898 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 36:32]
    node _T_900 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 36:49]
    node _T_901 = or(_T_898, _T_900) @[Consts.scala 36:42]
    node _T_902 = bits(s2_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_904 = eq(s2_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_905 = or(_T_902, _T_904) @[Consts.scala 33:33]
    node s2_write = or(_T_901, _T_905) @[Consts.scala 36:59]
    node s2_readwrite = or(s2_read, s2_write) @[DCache.scala 152:30]
    reg s2_flush_valid : UInt<1>, clock @[Reg.scala 14:44]
    s2_flush_valid <= s1_flush_valid @[Reg.scala 14:44]
    node _T_906 = or(s1_valid, inWriteback) @[DCache.scala 154:45]
    reg s2_data : UInt<64>, clock @[Reg.scala 34:16]
    when _T_906 : @[Reg.scala 35:19]
      s2_data <= s1_data @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    reg s2_probe_way : UInt<4>, clock @[Reg.scala 34:16]
    when s1_probe : @[Reg.scala 35:19]
      s2_probe_way <= s1_hit_way @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    reg s2_probe_state : {state : UInt<2>}, clock @[Reg.scala 34:16]
    when s1_probe : @[Reg.scala 35:19]
      s2_probe_state <- s1_hit_state @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    reg s2_hit_way : UInt<4>, clock @[Reg.scala 34:16]
    when s1_valid_not_nacked : @[Reg.scala 35:19]
      s2_hit_way <= s1_hit_way @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    reg s2_hit_state : {state : UInt<2>}, clock @[Reg.scala 34:16]
    when s1_valid_not_nacked : @[Reg.scala 35:19]
      s2_hit_state <- s1_hit_state @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node s2_hit_valid = gt(s2_hit_state.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_918 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 36:32]
    node _T_920 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 36:49]
    node _T_921 = or(_T_918, _T_920) @[Consts.scala 36:42]
    node _T_922 = bits(s2_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_924 = eq(s2_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_925 = or(_T_922, _T_924) @[Consts.scala 33:33]
    node _T_926 = or(_T_921, _T_925) @[Consts.scala 36:59]
    node _T_928 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 36:32]
    node _T_930 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 36:49]
    node _T_931 = or(_T_928, _T_930) @[Consts.scala 36:42]
    node _T_932 = bits(s2_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_934 = eq(s2_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_935 = or(_T_932, _T_934) @[Consts.scala 33:33]
    node _T_936 = or(_T_931, _T_935) @[Consts.scala 36:59]
    node _T_938 = eq(s2_req.cmd, UInt<2>("h03")) @[Consts.scala 37:54]
    node _T_939 = or(_T_936, _T_938) @[Consts.scala 37:47]
    node _T_941 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 37:71]
    node _T_942 = or(_T_939, _T_941) @[Consts.scala 37:64]
    node _T_943 = cat(_T_926, _T_942) @[Cat.scala 30:58]
    node _T_944 = cat(_T_943, s2_hit_state.state) @[Cat.scala 30:58]
    node _T_949 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_951 = cat(_T_949, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_956 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_958 = cat(_T_956, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_963 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_965 = cat(_T_963, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_970 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_972 = cat(_T_970, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_977 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_979 = cat(_T_977, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_984 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_986 = cat(_T_984, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_991 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_993 = cat(_T_991, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_998 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_1000 = cat(_T_998, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1005 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_1007 = cat(_T_1005, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1012 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_1014 = cat(_T_1012, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1019 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_1021 = cat(_T_1019, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1026 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_1028 = cat(_T_1026, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1031 = eq(_T_1028, _T_944) @[Misc.scala 50:20]
    node _T_1032 = mux(_T_1031, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 36:9]
    node _T_1033 = mux(_T_1031, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 36:36]
    node _T_1034 = eq(_T_1021, _T_944) @[Misc.scala 50:20]
    node _T_1035 = mux(_T_1034, UInt<1>("h00"), _T_1032) @[Misc.scala 36:9]
    node _T_1036 = mux(_T_1034, UInt<2>("h02"), _T_1033) @[Misc.scala 36:36]
    node _T_1037 = eq(_T_1014, _T_944) @[Misc.scala 50:20]
    node _T_1038 = mux(_T_1037, UInt<1>("h00"), _T_1035) @[Misc.scala 36:9]
    node _T_1039 = mux(_T_1037, UInt<2>("h01"), _T_1036) @[Misc.scala 36:36]
    node _T_1040 = eq(_T_1007, _T_944) @[Misc.scala 50:20]
    node _T_1041 = mux(_T_1040, UInt<1>("h00"), _T_1038) @[Misc.scala 36:9]
    node _T_1042 = mux(_T_1040, UInt<2>("h02"), _T_1039) @[Misc.scala 36:36]
    node _T_1043 = eq(_T_1000, _T_944) @[Misc.scala 50:20]
    node _T_1044 = mux(_T_1043, UInt<1>("h00"), _T_1041) @[Misc.scala 36:9]
    node _T_1045 = mux(_T_1043, UInt<2>("h00"), _T_1042) @[Misc.scala 36:36]
    node _T_1046 = eq(_T_993, _T_944) @[Misc.scala 50:20]
    node _T_1047 = mux(_T_1046, UInt<1>("h01"), _T_1044) @[Misc.scala 36:9]
    node _T_1048 = mux(_T_1046, UInt<2>("h03"), _T_1045) @[Misc.scala 36:36]
    node _T_1049 = eq(_T_986, _T_944) @[Misc.scala 50:20]
    node _T_1050 = mux(_T_1049, UInt<1>("h01"), _T_1047) @[Misc.scala 36:9]
    node _T_1051 = mux(_T_1049, UInt<2>("h03"), _T_1048) @[Misc.scala 36:36]
    node _T_1052 = eq(_T_979, _T_944) @[Misc.scala 50:20]
    node _T_1053 = mux(_T_1052, UInt<1>("h01"), _T_1050) @[Misc.scala 36:9]
    node _T_1054 = mux(_T_1052, UInt<2>("h02"), _T_1051) @[Misc.scala 36:36]
    node _T_1055 = eq(_T_972, _T_944) @[Misc.scala 50:20]
    node _T_1056 = mux(_T_1055, UInt<1>("h01"), _T_1053) @[Misc.scala 36:9]
    node _T_1057 = mux(_T_1055, UInt<2>("h03"), _T_1054) @[Misc.scala 36:36]
    node _T_1058 = eq(_T_965, _T_944) @[Misc.scala 50:20]
    node _T_1059 = mux(_T_1058, UInt<1>("h01"), _T_1056) @[Misc.scala 36:9]
    node _T_1060 = mux(_T_1058, UInt<2>("h01"), _T_1057) @[Misc.scala 36:36]
    node _T_1061 = eq(_T_958, _T_944) @[Misc.scala 50:20]
    node _T_1062 = mux(_T_1061, UInt<1>("h01"), _T_1059) @[Misc.scala 36:9]
    node _T_1063 = mux(_T_1061, UInt<2>("h02"), _T_1060) @[Misc.scala 36:36]
    node _T_1064 = eq(_T_951, _T_944) @[Misc.scala 50:20]
    node s2_hit = mux(_T_1064, UInt<1>("h01"), _T_1062) @[Misc.scala 36:9]
    node s2_grow_param = mux(_T_1064, UInt<2>("h03"), _T_1063) @[Misc.scala 36:36]
    wire s2_new_hit_state : {state : UInt<2>} @[Metadata.scala 160:20]
    s2_new_hit_state is invalid @[Metadata.scala 160:20]
    s2_new_hit_state.state <= s2_grow_param @[Metadata.scala 161:16]
    node _T_1068 = and(s2_valid_masked, s2_readwrite) @[DCache.scala 161:38]
    node s2_valid_hit = and(_T_1068, s2_hit) @[DCache.scala 161:54]
    node _T_1069 = and(s2_valid_masked, s2_readwrite) @[DCache.scala 162:39]
    node _T_1071 = eq(s2_hit, UInt<1>("h00")) @[DCache.scala 162:58]
    node _T_1072 = and(_T_1069, _T_1071) @[DCache.scala 162:55]
    node _T_1073 = or(pstore1_valid, pstore2_valid) @[DCache.scala 162:85]
    node _T_1075 = eq(_T_1073, UInt<1>("h00")) @[DCache.scala 162:69]
    node _T_1076 = and(_T_1072, _T_1075) @[DCache.scala 162:66]
    node _T_1078 = eq(release_ack_wait, UInt<1>("h00")) @[DCache.scala 162:106]
    node s2_valid_miss = and(_T_1076, _T_1078) @[DCache.scala 162:103]
    node _T_1080 = eq(s2_uncached, UInt<1>("h00")) @[DCache.scala 163:47]
    node s2_valid_cached_miss = and(s2_valid_miss, _T_1080) @[DCache.scala 163:44]
    node s2_victimize = or(s2_valid_cached_miss, s2_flush_valid) @[DCache.scala 164:43]
    node s2_valid_uncached = and(s2_valid_miss, s2_uncached) @[DCache.scala 165:41]
    node _T_1082 = eq(s2_flush_valid, UInt<1>("h00")) @[DCache.scala 166:43]
    node _T_1083 = and(s2_hit_valid, _T_1082) @[DCache.scala 166:40]
    node _T_1084 = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 166:126]
    reg _T_1086 : UInt, clock @[Reg.scala 34:16]
    when _T_1084 : @[Reg.scala 35:19]
      _T_1086 <= s1_victim_way @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1088 = dshl(UInt<1>("h01"), _T_1086) @[OneHot.scala 47:11]
    node s2_victim_way = mux(_T_1083, s2_hit_way, _T_1088) @[DCache.scala 166:26]
    node _T_1089 = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 167:73]
    reg s2_victim_tag : UInt<20>, clock @[Reg.scala 34:16]
    when _T_1089 : @[Reg.scala 35:19]
      s2_victim_tag <= L1MetadataArray.io.resp[_T_848].tag @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1092 = eq(s2_flush_valid, UInt<1>("h00")) @[DCache.scala 168:45]
    node _T_1093 = and(s2_hit_valid, _T_1092) @[DCache.scala 168:42]
    node _T_1094 = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 168:126]
    reg _T_1097 : {state : UInt<2>}, clock @[Reg.scala 34:16]
    when _T_1094 : @[Reg.scala 35:19]
      _T_1097 <- L1MetadataArray.io.resp[_T_848].coh @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node s2_victim_state = mux(_T_1093, s2_hit_state, _T_1097) @[DCache.scala 168:28]
    node s2_victim_valid = gt(s2_victim_state.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_1101 = cat(probe_bits.param, s2_probe_state.state) @[Cat.scala 30:58]
    node _T_1107 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_1113 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_1119 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1125 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1131 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_1137 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_1143 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1149 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1155 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_1161 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_1167 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1173 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1177 = eq(_T_1173, _T_1101) @[Misc.scala 57:20]
    node _T_1178 = mux(_T_1177, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 39:9]
    node _T_1179 = mux(_T_1177, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 39:36]
    node _T_1180 = mux(_T_1177, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 39:63]
    node _T_1181 = eq(_T_1167, _T_1101) @[Misc.scala 57:20]
    node _T_1182 = mux(_T_1181, UInt<1>("h00"), _T_1178) @[Misc.scala 39:9]
    node _T_1183 = mux(_T_1181, UInt<3>("h02"), _T_1179) @[Misc.scala 39:36]
    node _T_1184 = mux(_T_1181, UInt<2>("h00"), _T_1180) @[Misc.scala 39:63]
    node _T_1185 = eq(_T_1161, _T_1101) @[Misc.scala 57:20]
    node _T_1186 = mux(_T_1185, UInt<1>("h00"), _T_1182) @[Misc.scala 39:9]
    node _T_1187 = mux(_T_1185, UInt<3>("h01"), _T_1183) @[Misc.scala 39:36]
    node _T_1188 = mux(_T_1185, UInt<2>("h00"), _T_1184) @[Misc.scala 39:63]
    node _T_1189 = eq(_T_1155, _T_1101) @[Misc.scala 57:20]
    node _T_1190 = mux(_T_1189, UInt<1>("h01"), _T_1186) @[Misc.scala 39:9]
    node _T_1191 = mux(_T_1189, UInt<3>("h01"), _T_1187) @[Misc.scala 39:36]
    node _T_1192 = mux(_T_1189, UInt<2>("h00"), _T_1188) @[Misc.scala 39:63]
    node _T_1193 = eq(_T_1149, _T_1101) @[Misc.scala 57:20]
    node _T_1194 = mux(_T_1193, UInt<1>("h00"), _T_1190) @[Misc.scala 39:9]
    node _T_1195 = mux(_T_1193, UInt<3>("h02"), _T_1191) @[Misc.scala 39:36]
    node _T_1196 = mux(_T_1193, UInt<2>("h00"), _T_1192) @[Misc.scala 39:63]
    node _T_1197 = eq(_T_1143, _T_1101) @[Misc.scala 57:20]
    node _T_1198 = mux(_T_1197, UInt<1>("h00"), _T_1194) @[Misc.scala 39:9]
    node _T_1199 = mux(_T_1197, UInt<3>("h04"), _T_1195) @[Misc.scala 39:36]
    node _T_1200 = mux(_T_1197, UInt<2>("h01"), _T_1196) @[Misc.scala 39:63]
    node _T_1201 = eq(_T_1137, _T_1101) @[Misc.scala 57:20]
    node _T_1202 = mux(_T_1201, UInt<1>("h00"), _T_1198) @[Misc.scala 39:9]
    node _T_1203 = mux(_T_1201, UInt<3>("h00"), _T_1199) @[Misc.scala 39:36]
    node _T_1204 = mux(_T_1201, UInt<2>("h01"), _T_1200) @[Misc.scala 39:63]
    node _T_1205 = eq(_T_1131, _T_1101) @[Misc.scala 57:20]
    node _T_1206 = mux(_T_1205, UInt<1>("h01"), _T_1202) @[Misc.scala 39:9]
    node _T_1207 = mux(_T_1205, UInt<3>("h00"), _T_1203) @[Misc.scala 39:36]
    node _T_1208 = mux(_T_1205, UInt<2>("h01"), _T_1204) @[Misc.scala 39:63]
    node _T_1209 = eq(_T_1125, _T_1101) @[Misc.scala 57:20]
    node _T_1210 = mux(_T_1209, UInt<1>("h00"), _T_1206) @[Misc.scala 39:9]
    node _T_1211 = mux(_T_1209, UInt<3>("h05"), _T_1207) @[Misc.scala 39:36]
    node _T_1212 = mux(_T_1209, UInt<2>("h00"), _T_1208) @[Misc.scala 39:63]
    node _T_1213 = eq(_T_1119, _T_1101) @[Misc.scala 57:20]
    node _T_1214 = mux(_T_1213, UInt<1>("h00"), _T_1210) @[Misc.scala 39:9]
    node _T_1215 = mux(_T_1213, UInt<3>("h04"), _T_1211) @[Misc.scala 39:36]
    node _T_1216 = mux(_T_1213, UInt<2>("h01"), _T_1212) @[Misc.scala 39:63]
    node _T_1217 = eq(_T_1113, _T_1101) @[Misc.scala 57:20]
    node _T_1218 = mux(_T_1217, UInt<1>("h00"), _T_1214) @[Misc.scala 39:9]
    node _T_1219 = mux(_T_1217, UInt<3>("h03"), _T_1215) @[Misc.scala 39:36]
    node _T_1220 = mux(_T_1217, UInt<2>("h02"), _T_1216) @[Misc.scala 39:63]
    node _T_1221 = eq(_T_1107, _T_1101) @[Misc.scala 57:20]
    node s2_prb_ack_data = mux(_T_1221, UInt<1>("h01"), _T_1218) @[Misc.scala 39:9]
    node s2_report_param = mux(_T_1221, UInt<3>("h03"), _T_1219) @[Misc.scala 39:36]
    node _T_1222 = mux(_T_1221, UInt<2>("h02"), _T_1220) @[Misc.scala 39:63]
    wire probeNewCoh : {state : UInt<2>} @[Metadata.scala 160:20]
    probeNewCoh is invalid @[Metadata.scala 160:20]
    probeNewCoh.state <= _T_1222 @[Metadata.scala 161:16]
    node _T_1234 = eq(UInt<5>("h013"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_1235 = mux(_T_1234, UInt<2>("h00"), UInt<2>("h02")) @[Mux.scala 46:16]
    node _T_1236 = eq(UInt<5>("h011"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_1237 = mux(_T_1236, UInt<2>("h01"), _T_1235) @[Mux.scala 46:16]
    node _T_1238 = eq(UInt<5>("h010"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_1239 = mux(_T_1238, UInt<2>("h02"), _T_1237) @[Mux.scala 46:16]
    node _T_1240 = cat(_T_1239, s2_victim_state.state) @[Cat.scala 30:58]
    node _T_1246 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_1252 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_1258 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1264 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1270 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_1276 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_1282 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1288 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1294 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_1300 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_1306 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_1312 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_1316 = eq(_T_1312, _T_1240) @[Misc.scala 57:20]
    node _T_1317 = mux(_T_1316, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 39:9]
    node _T_1318 = mux(_T_1316, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 39:36]
    node _T_1319 = mux(_T_1316, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 39:63]
    node _T_1320 = eq(_T_1306, _T_1240) @[Misc.scala 57:20]
    node _T_1321 = mux(_T_1320, UInt<1>("h00"), _T_1317) @[Misc.scala 39:9]
    node _T_1322 = mux(_T_1320, UInt<3>("h02"), _T_1318) @[Misc.scala 39:36]
    node _T_1323 = mux(_T_1320, UInt<2>("h00"), _T_1319) @[Misc.scala 39:63]
    node _T_1324 = eq(_T_1300, _T_1240) @[Misc.scala 57:20]
    node _T_1325 = mux(_T_1324, UInt<1>("h00"), _T_1321) @[Misc.scala 39:9]
    node _T_1326 = mux(_T_1324, UInt<3>("h01"), _T_1322) @[Misc.scala 39:36]
    node _T_1327 = mux(_T_1324, UInt<2>("h00"), _T_1323) @[Misc.scala 39:63]
    node _T_1328 = eq(_T_1294, _T_1240) @[Misc.scala 57:20]
    node _T_1329 = mux(_T_1328, UInt<1>("h01"), _T_1325) @[Misc.scala 39:9]
    node _T_1330 = mux(_T_1328, UInt<3>("h01"), _T_1326) @[Misc.scala 39:36]
    node _T_1331 = mux(_T_1328, UInt<2>("h00"), _T_1327) @[Misc.scala 39:63]
    node _T_1332 = eq(_T_1288, _T_1240) @[Misc.scala 57:20]
    node _T_1333 = mux(_T_1332, UInt<1>("h00"), _T_1329) @[Misc.scala 39:9]
    node _T_1334 = mux(_T_1332, UInt<3>("h02"), _T_1330) @[Misc.scala 39:36]
    node _T_1335 = mux(_T_1332, UInt<2>("h00"), _T_1331) @[Misc.scala 39:63]
    node _T_1336 = eq(_T_1282, _T_1240) @[Misc.scala 57:20]
    node _T_1337 = mux(_T_1336, UInt<1>("h00"), _T_1333) @[Misc.scala 39:9]
    node _T_1338 = mux(_T_1336, UInt<3>("h04"), _T_1334) @[Misc.scala 39:36]
    node _T_1339 = mux(_T_1336, UInt<2>("h01"), _T_1335) @[Misc.scala 39:63]
    node _T_1340 = eq(_T_1276, _T_1240) @[Misc.scala 57:20]
    node _T_1341 = mux(_T_1340, UInt<1>("h00"), _T_1337) @[Misc.scala 39:9]
    node _T_1342 = mux(_T_1340, UInt<3>("h00"), _T_1338) @[Misc.scala 39:36]
    node _T_1343 = mux(_T_1340, UInt<2>("h01"), _T_1339) @[Misc.scala 39:63]
    node _T_1344 = eq(_T_1270, _T_1240) @[Misc.scala 57:20]
    node _T_1345 = mux(_T_1344, UInt<1>("h01"), _T_1341) @[Misc.scala 39:9]
    node _T_1346 = mux(_T_1344, UInt<3>("h00"), _T_1342) @[Misc.scala 39:36]
    node _T_1347 = mux(_T_1344, UInt<2>("h01"), _T_1343) @[Misc.scala 39:63]
    node _T_1348 = eq(_T_1264, _T_1240) @[Misc.scala 57:20]
    node _T_1349 = mux(_T_1348, UInt<1>("h00"), _T_1345) @[Misc.scala 39:9]
    node _T_1350 = mux(_T_1348, UInt<3>("h05"), _T_1346) @[Misc.scala 39:36]
    node _T_1351 = mux(_T_1348, UInt<2>("h00"), _T_1347) @[Misc.scala 39:63]
    node _T_1352 = eq(_T_1258, _T_1240) @[Misc.scala 57:20]
    node _T_1353 = mux(_T_1352, UInt<1>("h00"), _T_1349) @[Misc.scala 39:9]
    node _T_1354 = mux(_T_1352, UInt<3>("h04"), _T_1350) @[Misc.scala 39:36]
    node _T_1355 = mux(_T_1352, UInt<2>("h01"), _T_1351) @[Misc.scala 39:63]
    node _T_1356 = eq(_T_1252, _T_1240) @[Misc.scala 57:20]
    node _T_1357 = mux(_T_1356, UInt<1>("h00"), _T_1353) @[Misc.scala 39:9]
    node _T_1358 = mux(_T_1356, UInt<3>("h03"), _T_1354) @[Misc.scala 39:36]
    node _T_1359 = mux(_T_1356, UInt<2>("h02"), _T_1355) @[Misc.scala 39:63]
    node _T_1360 = eq(_T_1246, _T_1240) @[Misc.scala 57:20]
    node s2_victim_dirty = mux(_T_1360, UInt<1>("h01"), _T_1357) @[Misc.scala 39:9]
    node s2_shrink_param = mux(_T_1360, UInt<3>("h03"), _T_1358) @[Misc.scala 39:36]
    node _T_1361 = mux(_T_1360, UInt<2>("h02"), _T_1359) @[Misc.scala 39:63]
    wire voluntaryNewCoh : {state : UInt<2>} @[Metadata.scala 160:20]
    voluntaryNewCoh is invalid @[Metadata.scala 160:20]
    voluntaryNewCoh.state <= _T_1361 @[Metadata.scala 161:16]
    node _T_1365 = eq(s2_hit_state.state, s2_new_hit_state.state) @[Metadata.scala 46:46]
    node s2_update_meta = eq(_T_1365, UInt<1>("h00")) @[Metadata.scala 47:40]
    node _T_1368 = eq(s2_valid_hit, UInt<1>("h00")) @[DCache.scala 173:33]
    node _T_1369 = and(s2_valid, _T_1368) @[DCache.scala 173:30]
    node _T_1370 = and(s2_valid_uncached, io.mem.0.a.ready) @[DCache.scala 173:70]
    node _T_1371 = not(uncachedInFlight[0]) @[DCache.scala 173:116]
    node _T_1373 = eq(_T_1371, UInt<1>("h00")) @[DCache.scala 173:116]
    node _T_1375 = eq(_T_1373, UInt<1>("h00")) @[DCache.scala 173:91]
    node _T_1376 = and(_T_1370, _T_1375) @[DCache.scala 173:88]
    node _T_1378 = eq(_T_1376, UInt<1>("h00")) @[DCache.scala 173:50]
    node _T_1379 = and(_T_1369, _T_1378) @[DCache.scala 173:47]
    io.cpu.s2_nack <= _T_1379 @[DCache.scala 173:18]
    node _T_1381 = eq(s2_valid_hit, UInt<1>("h00")) @[DCache.scala 174:22]
    node _T_1382 = or(_T_1381, s2_update_meta) @[DCache.scala 174:36]
    node _T_1383 = and(s2_valid, _T_1382) @[DCache.scala 174:18]
    when _T_1383 : @[DCache.scala 174:56]
      s1_nack <= UInt<1>("h01") @[DCache.scala 174:66]
      skip @[DCache.scala 174:56]
    node _T_1386 = bits(s1_req.typ, 1, 0) @[AmoAlu.scala 12:17]
    node _T_1388 = dshl(UInt<1>("h01"), _T_1386) @[AmoAlu.scala 14:23]
    node _T_1390 = sub(_T_1388, UInt<1>("h01")) @[AmoAlu.scala 14:32]
    node _T_1391 = asUInt(_T_1390) @[AmoAlu.scala 14:32]
    node _T_1392 = tail(_T_1391, 1) @[AmoAlu.scala 14:32]
    node _T_1393 = bits(_T_1392, 2, 0) @[AmoAlu.scala 14:42]
    node _T_1394 = and(s1_req.addr, _T_1393) @[AmoAlu.scala 14:11]
    node _T_1396 = neq(_T_1394, UInt<1>("h00")) @[AmoAlu.scala 14:65]
    node _T_1397 = and(s1_read, _T_1396) @[DCache.scala 178:32]
    io.cpu.xcpt.ma.ld <= _T_1397 @[DCache.scala 178:21]
    node _T_1399 = dshl(UInt<1>("h01"), _T_1386) @[AmoAlu.scala 14:23]
    node _T_1401 = sub(_T_1399, UInt<1>("h01")) @[AmoAlu.scala 14:32]
    node _T_1402 = asUInt(_T_1401) @[AmoAlu.scala 14:32]
    node _T_1403 = tail(_T_1402, 1) @[AmoAlu.scala 14:32]
    node _T_1404 = bits(_T_1403, 2, 0) @[AmoAlu.scala 14:42]
    node _T_1405 = and(s1_req.addr, _T_1404) @[AmoAlu.scala 14:11]
    node _T_1407 = neq(_T_1405, UInt<1>("h00")) @[AmoAlu.scala 14:65]
    node _T_1408 = and(s1_write, _T_1407) @[DCache.scala 179:33]
    io.cpu.xcpt.ma.st <= _T_1408 @[DCache.scala 179:21]
    node _T_1409 = and(s1_read, tlb.io.resp.xcpt_ld) @[DCache.scala 180:32]
    io.cpu.xcpt.pf.ld <= _T_1409 @[DCache.scala 180:21]
    node _T_1410 = and(s1_write, tlb.io.resp.xcpt_st) @[DCache.scala 181:33]
    io.cpu.xcpt.pf.st <= _T_1410 @[DCache.scala 181:21]
    node _T_1413 = eq(s2_req.cmd, UInt<3>("h06")) @[DCache.scala 184:48]
    node s2_lr = and(UInt<1>("h01"), _T_1413) @[DCache.scala 184:34]
    node _T_1416 = eq(s2_req.cmd, UInt<3>("h07")) @[DCache.scala 185:48]
    node s2_sc = and(UInt<1>("h01"), _T_1416) @[DCache.scala 185:34]
    reg lrscCount : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 186:22]
    node lrscValid = gt(lrscCount, UInt<1>("h00")) @[DCache.scala 187:29]
    reg lrscAddr : UInt, clock @[DCache.scala 188:21]
    node _T_1420 = shr(s2_req.addr, 6) @[DCache.scala 189:70]
    node _T_1421 = eq(lrscAddr, _T_1420) @[DCache.scala 189:53]
    node _T_1422 = and(lrscValid, _T_1421) @[DCache.scala 189:41]
    node _T_1424 = eq(_T_1422, UInt<1>("h00")) @[DCache.scala 189:29]
    node s2_sc_fail = and(s2_sc, _T_1424) @[DCache.scala 189:26]
    node _T_1425 = and(s2_valid_hit, s2_lr) @[DCache.scala 190:22]
    when _T_1425 : @[DCache.scala 190:32]
      lrscCount <= UInt<5>("h01f") @[DCache.scala 191:15]
      node _T_1427 = shr(s2_req.addr, 6) @[DCache.scala 192:29]
      lrscAddr <= _T_1427 @[DCache.scala 192:14]
      skip @[DCache.scala 190:32]
    when lrscValid : @[DCache.scala 194:20]
      node _T_1429 = sub(lrscCount, UInt<1>("h01")) @[DCache.scala 194:45]
      node _T_1430 = asUInt(_T_1429) @[DCache.scala 194:45]
      node _T_1431 = tail(_T_1430, 1) @[DCache.scala 194:45]
      lrscCount <= _T_1431 @[DCache.scala 194:32]
      skip @[DCache.scala 194:20]
    node _T_1432 = and(s2_valid_masked, lrscValid) @[DCache.scala 195:26]
    node _T_1433 = or(_T_1432, io.cpu.invalidate_lr) @[DCache.scala 195:40]
    when _T_1433 : @[DCache.scala 195:65]
      lrscCount <= UInt<1>("h00") @[DCache.scala 195:77]
      skip @[DCache.scala 195:65]
    node _T_1435 = and(s1_valid_not_nacked, s1_write) @[DCache.scala 198:63]
    reg pstore1_cmd : UInt<5>, clock @[Reg.scala 34:16]
    when _T_1435 : @[Reg.scala 35:19]
      pstore1_cmd <= s1_req.cmd @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1437 = and(s1_valid_not_nacked, s1_write) @[DCache.scala 199:63]
    reg pstore1_typ : UInt<3>, clock @[Reg.scala 34:16]
    when _T_1437 : @[Reg.scala 35:19]
      pstore1_typ <= s1_req.typ @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1439 = and(s1_valid_not_nacked, s1_write) @[DCache.scala 200:62]
    reg pstore1_addr : UInt<32>, clock @[Reg.scala 34:16]
    when _T_1439 : @[Reg.scala 35:19]
      pstore1_addr <= tlb.io.resp.paddr @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1441 = and(s1_valid_not_nacked, s1_write) @[DCache.scala 201:68]
    reg pstore1_data : UInt<64>, clock @[Reg.scala 34:16]
    when _T_1441 : @[Reg.scala 35:19]
      pstore1_data <= io.cpu.s1_data @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1443 = and(s1_valid_not_nacked, s1_write) @[DCache.scala 202:63]
    reg pstore1_way : UInt<4>, clock @[Reg.scala 34:16]
    when _T_1443 : @[Reg.scala 35:19]
      pstore1_way <= s1_hit_way @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1445 = bits(pstore1_typ, 1, 0) @[AmoAlu.scala 12:17]
    node _T_1447 = eq(_T_1445, UInt<1>("h00")) @[AmoAlu.scala 28:19]
    node _T_1448 = bits(pstore1_data, 7, 0) @[AmoAlu.scala 28:66]
    node _T_1449 = cat(_T_1448, _T_1448) @[Cat.scala 30:58]
    node _T_1450 = cat(_T_1449, _T_1449) @[Cat.scala 30:58]
    node _T_1451 = cat(_T_1450, _T_1450) @[Cat.scala 30:58]
    node _T_1453 = eq(_T_1445, UInt<1>("h01")) @[AmoAlu.scala 28:19]
    node _T_1454 = bits(pstore1_data, 15, 0) @[AmoAlu.scala 28:66]
    node _T_1455 = cat(_T_1454, _T_1454) @[Cat.scala 30:58]
    node _T_1456 = cat(_T_1455, _T_1455) @[Cat.scala 30:58]
    node _T_1458 = eq(_T_1445, UInt<2>("h02")) @[AmoAlu.scala 28:19]
    node _T_1459 = bits(pstore1_data, 31, 0) @[AmoAlu.scala 28:66]
    node _T_1460 = cat(_T_1459, _T_1459) @[Cat.scala 30:58]
    node _T_1461 = mux(_T_1458, _T_1460, pstore1_data) @[AmoAlu.scala 28:13]
    node _T_1462 = mux(_T_1453, _T_1456, _T_1461) @[AmoAlu.scala 28:13]
    node _T_1463 = mux(_T_1447, _T_1451, _T_1462) @[AmoAlu.scala 28:13]
    wire pstore1_storegen_data : UInt
    pstore1_storegen_data is invalid
    pstore1_storegen_data <= _T_1463
    node _T_1466 = eq(pstore1_cmd, UInt<1>("h00")) @[Consts.scala 35:31]
    node _T_1468 = eq(pstore1_cmd, UInt<3>("h06")) @[Consts.scala 35:48]
    node _T_1469 = or(_T_1466, _T_1468) @[Consts.scala 35:41]
    node _T_1471 = eq(pstore1_cmd, UInt<3>("h07")) @[Consts.scala 35:65]
    node _T_1472 = or(_T_1469, _T_1471) @[Consts.scala 35:58]
    node _T_1473 = bits(pstore1_cmd, 3, 3) @[Consts.scala 33:29]
    node _T_1475 = eq(pstore1_cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_1476 = or(_T_1473, _T_1475) @[Consts.scala 33:33]
    node _T_1477 = or(_T_1472, _T_1476) @[Consts.scala 35:75]
    node pstore1_amo = and(UInt<1>("h01"), _T_1477) @[DCache.scala 205:40]
    node _T_1478 = and(pstore1_valid, pstore2_valid) @[DCache.scala 206:47]
    node _T_1479 = and(s1_valid, s1_write) @[DCache.scala 206:78]
    node _T_1480 = or(_T_1479, pstore1_amo) @[DCache.scala 206:91]
    node pstore_drain_structural = and(_T_1478, _T_1480) @[DCache.scala 206:64]
    node _T_1482 = eq(io.cpu.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 35:31]
    node _T_1484 = eq(io.cpu.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 35:48]
    node _T_1485 = or(_T_1482, _T_1484) @[Consts.scala 35:41]
    node _T_1487 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 35:65]
    node _T_1488 = or(_T_1485, _T_1487) @[Consts.scala 35:58]
    node _T_1489 = bits(io.cpu.req.bits.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_1491 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_1492 = or(_T_1489, _T_1491) @[Consts.scala 33:33]
    node _T_1493 = or(_T_1488, _T_1492) @[Consts.scala 35:75]
    node _T_1494 = and(io.cpu.req.valid, _T_1493) @[DCache.scala 207:55]
    node pstore_drain_opportunistic = eq(_T_1494, UInt<1>("h00")) @[DCache.scala 207:36]
    node pstore_drain_on_miss = or(releaseInFlight, io.cpu.s2_nack) @[DCache.scala 208:46]
    node _T_1497 = and(UInt<1>("h01"), pstore_drain_structural) @[DCache.scala 210:24]
    node _T_1499 = eq(pstore1_amo, UInt<1>("h00")) @[DCache.scala 211:25]
    node _T_1500 = and(pstore1_valid, _T_1499) @[DCache.scala 211:22]
    node _T_1501 = or(_T_1500, pstore2_valid) @[DCache.scala 211:39]
    node _T_1502 = or(pstore_drain_opportunistic, pstore_drain_on_miss) @[DCache.scala 211:88]
    node _T_1503 = and(_T_1501, _T_1502) @[DCache.scala 211:57]
    node pstore_drain = or(_T_1497, _T_1503) @[DCache.scala 210:51]
    node _T_1504 = and(s2_valid_hit, s2_write) @[DCache.scala 213:39]
    node _T_1506 = eq(s2_sc_fail, UInt<1>("h00")) @[DCache.scala 213:54]
    node _T_1507 = and(_T_1504, _T_1506) @[DCache.scala 213:51]
    reg _T_1509 : UInt<1>, clock @[DCache.scala 214:27]
    node _T_1511 = eq(_T_1507, UInt<1>("h00")) @[DCache.scala 215:12]
    node _T_1513 = eq(_T_1509, UInt<1>("h00")) @[DCache.scala 215:31]
    node _T_1514 = or(_T_1511, _T_1513) @[DCache.scala 215:28]
    node _T_1515 = or(_T_1514, reset) @[DCache.scala 215:11]
    node _T_1517 = eq(_T_1515, UInt<1>("h00")) @[DCache.scala 215:11]
    when _T_1517 : @[DCache.scala 215:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:215 assert(!s2_store_valid || !pstore1_held)\n") @[DCache.scala 215:11]
      stop(clock, UInt<1>(1), 1) @[DCache.scala 215:11]
      skip @[DCache.scala 215:11]
    node _T_1518 = or(_T_1507, _T_1509) @[DCache.scala 216:37]
    node _T_1519 = and(_T_1518, pstore2_valid) @[DCache.scala 216:54]
    node _T_1521 = eq(pstore_drain, UInt<1>("h00")) @[DCache.scala 216:74]
    node _T_1522 = and(_T_1519, _T_1521) @[DCache.scala 216:71]
    _T_1509 <= _T_1522 @[DCache.scala 216:18]
    node _T_1523 = or(_T_1507, _T_1509) @[DCache.scala 217:20]
    pstore1_valid <= _T_1523 @[DCache.scala 212:17]
    node _T_1524 = eq(pstore2_valid, pstore_drain) @[DCache.scala 219:57]
    node advance_pstore1 = and(pstore1_valid, _T_1524) @[DCache.scala 219:39]
    node _T_1526 = eq(pstore_drain, UInt<1>("h00")) @[DCache.scala 220:37]
    node _T_1527 = and(pstore2_valid, _T_1526) @[DCache.scala 220:34]
    node _T_1528 = or(_T_1527, advance_pstore1) @[DCache.scala 220:51]
    pstore2_valid <= _T_1528 @[DCache.scala 220:17]
    reg pstore2_addr : UInt<32>, clock @[Reg.scala 34:16]
    when advance_pstore1 : @[Reg.scala 35:19]
      pstore2_addr <= pstore1_addr @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    reg pstore2_way : UInt<4>, clock @[Reg.scala 34:16]
    when advance_pstore1 : @[Reg.scala 35:19]
      pstore2_way <= pstore1_way @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    reg pstore2_storegen_data : UInt, clock @[Reg.scala 34:16]
    when advance_pstore1 : @[Reg.scala 35:19]
      pstore2_storegen_data <= pstore1_storegen_data @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    node _T_1533 = bits(pstore1_addr, 0, 0) @[AmoAlu.scala 19:27]
    node _T_1535 = mux(_T_1533, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1537 = geq(_T_1445, UInt<1>("h01")) @[AmoAlu.scala 19:57]
    node _T_1540 = mux(_T_1537, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1541 = or(_T_1535, _T_1540) @[AmoAlu.scala 19:46]
    node _T_1542 = bits(pstore1_addr, 0, 0) @[AmoAlu.scala 20:27]
    node _T_1544 = mux(_T_1542, UInt<1>("h00"), UInt<1>("h01")) @[AmoAlu.scala 20:22]
    node _T_1545 = cat(_T_1541, _T_1544) @[Cat.scala 30:58]
    node _T_1546 = bits(pstore1_addr, 1, 1) @[AmoAlu.scala 19:27]
    node _T_1548 = mux(_T_1546, _T_1545, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1550 = geq(_T_1445, UInt<2>("h02")) @[AmoAlu.scala 19:57]
    node _T_1553 = mux(_T_1550, UInt<2>("h03"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1554 = or(_T_1548, _T_1553) @[AmoAlu.scala 19:46]
    node _T_1555 = bits(pstore1_addr, 1, 1) @[AmoAlu.scala 20:27]
    node _T_1557 = mux(_T_1555, UInt<1>("h00"), _T_1545) @[AmoAlu.scala 20:22]
    node _T_1558 = cat(_T_1554, _T_1557) @[Cat.scala 30:58]
    node _T_1559 = bits(pstore1_addr, 2, 2) @[AmoAlu.scala 19:27]
    node _T_1561 = mux(_T_1559, _T_1558, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1563 = geq(_T_1445, UInt<2>("h03")) @[AmoAlu.scala 19:57]
    node _T_1566 = mux(_T_1563, UInt<4>("h0f"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1567 = or(_T_1561, _T_1566) @[AmoAlu.scala 19:46]
    node _T_1568 = bits(pstore1_addr, 2, 2) @[AmoAlu.scala 20:27]
    node _T_1570 = mux(_T_1568, UInt<1>("h00"), _T_1558) @[AmoAlu.scala 20:22]
    node _T_1571 = cat(_T_1567, _T_1570) @[Cat.scala 30:58]
    reg pstore2_storegen_mask : UInt<8>, clock @[Reg.scala 34:16]
    when advance_pstore1 : @[Reg.scala 35:19]
      pstore2_storegen_mask <= _T_1571 @[Reg.scala 35:23]
      skip @[Reg.scala 35:19]
    dataArb.io.in[0].valid <= pstore_drain @[DCache.scala 225:26]
    dataArb.io.in[0].bits.write <= UInt<1>("h01") @[DCache.scala 226:31]
    node _T_1574 = mux(pstore2_valid, pstore2_addr, pstore1_addr) @[DCache.scala 227:36]
    dataArb.io.in[0].bits.addr <= _T_1574 @[DCache.scala 227:30]
    node _T_1575 = mux(pstore2_valid, pstore2_way, pstore1_way) @[DCache.scala 228:38]
    dataArb.io.in[0].bits.way_en <= _T_1575 @[DCache.scala 228:32]
    node _T_1576 = mux(pstore2_valid, pstore2_storegen_data, pstore1_storegen_data) @[DCache.scala 229:52]
    dataArb.io.in[0].bits.wdata <= _T_1576 @[DCache.scala 229:31]
    node _T_1577 = mux(pstore2_valid, pstore2_addr, pstore1_addr) @[DCache.scala 230:30]
    node pstore_mask_shift = shl(UInt<1>("h00"), 3) @[DCache.scala 230:106]
    node _T_1580 = bits(pstore1_addr, 0, 0) @[AmoAlu.scala 19:27]
    node _T_1582 = mux(_T_1580, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1584 = geq(_T_1445, UInt<1>("h01")) @[AmoAlu.scala 19:57]
    node _T_1587 = mux(_T_1584, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1588 = or(_T_1582, _T_1587) @[AmoAlu.scala 19:46]
    node _T_1589 = bits(pstore1_addr, 0, 0) @[AmoAlu.scala 20:27]
    node _T_1591 = mux(_T_1589, UInt<1>("h00"), UInt<1>("h01")) @[AmoAlu.scala 20:22]
    node _T_1592 = cat(_T_1588, _T_1591) @[Cat.scala 30:58]
    node _T_1593 = bits(pstore1_addr, 1, 1) @[AmoAlu.scala 19:27]
    node _T_1595 = mux(_T_1593, _T_1592, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1597 = geq(_T_1445, UInt<2>("h02")) @[AmoAlu.scala 19:57]
    node _T_1600 = mux(_T_1597, UInt<2>("h03"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1601 = or(_T_1595, _T_1600) @[AmoAlu.scala 19:46]
    node _T_1602 = bits(pstore1_addr, 1, 1) @[AmoAlu.scala 20:27]
    node _T_1604 = mux(_T_1602, UInt<1>("h00"), _T_1592) @[AmoAlu.scala 20:22]
    node _T_1605 = cat(_T_1601, _T_1604) @[Cat.scala 30:58]
    node _T_1606 = bits(pstore1_addr, 2, 2) @[AmoAlu.scala 19:27]
    node _T_1608 = mux(_T_1606, _T_1605, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1610 = geq(_T_1445, UInt<2>("h03")) @[AmoAlu.scala 19:57]
    node _T_1613 = mux(_T_1610, UInt<4>("h0f"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1614 = or(_T_1608, _T_1613) @[AmoAlu.scala 19:46]
    node _T_1615 = bits(pstore1_addr, 2, 2) @[AmoAlu.scala 20:27]
    node _T_1617 = mux(_T_1615, UInt<1>("h00"), _T_1605) @[AmoAlu.scala 20:22]
    node _T_1618 = cat(_T_1614, _T_1617) @[Cat.scala 30:58]
    node _T_1619 = mux(pstore2_valid, pstore2_storegen_mask, _T_1618) @[DCache.scala 231:37]
    node _T_1620 = dshl(_T_1619, pstore_mask_shift) @[DCache.scala 231:99]
    dataArb.io.in[0].bits.wmask <= _T_1620 @[DCache.scala 231:31]
    node s1_idx = bits(s1_req.addr, 11, 3) @[DCache.scala 234:27]
    node _T_1621 = bits(pstore1_addr, 11, 3) @[DCache.scala 236:36]
    node _T_1622 = eq(_T_1621, s1_idx) @[DCache.scala 236:58]
    node _T_1623 = and(pstore1_valid, _T_1622) @[DCache.scala 236:21]
    node _T_1625 = bits(pstore1_addr, 0, 0) @[AmoAlu.scala 19:27]
    node _T_1627 = mux(_T_1625, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1629 = geq(_T_1445, UInt<1>("h01")) @[AmoAlu.scala 19:57]
    node _T_1632 = mux(_T_1629, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1633 = or(_T_1627, _T_1632) @[AmoAlu.scala 19:46]
    node _T_1634 = bits(pstore1_addr, 0, 0) @[AmoAlu.scala 20:27]
    node _T_1636 = mux(_T_1634, UInt<1>("h00"), UInt<1>("h01")) @[AmoAlu.scala 20:22]
    node _T_1637 = cat(_T_1633, _T_1636) @[Cat.scala 30:58]
    node _T_1638 = bits(pstore1_addr, 1, 1) @[AmoAlu.scala 19:27]
    node _T_1640 = mux(_T_1638, _T_1637, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1642 = geq(_T_1445, UInt<2>("h02")) @[AmoAlu.scala 19:57]
    node _T_1645 = mux(_T_1642, UInt<2>("h03"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1646 = or(_T_1640, _T_1645) @[AmoAlu.scala 19:46]
    node _T_1647 = bits(pstore1_addr, 1, 1) @[AmoAlu.scala 20:27]
    node _T_1649 = mux(_T_1647, UInt<1>("h00"), _T_1637) @[AmoAlu.scala 20:22]
    node _T_1650 = cat(_T_1646, _T_1649) @[Cat.scala 30:58]
    node _T_1651 = bits(pstore1_addr, 2, 2) @[AmoAlu.scala 19:27]
    node _T_1653 = mux(_T_1651, _T_1650, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1655 = geq(_T_1445, UInt<2>("h03")) @[AmoAlu.scala 19:57]
    node _T_1658 = mux(_T_1655, UInt<4>("h0f"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1659 = or(_T_1653, _T_1658) @[AmoAlu.scala 19:46]
    node _T_1660 = bits(pstore1_addr, 2, 2) @[AmoAlu.scala 20:27]
    node _T_1662 = mux(_T_1660, UInt<1>("h00"), _T_1650) @[AmoAlu.scala 20:22]
    node _T_1663 = cat(_T_1659, _T_1662) @[Cat.scala 30:58]
    node _T_1665 = bits(s1_req.addr, 0, 0) @[AmoAlu.scala 19:27]
    node _T_1667 = mux(_T_1665, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1669 = geq(_T_1386, UInt<1>("h01")) @[AmoAlu.scala 19:57]
    node _T_1672 = mux(_T_1669, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1673 = or(_T_1667, _T_1672) @[AmoAlu.scala 19:46]
    node _T_1674 = bits(s1_req.addr, 0, 0) @[AmoAlu.scala 20:27]
    node _T_1676 = mux(_T_1674, UInt<1>("h00"), UInt<1>("h01")) @[AmoAlu.scala 20:22]
    node _T_1677 = cat(_T_1673, _T_1676) @[Cat.scala 30:58]
    node _T_1678 = bits(s1_req.addr, 1, 1) @[AmoAlu.scala 19:27]
    node _T_1680 = mux(_T_1678, _T_1677, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1682 = geq(_T_1386, UInt<2>("h02")) @[AmoAlu.scala 19:57]
    node _T_1685 = mux(_T_1682, UInt<2>("h03"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1686 = or(_T_1680, _T_1685) @[AmoAlu.scala 19:46]
    node _T_1687 = bits(s1_req.addr, 1, 1) @[AmoAlu.scala 20:27]
    node _T_1689 = mux(_T_1687, UInt<1>("h00"), _T_1677) @[AmoAlu.scala 20:22]
    node _T_1690 = cat(_T_1686, _T_1689) @[Cat.scala 30:58]
    node _T_1691 = bits(s1_req.addr, 2, 2) @[AmoAlu.scala 19:27]
    node _T_1693 = mux(_T_1691, _T_1690, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1695 = geq(_T_1386, UInt<2>("h03")) @[AmoAlu.scala 19:57]
    node _T_1698 = mux(_T_1695, UInt<4>("h0f"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1699 = or(_T_1693, _T_1698) @[AmoAlu.scala 19:46]
    node _T_1700 = bits(s1_req.addr, 2, 2) @[AmoAlu.scala 20:27]
    node _T_1702 = mux(_T_1700, UInt<1>("h00"), _T_1690) @[AmoAlu.scala 20:22]
    node _T_1703 = cat(_T_1699, _T_1702) @[Cat.scala 30:58]
    node _T_1704 = and(_T_1663, _T_1703) @[DCache.scala 236:95]
    node _T_1706 = neq(_T_1704, UInt<1>("h00")) @[DCache.scala 236:115]
    node _T_1707 = and(_T_1623, _T_1706) @[DCache.scala 236:69]
    node _T_1708 = bits(pstore2_addr, 11, 3) @[DCache.scala 237:36]
    node _T_1709 = eq(_T_1708, s1_idx) @[DCache.scala 237:58]
    node _T_1710 = and(pstore2_valid, _T_1709) @[DCache.scala 237:21]
    node _T_1712 = bits(s1_req.addr, 0, 0) @[AmoAlu.scala 19:27]
    node _T_1714 = mux(_T_1712, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1716 = geq(_T_1386, UInt<1>("h01")) @[AmoAlu.scala 19:57]
    node _T_1719 = mux(_T_1716, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1720 = or(_T_1714, _T_1719) @[AmoAlu.scala 19:46]
    node _T_1721 = bits(s1_req.addr, 0, 0) @[AmoAlu.scala 20:27]
    node _T_1723 = mux(_T_1721, UInt<1>("h00"), UInt<1>("h01")) @[AmoAlu.scala 20:22]
    node _T_1724 = cat(_T_1720, _T_1723) @[Cat.scala 30:58]
    node _T_1725 = bits(s1_req.addr, 1, 1) @[AmoAlu.scala 19:27]
    node _T_1727 = mux(_T_1725, _T_1724, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1729 = geq(_T_1386, UInt<2>("h02")) @[AmoAlu.scala 19:57]
    node _T_1732 = mux(_T_1729, UInt<2>("h03"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1733 = or(_T_1727, _T_1732) @[AmoAlu.scala 19:46]
    node _T_1734 = bits(s1_req.addr, 1, 1) @[AmoAlu.scala 20:27]
    node _T_1736 = mux(_T_1734, UInt<1>("h00"), _T_1724) @[AmoAlu.scala 20:22]
    node _T_1737 = cat(_T_1733, _T_1736) @[Cat.scala 30:58]
    node _T_1738 = bits(s1_req.addr, 2, 2) @[AmoAlu.scala 19:27]
    node _T_1740 = mux(_T_1738, _T_1737, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_1742 = geq(_T_1386, UInt<2>("h03")) @[AmoAlu.scala 19:57]
    node _T_1745 = mux(_T_1742, UInt<4>("h0f"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_1746 = or(_T_1740, _T_1745) @[AmoAlu.scala 19:46]
    node _T_1747 = bits(s1_req.addr, 2, 2) @[AmoAlu.scala 20:27]
    node _T_1749 = mux(_T_1747, UInt<1>("h00"), _T_1737) @[AmoAlu.scala 20:22]
    node _T_1750 = cat(_T_1746, _T_1749) @[Cat.scala 30:58]
    node _T_1751 = and(pstore2_storegen_mask, _T_1750) @[DCache.scala 237:95]
    node _T_1753 = neq(_T_1751, UInt<1>("h00")) @[DCache.scala 237:115]
    node _T_1754 = and(_T_1710, _T_1753) @[DCache.scala 237:69]
    node _T_1755 = or(_T_1707, _T_1754) @[DCache.scala 236:120]
    node s1_raw_hazard = and(s1_read, _T_1755) @[DCache.scala 235:31]
    node _T_1756 = and(s1_valid, s1_raw_hazard) @[DCache.scala 238:18]
    when _T_1756 : @[DCache.scala 238:36]
      s1_nack <= UInt<1>("h01") @[DCache.scala 238:46]
      skip @[DCache.scala 238:36]
    node _T_1758 = and(s2_valid_hit, s2_update_meta) @[DCache.scala 240:48]
    node _T_1760 = eq(s2_victim_dirty, UInt<1>("h00")) @[DCache.scala 240:87]
    node _T_1761 = and(s2_victimize, _T_1760) @[DCache.scala 240:84]
    node _T_1762 = or(_T_1758, _T_1761) @[DCache.scala 240:67]
    metaWriteArb.io.in[0].valid <= _T_1762 @[DCache.scala 240:31]
    metaWriteArb.io.in[0].bits.way_en <= s2_victim_way @[DCache.scala 241:37]
    node _T_1763 = bits(s2_req.addr, 11, 6) @[DCache.scala 242:48]
    metaWriteArb.io.in[0].bits.idx <= _T_1763 @[DCache.scala 242:34]
    wire _T_1767 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_1767 is invalid @[Metadata.scala 160:20]
    _T_1767.state <= UInt<2>("h00") @[Metadata.scala 161:16]
    node _T_1769 = mux(s2_valid_hit, s2_new_hit_state, _T_1767) @[DCache.scala 243:45]
    metaWriteArb.io.in[0].bits.data.coh <- _T_1769 @[DCache.scala 243:39]
    node _T_1771 = bits(s2_req.addr, 31, 12) @[DCache.scala 244:53]
    metaWriteArb.io.in[0].bits.data.tag <= _T_1771 @[DCache.scala 244:39]
    node _T_1772 = not(uncachedInFlight[0]) @[DCache.scala 247:34]
    node _T_1773 = bits(_T_1772, 0, 0) @[OneHot.scala 39:40]
    node a_size = bits(s2_req.typ, 1, 0) @[DCache.scala 250:26]
    node _T_1775 = eq(_T_1445, UInt<1>("h00")) @[AmoAlu.scala 28:19]
    node _T_1776 = bits(pstore1_data, 7, 0) @[AmoAlu.scala 28:66]
    node _T_1777 = cat(_T_1776, _T_1776) @[Cat.scala 30:58]
    node _T_1778 = cat(_T_1777, _T_1777) @[Cat.scala 30:58]
    node _T_1779 = cat(_T_1778, _T_1778) @[Cat.scala 30:58]
    node _T_1781 = eq(_T_1445, UInt<1>("h01")) @[AmoAlu.scala 28:19]
    node _T_1782 = bits(pstore1_data, 15, 0) @[AmoAlu.scala 28:66]
    node _T_1783 = cat(_T_1782, _T_1782) @[Cat.scala 30:58]
    node _T_1784 = cat(_T_1783, _T_1783) @[Cat.scala 30:58]
    node _T_1786 = eq(_T_1445, UInt<2>("h02")) @[AmoAlu.scala 28:19]
    node _T_1787 = bits(pstore1_data, 31, 0) @[AmoAlu.scala 28:66]
    node _T_1788 = cat(_T_1787, _T_1787) @[Cat.scala 30:58]
    node _T_1789 = mux(_T_1786, _T_1788, pstore1_data) @[AmoAlu.scala 28:13]
    node _T_1790 = mux(_T_1781, _T_1784, _T_1789) @[AmoAlu.scala 28:13]
    node a_data = mux(_T_1775, _T_1779, _T_1790) @[AmoAlu.scala 28:13]
    node _T_1794 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 63:32]
    node _T_1796 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 63:42]
    node _T_1797 = and(_T_1794, _T_1796) @[Parameters.scala 63:37]
    node _T_1798 = or(UInt<1>("h00"), _T_1797) @[Parameters.scala 132:31]
    node _T_1800 = xor(acquire_address, UInt<28>("h08000000")) @[Parameters.scala 117:31]
    node _T_1801 = cvt(_T_1800) @[Parameters.scala 117:49]
    node _T_1803 = and(_T_1801, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_1804 = asSInt(_T_1803) @[Parameters.scala 117:52]
    node _T_1806 = eq(_T_1804, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_1808 = xor(acquire_address, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_1809 = cvt(_T_1808) @[Parameters.scala 117:49]
    node _T_1811 = and(_T_1809, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_1812 = asSInt(_T_1811) @[Parameters.scala 117:52]
    node _T_1814 = eq(_T_1812, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_1815 = or(_T_1806, _T_1814) @[Parameters.scala 133:42]
    node _T_1816 = and(_T_1798, _T_1815) @[Parameters.scala 132:56]
    node _T_1819 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_1821 = xor(acquire_address, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_1822 = cvt(_T_1821) @[Parameters.scala 117:49]
    node _T_1824 = and(_T_1822, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_1825 = asSInt(_T_1824) @[Parameters.scala 117:52]
    node _T_1827 = eq(_T_1825, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_1829 = xor(acquire_address, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_1830 = cvt(_T_1829) @[Parameters.scala 117:49]
    node _T_1832 = and(_T_1830, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_1833 = asSInt(_T_1832) @[Parameters.scala 117:52]
    node _T_1835 = eq(_T_1833, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_1837 = xor(acquire_address, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_1838 = cvt(_T_1837) @[Parameters.scala 117:49]
    node _T_1840 = and(_T_1838, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_1841 = asSInt(_T_1840) @[Parameters.scala 117:52]
    node _T_1843 = eq(_T_1841, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_1844 = or(_T_1827, _T_1835) @[Parameters.scala 133:42]
    node _T_1845 = or(_T_1844, _T_1843) @[Parameters.scala 133:42]
    node _T_1846 = and(_T_1819, _T_1845) @[Parameters.scala 132:56]
    node _T_1848 = or(UInt<1>("h00"), _T_1816) @[Parameters.scala 134:30]
    node _T_1849 = or(_T_1848, _T_1846) @[Parameters.scala 134:30]
    wire acquire : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 262:17]
    acquire is invalid @[Edges.scala 262:17]
    acquire.opcode <= UInt<3>("h06") @[Edges.scala 263:15]
    acquire.param <= s2_grow_param @[Edges.scala 264:15]
    acquire.size <= UInt<3>("h06") @[Edges.scala 265:15]
    acquire.source <= UInt<1>("h00") @[Edges.scala 266:15]
    acquire.address <= acquire_address @[Edges.scala 267:15]
    node _T_1868 = dshl(UInt<1>("h01"), UInt<2>("h02")) @[OneHot.scala 49:12]
    node _T_1869 = bits(_T_1868, 2, 0) @[OneHot.scala 49:37]
    node _T_1871 = geq(UInt<3>("h06"), UInt<2>("h03")) @[package.scala 41:21]
    node _T_1873 = bits(_T_1869, 2, 2) @[package.scala 44:26]
    node _T_1874 = bits(acquire_address, 2, 2) @[package.scala 45:26]
    node _T_1876 = eq(_T_1874, UInt<1>("h00")) @[package.scala 46:20]
    node _T_1877 = and(UInt<1>("h01"), _T_1876) @[package.scala 49:27]
    node _T_1878 = and(_T_1873, _T_1877) @[package.scala 50:38]
    node _T_1879 = or(_T_1871, _T_1878) @[package.scala 50:29]
    node _T_1880 = and(UInt<1>("h01"), _T_1874) @[package.scala 49:27]
    node _T_1881 = and(_T_1873, _T_1880) @[package.scala 50:38]
    node _T_1882 = or(_T_1871, _T_1881) @[package.scala 50:29]
    node _T_1883 = bits(_T_1869, 1, 1) @[package.scala 44:26]
    node _T_1884 = bits(acquire_address, 1, 1) @[package.scala 45:26]
    node _T_1886 = eq(_T_1884, UInt<1>("h00")) @[package.scala 46:20]
    node _T_1887 = and(_T_1877, _T_1886) @[package.scala 49:27]
    node _T_1888 = and(_T_1883, _T_1887) @[package.scala 50:38]
    node _T_1889 = or(_T_1879, _T_1888) @[package.scala 50:29]
    node _T_1890 = and(_T_1877, _T_1884) @[package.scala 49:27]
    node _T_1891 = and(_T_1883, _T_1890) @[package.scala 50:38]
    node _T_1892 = or(_T_1879, _T_1891) @[package.scala 50:29]
    node _T_1893 = and(_T_1880, _T_1886) @[package.scala 49:27]
    node _T_1894 = and(_T_1883, _T_1893) @[package.scala 50:38]
    node _T_1895 = or(_T_1882, _T_1894) @[package.scala 50:29]
    node _T_1896 = and(_T_1880, _T_1884) @[package.scala 49:27]
    node _T_1897 = and(_T_1883, _T_1896) @[package.scala 50:38]
    node _T_1898 = or(_T_1882, _T_1897) @[package.scala 50:29]
    node _T_1899 = bits(_T_1869, 0, 0) @[package.scala 44:26]
    node _T_1900 = bits(acquire_address, 0, 0) @[package.scala 45:26]
    node _T_1902 = eq(_T_1900, UInt<1>("h00")) @[package.scala 46:20]
    node _T_1903 = and(_T_1887, _T_1902) @[package.scala 49:27]
    node _T_1904 = and(_T_1899, _T_1903) @[package.scala 50:38]
    node _T_1905 = or(_T_1889, _T_1904) @[package.scala 50:29]
    node _T_1906 = and(_T_1887, _T_1900) @[package.scala 49:27]
    node _T_1907 = and(_T_1899, _T_1906) @[package.scala 50:38]
    node _T_1908 = or(_T_1889, _T_1907) @[package.scala 50:29]
    node _T_1909 = and(_T_1890, _T_1902) @[package.scala 49:27]
    node _T_1910 = and(_T_1899, _T_1909) @[package.scala 50:38]
    node _T_1911 = or(_T_1892, _T_1910) @[package.scala 50:29]
    node _T_1912 = and(_T_1890, _T_1900) @[package.scala 49:27]
    node _T_1913 = and(_T_1899, _T_1912) @[package.scala 50:38]
    node _T_1914 = or(_T_1892, _T_1913) @[package.scala 50:29]
    node _T_1915 = and(_T_1893, _T_1902) @[package.scala 49:27]
    node _T_1916 = and(_T_1899, _T_1915) @[package.scala 50:38]
    node _T_1917 = or(_T_1895, _T_1916) @[package.scala 50:29]
    node _T_1918 = and(_T_1893, _T_1900) @[package.scala 49:27]
    node _T_1919 = and(_T_1899, _T_1918) @[package.scala 50:38]
    node _T_1920 = or(_T_1895, _T_1919) @[package.scala 50:29]
    node _T_1921 = and(_T_1896, _T_1902) @[package.scala 49:27]
    node _T_1922 = and(_T_1899, _T_1921) @[package.scala 50:38]
    node _T_1923 = or(_T_1898, _T_1922) @[package.scala 50:29]
    node _T_1924 = and(_T_1896, _T_1900) @[package.scala 49:27]
    node _T_1925 = and(_T_1899, _T_1924) @[package.scala 50:38]
    node _T_1926 = or(_T_1898, _T_1925) @[package.scala 50:29]
    node _T_1927 = cat(_T_1908, _T_1905) @[Cat.scala 30:58]
    node _T_1928 = cat(_T_1914, _T_1911) @[Cat.scala 30:58]
    node _T_1929 = cat(_T_1928, _T_1927) @[Cat.scala 30:58]
    node _T_1930 = cat(_T_1920, _T_1917) @[Cat.scala 30:58]
    node _T_1931 = cat(_T_1926, _T_1923) @[Cat.scala 30:58]
    node _T_1932 = cat(_T_1931, _T_1930) @[Cat.scala 30:58]
    node _T_1933 = cat(_T_1932, _T_1929) @[Cat.scala 30:58]
    acquire.mask <= _T_1933 @[Edges.scala 268:15]
    acquire.data <= UInt<1>("h00") @[Edges.scala 269:15]
    node _T_1937 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_1939 = leq(a_size, UInt<3>("h06")) @[Parameters.scala 63:42]
    node _T_1940 = and(_T_1937, _T_1939) @[Parameters.scala 63:37]
    node _T_1941 = or(UInt<1>("h00"), _T_1940) @[Parameters.scala 132:31]
    node _T_1943 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_1944 = cvt(_T_1943) @[Parameters.scala 117:49]
    node _T_1946 = and(_T_1944, asSInt(UInt<31>("h020000000"))) @[Parameters.scala 117:52]
    node _T_1947 = asSInt(_T_1946) @[Parameters.scala 117:52]
    node _T_1949 = eq(_T_1947, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_1950 = and(_T_1941, _T_1949) @[Parameters.scala 132:56]
    node _T_1953 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_1955 = leq(a_size, UInt<4>("h08")) @[Parameters.scala 63:42]
    node _T_1956 = and(_T_1953, _T_1955) @[Parameters.scala 63:37]
    node _T_1957 = or(UInt<1>("h00"), _T_1956) @[Parameters.scala 132:31]
    node _T_1959 = xor(s2_req.addr, UInt<30>("h020000000")) @[Parameters.scala 117:31]
    node _T_1960 = cvt(_T_1959) @[Parameters.scala 117:49]
    node _T_1962 = and(_T_1960, asSInt(UInt<31>("h020000000"))) @[Parameters.scala 117:52]
    node _T_1963 = asSInt(_T_1962) @[Parameters.scala 117:52]
    node _T_1965 = eq(_T_1963, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_1966 = and(_T_1957, _T_1965) @[Parameters.scala 132:56]
    node _T_1968 = or(UInt<1>("h00"), _T_1950) @[Parameters.scala 134:30]
    node _T_1969 = or(_T_1968, _T_1966) @[Parameters.scala 134:30]
    wire get : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 342:17]
    get is invalid @[Edges.scala 342:17]
    get.opcode <= UInt<3>("h04") @[Edges.scala 343:15]
    get.param <= UInt<1>("h00") @[Edges.scala 344:15]
    get.size <= a_size @[Edges.scala 345:15]
    get.source <= UInt<1>("h00") @[Edges.scala 346:15]
    get.address <= s2_req.addr @[Edges.scala 347:15]
    node _T_1988 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_1989 = dshl(UInt<1>("h01"), _T_1988) @[OneHot.scala 49:12]
    node _T_1990 = bits(_T_1989, 2, 0) @[OneHot.scala 49:37]
    node _T_1992 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_1994 = bits(_T_1990, 2, 2) @[package.scala 44:26]
    node _T_1995 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_1997 = eq(_T_1995, UInt<1>("h00")) @[package.scala 46:20]
    node _T_1998 = and(UInt<1>("h01"), _T_1997) @[package.scala 49:27]
    node _T_1999 = and(_T_1994, _T_1998) @[package.scala 50:38]
    node _T_2000 = or(_T_1992, _T_1999) @[package.scala 50:29]
    node _T_2001 = and(UInt<1>("h01"), _T_1995) @[package.scala 49:27]
    node _T_2002 = and(_T_1994, _T_2001) @[package.scala 50:38]
    node _T_2003 = or(_T_1992, _T_2002) @[package.scala 50:29]
    node _T_2004 = bits(_T_1990, 1, 1) @[package.scala 44:26]
    node _T_2005 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_2007 = eq(_T_2005, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2008 = and(_T_1998, _T_2007) @[package.scala 49:27]
    node _T_2009 = and(_T_2004, _T_2008) @[package.scala 50:38]
    node _T_2010 = or(_T_2000, _T_2009) @[package.scala 50:29]
    node _T_2011 = and(_T_1998, _T_2005) @[package.scala 49:27]
    node _T_2012 = and(_T_2004, _T_2011) @[package.scala 50:38]
    node _T_2013 = or(_T_2000, _T_2012) @[package.scala 50:29]
    node _T_2014 = and(_T_2001, _T_2007) @[package.scala 49:27]
    node _T_2015 = and(_T_2004, _T_2014) @[package.scala 50:38]
    node _T_2016 = or(_T_2003, _T_2015) @[package.scala 50:29]
    node _T_2017 = and(_T_2001, _T_2005) @[package.scala 49:27]
    node _T_2018 = and(_T_2004, _T_2017) @[package.scala 50:38]
    node _T_2019 = or(_T_2003, _T_2018) @[package.scala 50:29]
    node _T_2020 = bits(_T_1990, 0, 0) @[package.scala 44:26]
    node _T_2021 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_2023 = eq(_T_2021, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2024 = and(_T_2008, _T_2023) @[package.scala 49:27]
    node _T_2025 = and(_T_2020, _T_2024) @[package.scala 50:38]
    node _T_2026 = or(_T_2010, _T_2025) @[package.scala 50:29]
    node _T_2027 = and(_T_2008, _T_2021) @[package.scala 49:27]
    node _T_2028 = and(_T_2020, _T_2027) @[package.scala 50:38]
    node _T_2029 = or(_T_2010, _T_2028) @[package.scala 50:29]
    node _T_2030 = and(_T_2011, _T_2023) @[package.scala 49:27]
    node _T_2031 = and(_T_2020, _T_2030) @[package.scala 50:38]
    node _T_2032 = or(_T_2013, _T_2031) @[package.scala 50:29]
    node _T_2033 = and(_T_2011, _T_2021) @[package.scala 49:27]
    node _T_2034 = and(_T_2020, _T_2033) @[package.scala 50:38]
    node _T_2035 = or(_T_2013, _T_2034) @[package.scala 50:29]
    node _T_2036 = and(_T_2014, _T_2023) @[package.scala 49:27]
    node _T_2037 = and(_T_2020, _T_2036) @[package.scala 50:38]
    node _T_2038 = or(_T_2016, _T_2037) @[package.scala 50:29]
    node _T_2039 = and(_T_2014, _T_2021) @[package.scala 49:27]
    node _T_2040 = and(_T_2020, _T_2039) @[package.scala 50:38]
    node _T_2041 = or(_T_2016, _T_2040) @[package.scala 50:29]
    node _T_2042 = and(_T_2017, _T_2023) @[package.scala 49:27]
    node _T_2043 = and(_T_2020, _T_2042) @[package.scala 50:38]
    node _T_2044 = or(_T_2019, _T_2043) @[package.scala 50:29]
    node _T_2045 = and(_T_2017, _T_2021) @[package.scala 49:27]
    node _T_2046 = and(_T_2020, _T_2045) @[package.scala 50:38]
    node _T_2047 = or(_T_2019, _T_2046) @[package.scala 50:29]
    node _T_2048 = cat(_T_2029, _T_2026) @[Cat.scala 30:58]
    node _T_2049 = cat(_T_2035, _T_2032) @[Cat.scala 30:58]
    node _T_2050 = cat(_T_2049, _T_2048) @[Cat.scala 30:58]
    node _T_2051 = cat(_T_2041, _T_2038) @[Cat.scala 30:58]
    node _T_2052 = cat(_T_2047, _T_2044) @[Cat.scala 30:58]
    node _T_2053 = cat(_T_2052, _T_2051) @[Cat.scala 30:58]
    node _T_2054 = cat(_T_2053, _T_2050) @[Cat.scala 30:58]
    get.mask <= _T_2054 @[Edges.scala 348:15]
    get.data <= UInt<1>("h00") @[Edges.scala 349:15]
    node _T_2058 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_2060 = leq(a_size, UInt<3>("h06")) @[Parameters.scala 63:42]
    node _T_2061 = and(_T_2058, _T_2060) @[Parameters.scala 63:37]
    node _T_2062 = or(UInt<1>("h00"), _T_2061) @[Parameters.scala 132:31]
    node _T_2064 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_2065 = cvt(_T_2064) @[Parameters.scala 117:49]
    node _T_2067 = and(_T_2065, asSInt(UInt<33>("h0fa000000"))) @[Parameters.scala 117:52]
    node _T_2068 = asSInt(_T_2067) @[Parameters.scala 117:52]
    node _T_2070 = eq(_T_2068, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2072 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_2073 = cvt(_T_2072) @[Parameters.scala 117:49]
    node _T_2075 = and(_T_2073, asSInt(UInt<33>("h0fbff1000"))) @[Parameters.scala 117:52]
    node _T_2076 = asSInt(_T_2075) @[Parameters.scala 117:52]
    node _T_2078 = eq(_T_2076, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2080 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_2081 = cvt(_T_2080) @[Parameters.scala 117:49]
    node _T_2083 = and(_T_2081, asSInt(UInt<33>("h0fbff0000"))) @[Parameters.scala 117:52]
    node _T_2084 = asSInt(_T_2083) @[Parameters.scala 117:52]
    node _T_2086 = eq(_T_2084, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2088 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_2089 = cvt(_T_2088) @[Parameters.scala 117:49]
    node _T_2091 = and(_T_2089, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_2092 = asSInt(_T_2091) @[Parameters.scala 117:52]
    node _T_2094 = eq(_T_2092, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2096 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 117:31]
    node _T_2097 = cvt(_T_2096) @[Parameters.scala 117:49]
    node _T_2099 = and(_T_2097, asSInt(UInt<33>("h0f8000000"))) @[Parameters.scala 117:52]
    node _T_2100 = asSInt(_T_2099) @[Parameters.scala 117:52]
    node _T_2102 = eq(_T_2100, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2103 = or(_T_2070, _T_2078) @[Parameters.scala 133:42]
    node _T_2104 = or(_T_2103, _T_2086) @[Parameters.scala 133:42]
    node _T_2105 = or(_T_2104, _T_2094) @[Parameters.scala 133:42]
    node _T_2106 = or(_T_2105, _T_2102) @[Parameters.scala 133:42]
    node _T_2107 = and(_T_2062, _T_2106) @[Parameters.scala 132:56]
    node _T_2110 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_2112 = leq(a_size, UInt<4>("h08")) @[Parameters.scala 63:42]
    node _T_2113 = and(_T_2110, _T_2112) @[Parameters.scala 63:37]
    node _T_2114 = or(UInt<1>("h00"), _T_2113) @[Parameters.scala 132:31]
    node _T_2116 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_2117 = cvt(_T_2116) @[Parameters.scala 117:49]
    node _T_2119 = and(_T_2117, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_2120 = asSInt(_T_2119) @[Parameters.scala 117:52]
    node _T_2122 = eq(_T_2120, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2123 = and(_T_2114, _T_2122) @[Parameters.scala 132:56]
    node _T_2126 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_2128 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_2129 = cvt(_T_2128) @[Parameters.scala 117:49]
    node _T_2131 = and(_T_2129, asSInt(UInt<33>("h0fbff1000"))) @[Parameters.scala 117:52]
    node _T_2132 = asSInt(_T_2131) @[Parameters.scala 117:52]
    node _T_2134 = eq(_T_2132, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2135 = and(_T_2126, _T_2134) @[Parameters.scala 132:56]
    node _T_2137 = or(UInt<1>("h00"), _T_2107) @[Parameters.scala 134:30]
    node _T_2138 = or(_T_2137, _T_2123) @[Parameters.scala 134:30]
    node _T_2139 = or(_T_2138, _T_2135) @[Parameters.scala 134:30]
    wire put : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 356:17]
    put is invalid @[Edges.scala 356:17]
    put.opcode <= UInt<1>("h00") @[Edges.scala 357:15]
    put.param <= UInt<1>("h00") @[Edges.scala 358:15]
    put.size <= a_size @[Edges.scala 359:15]
    put.source <= UInt<1>("h00") @[Edges.scala 360:15]
    put.address <= s2_req.addr @[Edges.scala 361:15]
    node _T_2158 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_2159 = dshl(UInt<1>("h01"), _T_2158) @[OneHot.scala 49:12]
    node _T_2160 = bits(_T_2159, 2, 0) @[OneHot.scala 49:37]
    node _T_2162 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_2164 = bits(_T_2160, 2, 2) @[package.scala 44:26]
    node _T_2165 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_2167 = eq(_T_2165, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2168 = and(UInt<1>("h01"), _T_2167) @[package.scala 49:27]
    node _T_2169 = and(_T_2164, _T_2168) @[package.scala 50:38]
    node _T_2170 = or(_T_2162, _T_2169) @[package.scala 50:29]
    node _T_2171 = and(UInt<1>("h01"), _T_2165) @[package.scala 49:27]
    node _T_2172 = and(_T_2164, _T_2171) @[package.scala 50:38]
    node _T_2173 = or(_T_2162, _T_2172) @[package.scala 50:29]
    node _T_2174 = bits(_T_2160, 1, 1) @[package.scala 44:26]
    node _T_2175 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_2177 = eq(_T_2175, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2178 = and(_T_2168, _T_2177) @[package.scala 49:27]
    node _T_2179 = and(_T_2174, _T_2178) @[package.scala 50:38]
    node _T_2180 = or(_T_2170, _T_2179) @[package.scala 50:29]
    node _T_2181 = and(_T_2168, _T_2175) @[package.scala 49:27]
    node _T_2182 = and(_T_2174, _T_2181) @[package.scala 50:38]
    node _T_2183 = or(_T_2170, _T_2182) @[package.scala 50:29]
    node _T_2184 = and(_T_2171, _T_2177) @[package.scala 49:27]
    node _T_2185 = and(_T_2174, _T_2184) @[package.scala 50:38]
    node _T_2186 = or(_T_2173, _T_2185) @[package.scala 50:29]
    node _T_2187 = and(_T_2171, _T_2175) @[package.scala 49:27]
    node _T_2188 = and(_T_2174, _T_2187) @[package.scala 50:38]
    node _T_2189 = or(_T_2173, _T_2188) @[package.scala 50:29]
    node _T_2190 = bits(_T_2160, 0, 0) @[package.scala 44:26]
    node _T_2191 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_2193 = eq(_T_2191, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2194 = and(_T_2178, _T_2193) @[package.scala 49:27]
    node _T_2195 = and(_T_2190, _T_2194) @[package.scala 50:38]
    node _T_2196 = or(_T_2180, _T_2195) @[package.scala 50:29]
    node _T_2197 = and(_T_2178, _T_2191) @[package.scala 49:27]
    node _T_2198 = and(_T_2190, _T_2197) @[package.scala 50:38]
    node _T_2199 = or(_T_2180, _T_2198) @[package.scala 50:29]
    node _T_2200 = and(_T_2181, _T_2193) @[package.scala 49:27]
    node _T_2201 = and(_T_2190, _T_2200) @[package.scala 50:38]
    node _T_2202 = or(_T_2183, _T_2201) @[package.scala 50:29]
    node _T_2203 = and(_T_2181, _T_2191) @[package.scala 49:27]
    node _T_2204 = and(_T_2190, _T_2203) @[package.scala 50:38]
    node _T_2205 = or(_T_2183, _T_2204) @[package.scala 50:29]
    node _T_2206 = and(_T_2184, _T_2193) @[package.scala 49:27]
    node _T_2207 = and(_T_2190, _T_2206) @[package.scala 50:38]
    node _T_2208 = or(_T_2186, _T_2207) @[package.scala 50:29]
    node _T_2209 = and(_T_2184, _T_2191) @[package.scala 49:27]
    node _T_2210 = and(_T_2190, _T_2209) @[package.scala 50:38]
    node _T_2211 = or(_T_2186, _T_2210) @[package.scala 50:29]
    node _T_2212 = and(_T_2187, _T_2193) @[package.scala 49:27]
    node _T_2213 = and(_T_2190, _T_2212) @[package.scala 50:38]
    node _T_2214 = or(_T_2189, _T_2213) @[package.scala 50:29]
    node _T_2215 = and(_T_2187, _T_2191) @[package.scala 49:27]
    node _T_2216 = and(_T_2190, _T_2215) @[package.scala 50:38]
    node _T_2217 = or(_T_2189, _T_2216) @[package.scala 50:29]
    node _T_2218 = cat(_T_2199, _T_2196) @[Cat.scala 30:58]
    node _T_2219 = cat(_T_2205, _T_2202) @[Cat.scala 30:58]
    node _T_2220 = cat(_T_2219, _T_2218) @[Cat.scala 30:58]
    node _T_2221 = cat(_T_2211, _T_2208) @[Cat.scala 30:58]
    node _T_2222 = cat(_T_2217, _T_2214) @[Cat.scala 30:58]
    node _T_2223 = cat(_T_2222, _T_2221) @[Cat.scala 30:58]
    node _T_2224 = cat(_T_2223, _T_2220) @[Cat.scala 30:58]
    put.mask <= _T_2224 @[Edges.scala 362:15]
    put.data <= a_data @[Edges.scala 363:15]
    wire _T_2233 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[DCache.scala 260:31]
    _T_2233 is invalid @[DCache.scala 260:31]
    node _T_2245 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_2247 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_2248 = and(_T_2245, _T_2247) @[Parameters.scala 63:37]
    node _T_2249 = or(UInt<1>("h00"), _T_2248) @[Parameters.scala 132:31]
    node _T_2251 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_2252 = cvt(_T_2251) @[Parameters.scala 117:49]
    node _T_2254 = and(_T_2252, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2255 = asSInt(_T_2254) @[Parameters.scala 117:52]
    node _T_2257 = eq(_T_2255, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2259 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_2260 = cvt(_T_2259) @[Parameters.scala 117:49]
    node _T_2262 = and(_T_2260, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_2263 = asSInt(_T_2262) @[Parameters.scala 117:52]
    node _T_2265 = eq(_T_2263, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2267 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_2268 = cvt(_T_2267) @[Parameters.scala 117:49]
    node _T_2270 = and(_T_2268, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_2271 = asSInt(_T_2270) @[Parameters.scala 117:52]
    node _T_2273 = eq(_T_2271, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2274 = or(_T_2257, _T_2265) @[Parameters.scala 133:42]
    node _T_2275 = or(_T_2274, _T_2273) @[Parameters.scala 133:42]
    node _T_2276 = and(_T_2249, _T_2275) @[Parameters.scala 132:56]
    node _T_2279 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_2281 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_2282 = cvt(_T_2281) @[Parameters.scala 117:49]
    node _T_2284 = and(_T_2282, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2285 = asSInt(_T_2284) @[Parameters.scala 117:52]
    node _T_2287 = eq(_T_2285, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2289 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_2290 = cvt(_T_2289) @[Parameters.scala 117:49]
    node _T_2292 = and(_T_2290, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_2293 = asSInt(_T_2292) @[Parameters.scala 117:52]
    node _T_2295 = eq(_T_2293, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2297 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_2298 = cvt(_T_2297) @[Parameters.scala 117:49]
    node _T_2300 = and(_T_2298, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_2301 = asSInt(_T_2300) @[Parameters.scala 117:52]
    node _T_2303 = eq(_T_2301, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2305 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_2306 = cvt(_T_2305) @[Parameters.scala 117:49]
    node _T_2308 = and(_T_2306, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_2309 = asSInt(_T_2308) @[Parameters.scala 117:52]
    node _T_2311 = eq(_T_2309, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2312 = or(_T_2287, _T_2295) @[Parameters.scala 133:42]
    node _T_2313 = or(_T_2312, _T_2303) @[Parameters.scala 133:42]
    node _T_2314 = or(_T_2313, _T_2311) @[Parameters.scala 133:42]
    node _T_2315 = and(_T_2279, _T_2314) @[Parameters.scala 132:56]
    node _T_2317 = or(UInt<1>("h00"), _T_2276) @[Parameters.scala 134:30]
    node _T_2318 = or(_T_2317, _T_2315) @[Parameters.scala 134:30]
    wire _T_2327 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 398:17]
    _T_2327 is invalid @[Edges.scala 398:17]
    _T_2327.opcode <= UInt<2>("h03") @[Edges.scala 399:15]
    _T_2327.param <= UInt<3>("h03") @[Edges.scala 400:15]
    _T_2327.size <= a_size @[Edges.scala 401:15]
    _T_2327.source <= UInt<1>("h00") @[Edges.scala 402:15]
    _T_2327.address <= s2_req.addr @[Edges.scala 403:15]
    node _T_2337 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_2338 = dshl(UInt<1>("h01"), _T_2337) @[OneHot.scala 49:12]
    node _T_2339 = bits(_T_2338, 2, 0) @[OneHot.scala 49:37]
    node _T_2341 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_2343 = bits(_T_2339, 2, 2) @[package.scala 44:26]
    node _T_2344 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_2346 = eq(_T_2344, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2347 = and(UInt<1>("h01"), _T_2346) @[package.scala 49:27]
    node _T_2348 = and(_T_2343, _T_2347) @[package.scala 50:38]
    node _T_2349 = or(_T_2341, _T_2348) @[package.scala 50:29]
    node _T_2350 = and(UInt<1>("h01"), _T_2344) @[package.scala 49:27]
    node _T_2351 = and(_T_2343, _T_2350) @[package.scala 50:38]
    node _T_2352 = or(_T_2341, _T_2351) @[package.scala 50:29]
    node _T_2353 = bits(_T_2339, 1, 1) @[package.scala 44:26]
    node _T_2354 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_2356 = eq(_T_2354, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2357 = and(_T_2347, _T_2356) @[package.scala 49:27]
    node _T_2358 = and(_T_2353, _T_2357) @[package.scala 50:38]
    node _T_2359 = or(_T_2349, _T_2358) @[package.scala 50:29]
    node _T_2360 = and(_T_2347, _T_2354) @[package.scala 49:27]
    node _T_2361 = and(_T_2353, _T_2360) @[package.scala 50:38]
    node _T_2362 = or(_T_2349, _T_2361) @[package.scala 50:29]
    node _T_2363 = and(_T_2350, _T_2356) @[package.scala 49:27]
    node _T_2364 = and(_T_2353, _T_2363) @[package.scala 50:38]
    node _T_2365 = or(_T_2352, _T_2364) @[package.scala 50:29]
    node _T_2366 = and(_T_2350, _T_2354) @[package.scala 49:27]
    node _T_2367 = and(_T_2353, _T_2366) @[package.scala 50:38]
    node _T_2368 = or(_T_2352, _T_2367) @[package.scala 50:29]
    node _T_2369 = bits(_T_2339, 0, 0) @[package.scala 44:26]
    node _T_2370 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_2372 = eq(_T_2370, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2373 = and(_T_2357, _T_2372) @[package.scala 49:27]
    node _T_2374 = and(_T_2369, _T_2373) @[package.scala 50:38]
    node _T_2375 = or(_T_2359, _T_2374) @[package.scala 50:29]
    node _T_2376 = and(_T_2357, _T_2370) @[package.scala 49:27]
    node _T_2377 = and(_T_2369, _T_2376) @[package.scala 50:38]
    node _T_2378 = or(_T_2359, _T_2377) @[package.scala 50:29]
    node _T_2379 = and(_T_2360, _T_2372) @[package.scala 49:27]
    node _T_2380 = and(_T_2369, _T_2379) @[package.scala 50:38]
    node _T_2381 = or(_T_2362, _T_2380) @[package.scala 50:29]
    node _T_2382 = and(_T_2360, _T_2370) @[package.scala 49:27]
    node _T_2383 = and(_T_2369, _T_2382) @[package.scala 50:38]
    node _T_2384 = or(_T_2362, _T_2383) @[package.scala 50:29]
    node _T_2385 = and(_T_2363, _T_2372) @[package.scala 49:27]
    node _T_2386 = and(_T_2369, _T_2385) @[package.scala 50:38]
    node _T_2387 = or(_T_2365, _T_2386) @[package.scala 50:29]
    node _T_2388 = and(_T_2363, _T_2370) @[package.scala 49:27]
    node _T_2389 = and(_T_2369, _T_2388) @[package.scala 50:38]
    node _T_2390 = or(_T_2365, _T_2389) @[package.scala 50:29]
    node _T_2391 = and(_T_2366, _T_2372) @[package.scala 49:27]
    node _T_2392 = and(_T_2369, _T_2391) @[package.scala 50:38]
    node _T_2393 = or(_T_2368, _T_2392) @[package.scala 50:29]
    node _T_2394 = and(_T_2366, _T_2370) @[package.scala 49:27]
    node _T_2395 = and(_T_2369, _T_2394) @[package.scala 50:38]
    node _T_2396 = or(_T_2368, _T_2395) @[package.scala 50:29]
    node _T_2397 = cat(_T_2378, _T_2375) @[Cat.scala 30:58]
    node _T_2398 = cat(_T_2384, _T_2381) @[Cat.scala 30:58]
    node _T_2399 = cat(_T_2398, _T_2397) @[Cat.scala 30:58]
    node _T_2400 = cat(_T_2390, _T_2387) @[Cat.scala 30:58]
    node _T_2401 = cat(_T_2396, _T_2393) @[Cat.scala 30:58]
    node _T_2402 = cat(_T_2401, _T_2400) @[Cat.scala 30:58]
    node _T_2403 = cat(_T_2402, _T_2399) @[Cat.scala 30:58]
    _T_2327.mask <= _T_2403 @[Edges.scala 404:15]
    _T_2327.data <= a_data @[Edges.scala 405:15]
    node _T_2408 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_2410 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_2411 = and(_T_2408, _T_2410) @[Parameters.scala 63:37]
    node _T_2412 = or(UInt<1>("h00"), _T_2411) @[Parameters.scala 132:31]
    node _T_2414 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_2415 = cvt(_T_2414) @[Parameters.scala 117:49]
    node _T_2417 = and(_T_2415, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2418 = asSInt(_T_2417) @[Parameters.scala 117:52]
    node _T_2420 = eq(_T_2418, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2422 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_2423 = cvt(_T_2422) @[Parameters.scala 117:49]
    node _T_2425 = and(_T_2423, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_2426 = asSInt(_T_2425) @[Parameters.scala 117:52]
    node _T_2428 = eq(_T_2426, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2430 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_2431 = cvt(_T_2430) @[Parameters.scala 117:49]
    node _T_2433 = and(_T_2431, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_2434 = asSInt(_T_2433) @[Parameters.scala 117:52]
    node _T_2436 = eq(_T_2434, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2437 = or(_T_2420, _T_2428) @[Parameters.scala 133:42]
    node _T_2438 = or(_T_2437, _T_2436) @[Parameters.scala 133:42]
    node _T_2439 = and(_T_2412, _T_2438) @[Parameters.scala 132:56]
    node _T_2442 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_2444 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_2445 = cvt(_T_2444) @[Parameters.scala 117:49]
    node _T_2447 = and(_T_2445, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2448 = asSInt(_T_2447) @[Parameters.scala 117:52]
    node _T_2450 = eq(_T_2448, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2452 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_2453 = cvt(_T_2452) @[Parameters.scala 117:49]
    node _T_2455 = and(_T_2453, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_2456 = asSInt(_T_2455) @[Parameters.scala 117:52]
    node _T_2458 = eq(_T_2456, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2460 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_2461 = cvt(_T_2460) @[Parameters.scala 117:49]
    node _T_2463 = and(_T_2461, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_2464 = asSInt(_T_2463) @[Parameters.scala 117:52]
    node _T_2466 = eq(_T_2464, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2468 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_2469 = cvt(_T_2468) @[Parameters.scala 117:49]
    node _T_2471 = and(_T_2469, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_2472 = asSInt(_T_2471) @[Parameters.scala 117:52]
    node _T_2474 = eq(_T_2472, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2475 = or(_T_2450, _T_2458) @[Parameters.scala 133:42]
    node _T_2476 = or(_T_2475, _T_2466) @[Parameters.scala 133:42]
    node _T_2477 = or(_T_2476, _T_2474) @[Parameters.scala 133:42]
    node _T_2478 = and(_T_2442, _T_2477) @[Parameters.scala 132:56]
    node _T_2480 = or(UInt<1>("h00"), _T_2439) @[Parameters.scala 134:30]
    node _T_2481 = or(_T_2480, _T_2478) @[Parameters.scala 134:30]
    wire _T_2490 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 398:17]
    _T_2490 is invalid @[Edges.scala 398:17]
    _T_2490.opcode <= UInt<2>("h03") @[Edges.scala 399:15]
    _T_2490.param <= UInt<3>("h00") @[Edges.scala 400:15]
    _T_2490.size <= a_size @[Edges.scala 401:15]
    _T_2490.source <= UInt<1>("h00") @[Edges.scala 402:15]
    _T_2490.address <= s2_req.addr @[Edges.scala 403:15]
    node _T_2500 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_2501 = dshl(UInt<1>("h01"), _T_2500) @[OneHot.scala 49:12]
    node _T_2502 = bits(_T_2501, 2, 0) @[OneHot.scala 49:37]
    node _T_2504 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_2506 = bits(_T_2502, 2, 2) @[package.scala 44:26]
    node _T_2507 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_2509 = eq(_T_2507, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2510 = and(UInt<1>("h01"), _T_2509) @[package.scala 49:27]
    node _T_2511 = and(_T_2506, _T_2510) @[package.scala 50:38]
    node _T_2512 = or(_T_2504, _T_2511) @[package.scala 50:29]
    node _T_2513 = and(UInt<1>("h01"), _T_2507) @[package.scala 49:27]
    node _T_2514 = and(_T_2506, _T_2513) @[package.scala 50:38]
    node _T_2515 = or(_T_2504, _T_2514) @[package.scala 50:29]
    node _T_2516 = bits(_T_2502, 1, 1) @[package.scala 44:26]
    node _T_2517 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_2519 = eq(_T_2517, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2520 = and(_T_2510, _T_2519) @[package.scala 49:27]
    node _T_2521 = and(_T_2516, _T_2520) @[package.scala 50:38]
    node _T_2522 = or(_T_2512, _T_2521) @[package.scala 50:29]
    node _T_2523 = and(_T_2510, _T_2517) @[package.scala 49:27]
    node _T_2524 = and(_T_2516, _T_2523) @[package.scala 50:38]
    node _T_2525 = or(_T_2512, _T_2524) @[package.scala 50:29]
    node _T_2526 = and(_T_2513, _T_2519) @[package.scala 49:27]
    node _T_2527 = and(_T_2516, _T_2526) @[package.scala 50:38]
    node _T_2528 = or(_T_2515, _T_2527) @[package.scala 50:29]
    node _T_2529 = and(_T_2513, _T_2517) @[package.scala 49:27]
    node _T_2530 = and(_T_2516, _T_2529) @[package.scala 50:38]
    node _T_2531 = or(_T_2515, _T_2530) @[package.scala 50:29]
    node _T_2532 = bits(_T_2502, 0, 0) @[package.scala 44:26]
    node _T_2533 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_2535 = eq(_T_2533, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2536 = and(_T_2520, _T_2535) @[package.scala 49:27]
    node _T_2537 = and(_T_2532, _T_2536) @[package.scala 50:38]
    node _T_2538 = or(_T_2522, _T_2537) @[package.scala 50:29]
    node _T_2539 = and(_T_2520, _T_2533) @[package.scala 49:27]
    node _T_2540 = and(_T_2532, _T_2539) @[package.scala 50:38]
    node _T_2541 = or(_T_2522, _T_2540) @[package.scala 50:29]
    node _T_2542 = and(_T_2523, _T_2535) @[package.scala 49:27]
    node _T_2543 = and(_T_2532, _T_2542) @[package.scala 50:38]
    node _T_2544 = or(_T_2525, _T_2543) @[package.scala 50:29]
    node _T_2545 = and(_T_2523, _T_2533) @[package.scala 49:27]
    node _T_2546 = and(_T_2532, _T_2545) @[package.scala 50:38]
    node _T_2547 = or(_T_2525, _T_2546) @[package.scala 50:29]
    node _T_2548 = and(_T_2526, _T_2535) @[package.scala 49:27]
    node _T_2549 = and(_T_2532, _T_2548) @[package.scala 50:38]
    node _T_2550 = or(_T_2528, _T_2549) @[package.scala 50:29]
    node _T_2551 = and(_T_2526, _T_2533) @[package.scala 49:27]
    node _T_2552 = and(_T_2532, _T_2551) @[package.scala 50:38]
    node _T_2553 = or(_T_2528, _T_2552) @[package.scala 50:29]
    node _T_2554 = and(_T_2529, _T_2535) @[package.scala 49:27]
    node _T_2555 = and(_T_2532, _T_2554) @[package.scala 50:38]
    node _T_2556 = or(_T_2531, _T_2555) @[package.scala 50:29]
    node _T_2557 = and(_T_2529, _T_2533) @[package.scala 49:27]
    node _T_2558 = and(_T_2532, _T_2557) @[package.scala 50:38]
    node _T_2559 = or(_T_2531, _T_2558) @[package.scala 50:29]
    node _T_2560 = cat(_T_2541, _T_2538) @[Cat.scala 30:58]
    node _T_2561 = cat(_T_2547, _T_2544) @[Cat.scala 30:58]
    node _T_2562 = cat(_T_2561, _T_2560) @[Cat.scala 30:58]
    node _T_2563 = cat(_T_2553, _T_2550) @[Cat.scala 30:58]
    node _T_2564 = cat(_T_2559, _T_2556) @[Cat.scala 30:58]
    node _T_2565 = cat(_T_2564, _T_2563) @[Cat.scala 30:58]
    node _T_2566 = cat(_T_2565, _T_2562) @[Cat.scala 30:58]
    _T_2490.mask <= _T_2566 @[Edges.scala 404:15]
    _T_2490.data <= a_data @[Edges.scala 405:15]
    node _T_2571 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_2573 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_2574 = and(_T_2571, _T_2573) @[Parameters.scala 63:37]
    node _T_2575 = or(UInt<1>("h00"), _T_2574) @[Parameters.scala 132:31]
    node _T_2577 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_2578 = cvt(_T_2577) @[Parameters.scala 117:49]
    node _T_2580 = and(_T_2578, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2581 = asSInt(_T_2580) @[Parameters.scala 117:52]
    node _T_2583 = eq(_T_2581, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2585 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_2586 = cvt(_T_2585) @[Parameters.scala 117:49]
    node _T_2588 = and(_T_2586, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_2589 = asSInt(_T_2588) @[Parameters.scala 117:52]
    node _T_2591 = eq(_T_2589, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2593 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_2594 = cvt(_T_2593) @[Parameters.scala 117:49]
    node _T_2596 = and(_T_2594, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_2597 = asSInt(_T_2596) @[Parameters.scala 117:52]
    node _T_2599 = eq(_T_2597, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2600 = or(_T_2583, _T_2591) @[Parameters.scala 133:42]
    node _T_2601 = or(_T_2600, _T_2599) @[Parameters.scala 133:42]
    node _T_2602 = and(_T_2575, _T_2601) @[Parameters.scala 132:56]
    node _T_2605 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_2607 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_2608 = cvt(_T_2607) @[Parameters.scala 117:49]
    node _T_2610 = and(_T_2608, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2611 = asSInt(_T_2610) @[Parameters.scala 117:52]
    node _T_2613 = eq(_T_2611, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2615 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_2616 = cvt(_T_2615) @[Parameters.scala 117:49]
    node _T_2618 = and(_T_2616, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_2619 = asSInt(_T_2618) @[Parameters.scala 117:52]
    node _T_2621 = eq(_T_2619, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2623 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_2624 = cvt(_T_2623) @[Parameters.scala 117:49]
    node _T_2626 = and(_T_2624, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_2627 = asSInt(_T_2626) @[Parameters.scala 117:52]
    node _T_2629 = eq(_T_2627, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2631 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_2632 = cvt(_T_2631) @[Parameters.scala 117:49]
    node _T_2634 = and(_T_2632, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_2635 = asSInt(_T_2634) @[Parameters.scala 117:52]
    node _T_2637 = eq(_T_2635, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2638 = or(_T_2613, _T_2621) @[Parameters.scala 133:42]
    node _T_2639 = or(_T_2638, _T_2629) @[Parameters.scala 133:42]
    node _T_2640 = or(_T_2639, _T_2637) @[Parameters.scala 133:42]
    node _T_2641 = and(_T_2605, _T_2640) @[Parameters.scala 132:56]
    node _T_2643 = or(UInt<1>("h00"), _T_2602) @[Parameters.scala 134:30]
    node _T_2644 = or(_T_2643, _T_2641) @[Parameters.scala 134:30]
    wire _T_2653 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 398:17]
    _T_2653 is invalid @[Edges.scala 398:17]
    _T_2653.opcode <= UInt<2>("h03") @[Edges.scala 399:15]
    _T_2653.param <= UInt<3>("h01") @[Edges.scala 400:15]
    _T_2653.size <= a_size @[Edges.scala 401:15]
    _T_2653.source <= UInt<1>("h00") @[Edges.scala 402:15]
    _T_2653.address <= s2_req.addr @[Edges.scala 403:15]
    node _T_2663 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_2664 = dshl(UInt<1>("h01"), _T_2663) @[OneHot.scala 49:12]
    node _T_2665 = bits(_T_2664, 2, 0) @[OneHot.scala 49:37]
    node _T_2667 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_2669 = bits(_T_2665, 2, 2) @[package.scala 44:26]
    node _T_2670 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_2672 = eq(_T_2670, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2673 = and(UInt<1>("h01"), _T_2672) @[package.scala 49:27]
    node _T_2674 = and(_T_2669, _T_2673) @[package.scala 50:38]
    node _T_2675 = or(_T_2667, _T_2674) @[package.scala 50:29]
    node _T_2676 = and(UInt<1>("h01"), _T_2670) @[package.scala 49:27]
    node _T_2677 = and(_T_2669, _T_2676) @[package.scala 50:38]
    node _T_2678 = or(_T_2667, _T_2677) @[package.scala 50:29]
    node _T_2679 = bits(_T_2665, 1, 1) @[package.scala 44:26]
    node _T_2680 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_2682 = eq(_T_2680, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2683 = and(_T_2673, _T_2682) @[package.scala 49:27]
    node _T_2684 = and(_T_2679, _T_2683) @[package.scala 50:38]
    node _T_2685 = or(_T_2675, _T_2684) @[package.scala 50:29]
    node _T_2686 = and(_T_2673, _T_2680) @[package.scala 49:27]
    node _T_2687 = and(_T_2679, _T_2686) @[package.scala 50:38]
    node _T_2688 = or(_T_2675, _T_2687) @[package.scala 50:29]
    node _T_2689 = and(_T_2676, _T_2682) @[package.scala 49:27]
    node _T_2690 = and(_T_2679, _T_2689) @[package.scala 50:38]
    node _T_2691 = or(_T_2678, _T_2690) @[package.scala 50:29]
    node _T_2692 = and(_T_2676, _T_2680) @[package.scala 49:27]
    node _T_2693 = and(_T_2679, _T_2692) @[package.scala 50:38]
    node _T_2694 = or(_T_2678, _T_2693) @[package.scala 50:29]
    node _T_2695 = bits(_T_2665, 0, 0) @[package.scala 44:26]
    node _T_2696 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_2698 = eq(_T_2696, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2699 = and(_T_2683, _T_2698) @[package.scala 49:27]
    node _T_2700 = and(_T_2695, _T_2699) @[package.scala 50:38]
    node _T_2701 = or(_T_2685, _T_2700) @[package.scala 50:29]
    node _T_2702 = and(_T_2683, _T_2696) @[package.scala 49:27]
    node _T_2703 = and(_T_2695, _T_2702) @[package.scala 50:38]
    node _T_2704 = or(_T_2685, _T_2703) @[package.scala 50:29]
    node _T_2705 = and(_T_2686, _T_2698) @[package.scala 49:27]
    node _T_2706 = and(_T_2695, _T_2705) @[package.scala 50:38]
    node _T_2707 = or(_T_2688, _T_2706) @[package.scala 50:29]
    node _T_2708 = and(_T_2686, _T_2696) @[package.scala 49:27]
    node _T_2709 = and(_T_2695, _T_2708) @[package.scala 50:38]
    node _T_2710 = or(_T_2688, _T_2709) @[package.scala 50:29]
    node _T_2711 = and(_T_2689, _T_2698) @[package.scala 49:27]
    node _T_2712 = and(_T_2695, _T_2711) @[package.scala 50:38]
    node _T_2713 = or(_T_2691, _T_2712) @[package.scala 50:29]
    node _T_2714 = and(_T_2689, _T_2696) @[package.scala 49:27]
    node _T_2715 = and(_T_2695, _T_2714) @[package.scala 50:38]
    node _T_2716 = or(_T_2691, _T_2715) @[package.scala 50:29]
    node _T_2717 = and(_T_2692, _T_2698) @[package.scala 49:27]
    node _T_2718 = and(_T_2695, _T_2717) @[package.scala 50:38]
    node _T_2719 = or(_T_2694, _T_2718) @[package.scala 50:29]
    node _T_2720 = and(_T_2692, _T_2696) @[package.scala 49:27]
    node _T_2721 = and(_T_2695, _T_2720) @[package.scala 50:38]
    node _T_2722 = or(_T_2694, _T_2721) @[package.scala 50:29]
    node _T_2723 = cat(_T_2704, _T_2701) @[Cat.scala 30:58]
    node _T_2724 = cat(_T_2710, _T_2707) @[Cat.scala 30:58]
    node _T_2725 = cat(_T_2724, _T_2723) @[Cat.scala 30:58]
    node _T_2726 = cat(_T_2716, _T_2713) @[Cat.scala 30:58]
    node _T_2727 = cat(_T_2722, _T_2719) @[Cat.scala 30:58]
    node _T_2728 = cat(_T_2727, _T_2726) @[Cat.scala 30:58]
    node _T_2729 = cat(_T_2728, _T_2725) @[Cat.scala 30:58]
    _T_2653.mask <= _T_2729 @[Edges.scala 404:15]
    _T_2653.data <= a_data @[Edges.scala 405:15]
    node _T_2734 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_2736 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_2737 = and(_T_2734, _T_2736) @[Parameters.scala 63:37]
    node _T_2738 = or(UInt<1>("h00"), _T_2737) @[Parameters.scala 132:31]
    node _T_2740 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_2741 = cvt(_T_2740) @[Parameters.scala 117:49]
    node _T_2743 = and(_T_2741, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2744 = asSInt(_T_2743) @[Parameters.scala 117:52]
    node _T_2746 = eq(_T_2744, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2748 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_2749 = cvt(_T_2748) @[Parameters.scala 117:49]
    node _T_2751 = and(_T_2749, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_2752 = asSInt(_T_2751) @[Parameters.scala 117:52]
    node _T_2754 = eq(_T_2752, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2756 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_2757 = cvt(_T_2756) @[Parameters.scala 117:49]
    node _T_2759 = and(_T_2757, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_2760 = asSInt(_T_2759) @[Parameters.scala 117:52]
    node _T_2762 = eq(_T_2760, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2763 = or(_T_2746, _T_2754) @[Parameters.scala 133:42]
    node _T_2764 = or(_T_2763, _T_2762) @[Parameters.scala 133:42]
    node _T_2765 = and(_T_2738, _T_2764) @[Parameters.scala 132:56]
    node _T_2768 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_2770 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_2771 = cvt(_T_2770) @[Parameters.scala 117:49]
    node _T_2773 = and(_T_2771, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2774 = asSInt(_T_2773) @[Parameters.scala 117:52]
    node _T_2776 = eq(_T_2774, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2778 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_2779 = cvt(_T_2778) @[Parameters.scala 117:49]
    node _T_2781 = and(_T_2779, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_2782 = asSInt(_T_2781) @[Parameters.scala 117:52]
    node _T_2784 = eq(_T_2782, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2786 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_2787 = cvt(_T_2786) @[Parameters.scala 117:49]
    node _T_2789 = and(_T_2787, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_2790 = asSInt(_T_2789) @[Parameters.scala 117:52]
    node _T_2792 = eq(_T_2790, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2794 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_2795 = cvt(_T_2794) @[Parameters.scala 117:49]
    node _T_2797 = and(_T_2795, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_2798 = asSInt(_T_2797) @[Parameters.scala 117:52]
    node _T_2800 = eq(_T_2798, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2801 = or(_T_2776, _T_2784) @[Parameters.scala 133:42]
    node _T_2802 = or(_T_2801, _T_2792) @[Parameters.scala 133:42]
    node _T_2803 = or(_T_2802, _T_2800) @[Parameters.scala 133:42]
    node _T_2804 = and(_T_2768, _T_2803) @[Parameters.scala 132:56]
    node _T_2806 = or(UInt<1>("h00"), _T_2765) @[Parameters.scala 134:30]
    node _T_2807 = or(_T_2806, _T_2804) @[Parameters.scala 134:30]
    wire _T_2816 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 398:17]
    _T_2816 is invalid @[Edges.scala 398:17]
    _T_2816.opcode <= UInt<2>("h03") @[Edges.scala 399:15]
    _T_2816.param <= UInt<3>("h02") @[Edges.scala 400:15]
    _T_2816.size <= a_size @[Edges.scala 401:15]
    _T_2816.source <= UInt<1>("h00") @[Edges.scala 402:15]
    _T_2816.address <= s2_req.addr @[Edges.scala 403:15]
    node _T_2826 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_2827 = dshl(UInt<1>("h01"), _T_2826) @[OneHot.scala 49:12]
    node _T_2828 = bits(_T_2827, 2, 0) @[OneHot.scala 49:37]
    node _T_2830 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_2832 = bits(_T_2828, 2, 2) @[package.scala 44:26]
    node _T_2833 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_2835 = eq(_T_2833, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2836 = and(UInt<1>("h01"), _T_2835) @[package.scala 49:27]
    node _T_2837 = and(_T_2832, _T_2836) @[package.scala 50:38]
    node _T_2838 = or(_T_2830, _T_2837) @[package.scala 50:29]
    node _T_2839 = and(UInt<1>("h01"), _T_2833) @[package.scala 49:27]
    node _T_2840 = and(_T_2832, _T_2839) @[package.scala 50:38]
    node _T_2841 = or(_T_2830, _T_2840) @[package.scala 50:29]
    node _T_2842 = bits(_T_2828, 1, 1) @[package.scala 44:26]
    node _T_2843 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_2845 = eq(_T_2843, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2846 = and(_T_2836, _T_2845) @[package.scala 49:27]
    node _T_2847 = and(_T_2842, _T_2846) @[package.scala 50:38]
    node _T_2848 = or(_T_2838, _T_2847) @[package.scala 50:29]
    node _T_2849 = and(_T_2836, _T_2843) @[package.scala 49:27]
    node _T_2850 = and(_T_2842, _T_2849) @[package.scala 50:38]
    node _T_2851 = or(_T_2838, _T_2850) @[package.scala 50:29]
    node _T_2852 = and(_T_2839, _T_2845) @[package.scala 49:27]
    node _T_2853 = and(_T_2842, _T_2852) @[package.scala 50:38]
    node _T_2854 = or(_T_2841, _T_2853) @[package.scala 50:29]
    node _T_2855 = and(_T_2839, _T_2843) @[package.scala 49:27]
    node _T_2856 = and(_T_2842, _T_2855) @[package.scala 50:38]
    node _T_2857 = or(_T_2841, _T_2856) @[package.scala 50:29]
    node _T_2858 = bits(_T_2828, 0, 0) @[package.scala 44:26]
    node _T_2859 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_2861 = eq(_T_2859, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2862 = and(_T_2846, _T_2861) @[package.scala 49:27]
    node _T_2863 = and(_T_2858, _T_2862) @[package.scala 50:38]
    node _T_2864 = or(_T_2848, _T_2863) @[package.scala 50:29]
    node _T_2865 = and(_T_2846, _T_2859) @[package.scala 49:27]
    node _T_2866 = and(_T_2858, _T_2865) @[package.scala 50:38]
    node _T_2867 = or(_T_2848, _T_2866) @[package.scala 50:29]
    node _T_2868 = and(_T_2849, _T_2861) @[package.scala 49:27]
    node _T_2869 = and(_T_2858, _T_2868) @[package.scala 50:38]
    node _T_2870 = or(_T_2851, _T_2869) @[package.scala 50:29]
    node _T_2871 = and(_T_2849, _T_2859) @[package.scala 49:27]
    node _T_2872 = and(_T_2858, _T_2871) @[package.scala 50:38]
    node _T_2873 = or(_T_2851, _T_2872) @[package.scala 50:29]
    node _T_2874 = and(_T_2852, _T_2861) @[package.scala 49:27]
    node _T_2875 = and(_T_2858, _T_2874) @[package.scala 50:38]
    node _T_2876 = or(_T_2854, _T_2875) @[package.scala 50:29]
    node _T_2877 = and(_T_2852, _T_2859) @[package.scala 49:27]
    node _T_2878 = and(_T_2858, _T_2877) @[package.scala 50:38]
    node _T_2879 = or(_T_2854, _T_2878) @[package.scala 50:29]
    node _T_2880 = and(_T_2855, _T_2861) @[package.scala 49:27]
    node _T_2881 = and(_T_2858, _T_2880) @[package.scala 50:38]
    node _T_2882 = or(_T_2857, _T_2881) @[package.scala 50:29]
    node _T_2883 = and(_T_2855, _T_2859) @[package.scala 49:27]
    node _T_2884 = and(_T_2858, _T_2883) @[package.scala 50:38]
    node _T_2885 = or(_T_2857, _T_2884) @[package.scala 50:29]
    node _T_2886 = cat(_T_2867, _T_2864) @[Cat.scala 30:58]
    node _T_2887 = cat(_T_2873, _T_2870) @[Cat.scala 30:58]
    node _T_2888 = cat(_T_2887, _T_2886) @[Cat.scala 30:58]
    node _T_2889 = cat(_T_2879, _T_2876) @[Cat.scala 30:58]
    node _T_2890 = cat(_T_2885, _T_2882) @[Cat.scala 30:58]
    node _T_2891 = cat(_T_2890, _T_2889) @[Cat.scala 30:58]
    node _T_2892 = cat(_T_2891, _T_2888) @[Cat.scala 30:58]
    _T_2816.mask <= _T_2892 @[Edges.scala 404:15]
    _T_2816.data <= a_data @[Edges.scala 405:15]
    node _T_2897 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_2899 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_2900 = and(_T_2897, _T_2899) @[Parameters.scala 63:37]
    node _T_2901 = or(UInt<1>("h00"), _T_2900) @[Parameters.scala 132:31]
    node _T_2903 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_2904 = cvt(_T_2903) @[Parameters.scala 117:49]
    node _T_2906 = and(_T_2904, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2907 = asSInt(_T_2906) @[Parameters.scala 117:52]
    node _T_2909 = eq(_T_2907, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2911 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_2912 = cvt(_T_2911) @[Parameters.scala 117:49]
    node _T_2914 = and(_T_2912, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_2915 = asSInt(_T_2914) @[Parameters.scala 117:52]
    node _T_2917 = eq(_T_2915, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2919 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_2920 = cvt(_T_2919) @[Parameters.scala 117:49]
    node _T_2922 = and(_T_2920, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_2923 = asSInt(_T_2922) @[Parameters.scala 117:52]
    node _T_2925 = eq(_T_2923, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2926 = or(_T_2909, _T_2917) @[Parameters.scala 133:42]
    node _T_2927 = or(_T_2926, _T_2925) @[Parameters.scala 133:42]
    node _T_2928 = and(_T_2901, _T_2927) @[Parameters.scala 132:56]
    node _T_2931 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_2933 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_2934 = cvt(_T_2933) @[Parameters.scala 117:49]
    node _T_2936 = and(_T_2934, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_2937 = asSInt(_T_2936) @[Parameters.scala 117:52]
    node _T_2939 = eq(_T_2937, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2941 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_2942 = cvt(_T_2941) @[Parameters.scala 117:49]
    node _T_2944 = and(_T_2942, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_2945 = asSInt(_T_2944) @[Parameters.scala 117:52]
    node _T_2947 = eq(_T_2945, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2949 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_2950 = cvt(_T_2949) @[Parameters.scala 117:49]
    node _T_2952 = and(_T_2950, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_2953 = asSInt(_T_2952) @[Parameters.scala 117:52]
    node _T_2955 = eq(_T_2953, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2957 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_2958 = cvt(_T_2957) @[Parameters.scala 117:49]
    node _T_2960 = and(_T_2958, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_2961 = asSInt(_T_2960) @[Parameters.scala 117:52]
    node _T_2963 = eq(_T_2961, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_2964 = or(_T_2939, _T_2947) @[Parameters.scala 133:42]
    node _T_2965 = or(_T_2964, _T_2955) @[Parameters.scala 133:42]
    node _T_2966 = or(_T_2965, _T_2963) @[Parameters.scala 133:42]
    node _T_2967 = and(_T_2931, _T_2966) @[Parameters.scala 132:56]
    node _T_2969 = or(UInt<1>("h00"), _T_2928) @[Parameters.scala 134:30]
    node _T_2970 = or(_T_2969, _T_2967) @[Parameters.scala 134:30]
    wire _T_2979 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 384:17]
    _T_2979 is invalid @[Edges.scala 384:17]
    _T_2979.opcode <= UInt<2>("h02") @[Edges.scala 385:15]
    _T_2979.param <= UInt<3>("h04") @[Edges.scala 386:15]
    _T_2979.size <= a_size @[Edges.scala 387:15]
    _T_2979.source <= UInt<1>("h00") @[Edges.scala 388:15]
    _T_2979.address <= s2_req.addr @[Edges.scala 389:15]
    node _T_2989 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_2990 = dshl(UInt<1>("h01"), _T_2989) @[OneHot.scala 49:12]
    node _T_2991 = bits(_T_2990, 2, 0) @[OneHot.scala 49:37]
    node _T_2993 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_2995 = bits(_T_2991, 2, 2) @[package.scala 44:26]
    node _T_2996 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_2998 = eq(_T_2996, UInt<1>("h00")) @[package.scala 46:20]
    node _T_2999 = and(UInt<1>("h01"), _T_2998) @[package.scala 49:27]
    node _T_3000 = and(_T_2995, _T_2999) @[package.scala 50:38]
    node _T_3001 = or(_T_2993, _T_3000) @[package.scala 50:29]
    node _T_3002 = and(UInt<1>("h01"), _T_2996) @[package.scala 49:27]
    node _T_3003 = and(_T_2995, _T_3002) @[package.scala 50:38]
    node _T_3004 = or(_T_2993, _T_3003) @[package.scala 50:29]
    node _T_3005 = bits(_T_2991, 1, 1) @[package.scala 44:26]
    node _T_3006 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_3008 = eq(_T_3006, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3009 = and(_T_2999, _T_3008) @[package.scala 49:27]
    node _T_3010 = and(_T_3005, _T_3009) @[package.scala 50:38]
    node _T_3011 = or(_T_3001, _T_3010) @[package.scala 50:29]
    node _T_3012 = and(_T_2999, _T_3006) @[package.scala 49:27]
    node _T_3013 = and(_T_3005, _T_3012) @[package.scala 50:38]
    node _T_3014 = or(_T_3001, _T_3013) @[package.scala 50:29]
    node _T_3015 = and(_T_3002, _T_3008) @[package.scala 49:27]
    node _T_3016 = and(_T_3005, _T_3015) @[package.scala 50:38]
    node _T_3017 = or(_T_3004, _T_3016) @[package.scala 50:29]
    node _T_3018 = and(_T_3002, _T_3006) @[package.scala 49:27]
    node _T_3019 = and(_T_3005, _T_3018) @[package.scala 50:38]
    node _T_3020 = or(_T_3004, _T_3019) @[package.scala 50:29]
    node _T_3021 = bits(_T_2991, 0, 0) @[package.scala 44:26]
    node _T_3022 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_3024 = eq(_T_3022, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3025 = and(_T_3009, _T_3024) @[package.scala 49:27]
    node _T_3026 = and(_T_3021, _T_3025) @[package.scala 50:38]
    node _T_3027 = or(_T_3011, _T_3026) @[package.scala 50:29]
    node _T_3028 = and(_T_3009, _T_3022) @[package.scala 49:27]
    node _T_3029 = and(_T_3021, _T_3028) @[package.scala 50:38]
    node _T_3030 = or(_T_3011, _T_3029) @[package.scala 50:29]
    node _T_3031 = and(_T_3012, _T_3024) @[package.scala 49:27]
    node _T_3032 = and(_T_3021, _T_3031) @[package.scala 50:38]
    node _T_3033 = or(_T_3014, _T_3032) @[package.scala 50:29]
    node _T_3034 = and(_T_3012, _T_3022) @[package.scala 49:27]
    node _T_3035 = and(_T_3021, _T_3034) @[package.scala 50:38]
    node _T_3036 = or(_T_3014, _T_3035) @[package.scala 50:29]
    node _T_3037 = and(_T_3015, _T_3024) @[package.scala 49:27]
    node _T_3038 = and(_T_3021, _T_3037) @[package.scala 50:38]
    node _T_3039 = or(_T_3017, _T_3038) @[package.scala 50:29]
    node _T_3040 = and(_T_3015, _T_3022) @[package.scala 49:27]
    node _T_3041 = and(_T_3021, _T_3040) @[package.scala 50:38]
    node _T_3042 = or(_T_3017, _T_3041) @[package.scala 50:29]
    node _T_3043 = and(_T_3018, _T_3024) @[package.scala 49:27]
    node _T_3044 = and(_T_3021, _T_3043) @[package.scala 50:38]
    node _T_3045 = or(_T_3020, _T_3044) @[package.scala 50:29]
    node _T_3046 = and(_T_3018, _T_3022) @[package.scala 49:27]
    node _T_3047 = and(_T_3021, _T_3046) @[package.scala 50:38]
    node _T_3048 = or(_T_3020, _T_3047) @[package.scala 50:29]
    node _T_3049 = cat(_T_3030, _T_3027) @[Cat.scala 30:58]
    node _T_3050 = cat(_T_3036, _T_3033) @[Cat.scala 30:58]
    node _T_3051 = cat(_T_3050, _T_3049) @[Cat.scala 30:58]
    node _T_3052 = cat(_T_3042, _T_3039) @[Cat.scala 30:58]
    node _T_3053 = cat(_T_3048, _T_3045) @[Cat.scala 30:58]
    node _T_3054 = cat(_T_3053, _T_3052) @[Cat.scala 30:58]
    node _T_3055 = cat(_T_3054, _T_3051) @[Cat.scala 30:58]
    _T_2979.mask <= _T_3055 @[Edges.scala 390:15]
    _T_2979.data <= a_data @[Edges.scala 391:15]
    node _T_3060 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_3062 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_3063 = and(_T_3060, _T_3062) @[Parameters.scala 63:37]
    node _T_3064 = or(UInt<1>("h00"), _T_3063) @[Parameters.scala 132:31]
    node _T_3066 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_3067 = cvt(_T_3066) @[Parameters.scala 117:49]
    node _T_3069 = and(_T_3067, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3070 = asSInt(_T_3069) @[Parameters.scala 117:52]
    node _T_3072 = eq(_T_3070, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3074 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_3075 = cvt(_T_3074) @[Parameters.scala 117:49]
    node _T_3077 = and(_T_3075, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_3078 = asSInt(_T_3077) @[Parameters.scala 117:52]
    node _T_3080 = eq(_T_3078, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3082 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_3083 = cvt(_T_3082) @[Parameters.scala 117:49]
    node _T_3085 = and(_T_3083, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_3086 = asSInt(_T_3085) @[Parameters.scala 117:52]
    node _T_3088 = eq(_T_3086, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3089 = or(_T_3072, _T_3080) @[Parameters.scala 133:42]
    node _T_3090 = or(_T_3089, _T_3088) @[Parameters.scala 133:42]
    node _T_3091 = and(_T_3064, _T_3090) @[Parameters.scala 132:56]
    node _T_3094 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_3096 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_3097 = cvt(_T_3096) @[Parameters.scala 117:49]
    node _T_3099 = and(_T_3097, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3100 = asSInt(_T_3099) @[Parameters.scala 117:52]
    node _T_3102 = eq(_T_3100, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3104 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_3105 = cvt(_T_3104) @[Parameters.scala 117:49]
    node _T_3107 = and(_T_3105, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_3108 = asSInt(_T_3107) @[Parameters.scala 117:52]
    node _T_3110 = eq(_T_3108, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3112 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_3113 = cvt(_T_3112) @[Parameters.scala 117:49]
    node _T_3115 = and(_T_3113, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_3116 = asSInt(_T_3115) @[Parameters.scala 117:52]
    node _T_3118 = eq(_T_3116, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3120 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_3121 = cvt(_T_3120) @[Parameters.scala 117:49]
    node _T_3123 = and(_T_3121, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_3124 = asSInt(_T_3123) @[Parameters.scala 117:52]
    node _T_3126 = eq(_T_3124, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3127 = or(_T_3102, _T_3110) @[Parameters.scala 133:42]
    node _T_3128 = or(_T_3127, _T_3118) @[Parameters.scala 133:42]
    node _T_3129 = or(_T_3128, _T_3126) @[Parameters.scala 133:42]
    node _T_3130 = and(_T_3094, _T_3129) @[Parameters.scala 132:56]
    node _T_3132 = or(UInt<1>("h00"), _T_3091) @[Parameters.scala 134:30]
    node _T_3133 = or(_T_3132, _T_3130) @[Parameters.scala 134:30]
    wire _T_3142 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 384:17]
    _T_3142 is invalid @[Edges.scala 384:17]
    _T_3142.opcode <= UInt<2>("h02") @[Edges.scala 385:15]
    _T_3142.param <= UInt<3>("h00") @[Edges.scala 386:15]
    _T_3142.size <= a_size @[Edges.scala 387:15]
    _T_3142.source <= UInt<1>("h00") @[Edges.scala 388:15]
    _T_3142.address <= s2_req.addr @[Edges.scala 389:15]
    node _T_3152 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_3153 = dshl(UInt<1>("h01"), _T_3152) @[OneHot.scala 49:12]
    node _T_3154 = bits(_T_3153, 2, 0) @[OneHot.scala 49:37]
    node _T_3156 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_3158 = bits(_T_3154, 2, 2) @[package.scala 44:26]
    node _T_3159 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_3161 = eq(_T_3159, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3162 = and(UInt<1>("h01"), _T_3161) @[package.scala 49:27]
    node _T_3163 = and(_T_3158, _T_3162) @[package.scala 50:38]
    node _T_3164 = or(_T_3156, _T_3163) @[package.scala 50:29]
    node _T_3165 = and(UInt<1>("h01"), _T_3159) @[package.scala 49:27]
    node _T_3166 = and(_T_3158, _T_3165) @[package.scala 50:38]
    node _T_3167 = or(_T_3156, _T_3166) @[package.scala 50:29]
    node _T_3168 = bits(_T_3154, 1, 1) @[package.scala 44:26]
    node _T_3169 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_3171 = eq(_T_3169, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3172 = and(_T_3162, _T_3171) @[package.scala 49:27]
    node _T_3173 = and(_T_3168, _T_3172) @[package.scala 50:38]
    node _T_3174 = or(_T_3164, _T_3173) @[package.scala 50:29]
    node _T_3175 = and(_T_3162, _T_3169) @[package.scala 49:27]
    node _T_3176 = and(_T_3168, _T_3175) @[package.scala 50:38]
    node _T_3177 = or(_T_3164, _T_3176) @[package.scala 50:29]
    node _T_3178 = and(_T_3165, _T_3171) @[package.scala 49:27]
    node _T_3179 = and(_T_3168, _T_3178) @[package.scala 50:38]
    node _T_3180 = or(_T_3167, _T_3179) @[package.scala 50:29]
    node _T_3181 = and(_T_3165, _T_3169) @[package.scala 49:27]
    node _T_3182 = and(_T_3168, _T_3181) @[package.scala 50:38]
    node _T_3183 = or(_T_3167, _T_3182) @[package.scala 50:29]
    node _T_3184 = bits(_T_3154, 0, 0) @[package.scala 44:26]
    node _T_3185 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_3187 = eq(_T_3185, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3188 = and(_T_3172, _T_3187) @[package.scala 49:27]
    node _T_3189 = and(_T_3184, _T_3188) @[package.scala 50:38]
    node _T_3190 = or(_T_3174, _T_3189) @[package.scala 50:29]
    node _T_3191 = and(_T_3172, _T_3185) @[package.scala 49:27]
    node _T_3192 = and(_T_3184, _T_3191) @[package.scala 50:38]
    node _T_3193 = or(_T_3174, _T_3192) @[package.scala 50:29]
    node _T_3194 = and(_T_3175, _T_3187) @[package.scala 49:27]
    node _T_3195 = and(_T_3184, _T_3194) @[package.scala 50:38]
    node _T_3196 = or(_T_3177, _T_3195) @[package.scala 50:29]
    node _T_3197 = and(_T_3175, _T_3185) @[package.scala 49:27]
    node _T_3198 = and(_T_3184, _T_3197) @[package.scala 50:38]
    node _T_3199 = or(_T_3177, _T_3198) @[package.scala 50:29]
    node _T_3200 = and(_T_3178, _T_3187) @[package.scala 49:27]
    node _T_3201 = and(_T_3184, _T_3200) @[package.scala 50:38]
    node _T_3202 = or(_T_3180, _T_3201) @[package.scala 50:29]
    node _T_3203 = and(_T_3178, _T_3185) @[package.scala 49:27]
    node _T_3204 = and(_T_3184, _T_3203) @[package.scala 50:38]
    node _T_3205 = or(_T_3180, _T_3204) @[package.scala 50:29]
    node _T_3206 = and(_T_3181, _T_3187) @[package.scala 49:27]
    node _T_3207 = and(_T_3184, _T_3206) @[package.scala 50:38]
    node _T_3208 = or(_T_3183, _T_3207) @[package.scala 50:29]
    node _T_3209 = and(_T_3181, _T_3185) @[package.scala 49:27]
    node _T_3210 = and(_T_3184, _T_3209) @[package.scala 50:38]
    node _T_3211 = or(_T_3183, _T_3210) @[package.scala 50:29]
    node _T_3212 = cat(_T_3193, _T_3190) @[Cat.scala 30:58]
    node _T_3213 = cat(_T_3199, _T_3196) @[Cat.scala 30:58]
    node _T_3214 = cat(_T_3213, _T_3212) @[Cat.scala 30:58]
    node _T_3215 = cat(_T_3205, _T_3202) @[Cat.scala 30:58]
    node _T_3216 = cat(_T_3211, _T_3208) @[Cat.scala 30:58]
    node _T_3217 = cat(_T_3216, _T_3215) @[Cat.scala 30:58]
    node _T_3218 = cat(_T_3217, _T_3214) @[Cat.scala 30:58]
    _T_3142.mask <= _T_3218 @[Edges.scala 390:15]
    _T_3142.data <= a_data @[Edges.scala 391:15]
    node _T_3223 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_3225 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_3226 = and(_T_3223, _T_3225) @[Parameters.scala 63:37]
    node _T_3227 = or(UInt<1>("h00"), _T_3226) @[Parameters.scala 132:31]
    node _T_3229 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_3230 = cvt(_T_3229) @[Parameters.scala 117:49]
    node _T_3232 = and(_T_3230, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3233 = asSInt(_T_3232) @[Parameters.scala 117:52]
    node _T_3235 = eq(_T_3233, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3237 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_3238 = cvt(_T_3237) @[Parameters.scala 117:49]
    node _T_3240 = and(_T_3238, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_3241 = asSInt(_T_3240) @[Parameters.scala 117:52]
    node _T_3243 = eq(_T_3241, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3245 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_3246 = cvt(_T_3245) @[Parameters.scala 117:49]
    node _T_3248 = and(_T_3246, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_3249 = asSInt(_T_3248) @[Parameters.scala 117:52]
    node _T_3251 = eq(_T_3249, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3252 = or(_T_3235, _T_3243) @[Parameters.scala 133:42]
    node _T_3253 = or(_T_3252, _T_3251) @[Parameters.scala 133:42]
    node _T_3254 = and(_T_3227, _T_3253) @[Parameters.scala 132:56]
    node _T_3257 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_3259 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_3260 = cvt(_T_3259) @[Parameters.scala 117:49]
    node _T_3262 = and(_T_3260, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3263 = asSInt(_T_3262) @[Parameters.scala 117:52]
    node _T_3265 = eq(_T_3263, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3267 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_3268 = cvt(_T_3267) @[Parameters.scala 117:49]
    node _T_3270 = and(_T_3268, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_3271 = asSInt(_T_3270) @[Parameters.scala 117:52]
    node _T_3273 = eq(_T_3271, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3275 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_3276 = cvt(_T_3275) @[Parameters.scala 117:49]
    node _T_3278 = and(_T_3276, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_3279 = asSInt(_T_3278) @[Parameters.scala 117:52]
    node _T_3281 = eq(_T_3279, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3283 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_3284 = cvt(_T_3283) @[Parameters.scala 117:49]
    node _T_3286 = and(_T_3284, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_3287 = asSInt(_T_3286) @[Parameters.scala 117:52]
    node _T_3289 = eq(_T_3287, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3290 = or(_T_3265, _T_3273) @[Parameters.scala 133:42]
    node _T_3291 = or(_T_3290, _T_3281) @[Parameters.scala 133:42]
    node _T_3292 = or(_T_3291, _T_3289) @[Parameters.scala 133:42]
    node _T_3293 = and(_T_3257, _T_3292) @[Parameters.scala 132:56]
    node _T_3295 = or(UInt<1>("h00"), _T_3254) @[Parameters.scala 134:30]
    node _T_3296 = or(_T_3295, _T_3293) @[Parameters.scala 134:30]
    wire _T_3305 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 384:17]
    _T_3305 is invalid @[Edges.scala 384:17]
    _T_3305.opcode <= UInt<2>("h02") @[Edges.scala 385:15]
    _T_3305.param <= UInt<3>("h01") @[Edges.scala 386:15]
    _T_3305.size <= a_size @[Edges.scala 387:15]
    _T_3305.source <= UInt<1>("h00") @[Edges.scala 388:15]
    _T_3305.address <= s2_req.addr @[Edges.scala 389:15]
    node _T_3315 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_3316 = dshl(UInt<1>("h01"), _T_3315) @[OneHot.scala 49:12]
    node _T_3317 = bits(_T_3316, 2, 0) @[OneHot.scala 49:37]
    node _T_3319 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_3321 = bits(_T_3317, 2, 2) @[package.scala 44:26]
    node _T_3322 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_3324 = eq(_T_3322, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3325 = and(UInt<1>("h01"), _T_3324) @[package.scala 49:27]
    node _T_3326 = and(_T_3321, _T_3325) @[package.scala 50:38]
    node _T_3327 = or(_T_3319, _T_3326) @[package.scala 50:29]
    node _T_3328 = and(UInt<1>("h01"), _T_3322) @[package.scala 49:27]
    node _T_3329 = and(_T_3321, _T_3328) @[package.scala 50:38]
    node _T_3330 = or(_T_3319, _T_3329) @[package.scala 50:29]
    node _T_3331 = bits(_T_3317, 1, 1) @[package.scala 44:26]
    node _T_3332 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_3334 = eq(_T_3332, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3335 = and(_T_3325, _T_3334) @[package.scala 49:27]
    node _T_3336 = and(_T_3331, _T_3335) @[package.scala 50:38]
    node _T_3337 = or(_T_3327, _T_3336) @[package.scala 50:29]
    node _T_3338 = and(_T_3325, _T_3332) @[package.scala 49:27]
    node _T_3339 = and(_T_3331, _T_3338) @[package.scala 50:38]
    node _T_3340 = or(_T_3327, _T_3339) @[package.scala 50:29]
    node _T_3341 = and(_T_3328, _T_3334) @[package.scala 49:27]
    node _T_3342 = and(_T_3331, _T_3341) @[package.scala 50:38]
    node _T_3343 = or(_T_3330, _T_3342) @[package.scala 50:29]
    node _T_3344 = and(_T_3328, _T_3332) @[package.scala 49:27]
    node _T_3345 = and(_T_3331, _T_3344) @[package.scala 50:38]
    node _T_3346 = or(_T_3330, _T_3345) @[package.scala 50:29]
    node _T_3347 = bits(_T_3317, 0, 0) @[package.scala 44:26]
    node _T_3348 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_3350 = eq(_T_3348, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3351 = and(_T_3335, _T_3350) @[package.scala 49:27]
    node _T_3352 = and(_T_3347, _T_3351) @[package.scala 50:38]
    node _T_3353 = or(_T_3337, _T_3352) @[package.scala 50:29]
    node _T_3354 = and(_T_3335, _T_3348) @[package.scala 49:27]
    node _T_3355 = and(_T_3347, _T_3354) @[package.scala 50:38]
    node _T_3356 = or(_T_3337, _T_3355) @[package.scala 50:29]
    node _T_3357 = and(_T_3338, _T_3350) @[package.scala 49:27]
    node _T_3358 = and(_T_3347, _T_3357) @[package.scala 50:38]
    node _T_3359 = or(_T_3340, _T_3358) @[package.scala 50:29]
    node _T_3360 = and(_T_3338, _T_3348) @[package.scala 49:27]
    node _T_3361 = and(_T_3347, _T_3360) @[package.scala 50:38]
    node _T_3362 = or(_T_3340, _T_3361) @[package.scala 50:29]
    node _T_3363 = and(_T_3341, _T_3350) @[package.scala 49:27]
    node _T_3364 = and(_T_3347, _T_3363) @[package.scala 50:38]
    node _T_3365 = or(_T_3343, _T_3364) @[package.scala 50:29]
    node _T_3366 = and(_T_3341, _T_3348) @[package.scala 49:27]
    node _T_3367 = and(_T_3347, _T_3366) @[package.scala 50:38]
    node _T_3368 = or(_T_3343, _T_3367) @[package.scala 50:29]
    node _T_3369 = and(_T_3344, _T_3350) @[package.scala 49:27]
    node _T_3370 = and(_T_3347, _T_3369) @[package.scala 50:38]
    node _T_3371 = or(_T_3346, _T_3370) @[package.scala 50:29]
    node _T_3372 = and(_T_3344, _T_3348) @[package.scala 49:27]
    node _T_3373 = and(_T_3347, _T_3372) @[package.scala 50:38]
    node _T_3374 = or(_T_3346, _T_3373) @[package.scala 50:29]
    node _T_3375 = cat(_T_3356, _T_3353) @[Cat.scala 30:58]
    node _T_3376 = cat(_T_3362, _T_3359) @[Cat.scala 30:58]
    node _T_3377 = cat(_T_3376, _T_3375) @[Cat.scala 30:58]
    node _T_3378 = cat(_T_3368, _T_3365) @[Cat.scala 30:58]
    node _T_3379 = cat(_T_3374, _T_3371) @[Cat.scala 30:58]
    node _T_3380 = cat(_T_3379, _T_3378) @[Cat.scala 30:58]
    node _T_3381 = cat(_T_3380, _T_3377) @[Cat.scala 30:58]
    _T_3305.mask <= _T_3381 @[Edges.scala 390:15]
    _T_3305.data <= a_data @[Edges.scala 391:15]
    node _T_3386 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_3388 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_3389 = and(_T_3386, _T_3388) @[Parameters.scala 63:37]
    node _T_3390 = or(UInt<1>("h00"), _T_3389) @[Parameters.scala 132:31]
    node _T_3392 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_3393 = cvt(_T_3392) @[Parameters.scala 117:49]
    node _T_3395 = and(_T_3393, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3396 = asSInt(_T_3395) @[Parameters.scala 117:52]
    node _T_3398 = eq(_T_3396, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3400 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_3401 = cvt(_T_3400) @[Parameters.scala 117:49]
    node _T_3403 = and(_T_3401, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_3404 = asSInt(_T_3403) @[Parameters.scala 117:52]
    node _T_3406 = eq(_T_3404, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3408 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_3409 = cvt(_T_3408) @[Parameters.scala 117:49]
    node _T_3411 = and(_T_3409, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_3412 = asSInt(_T_3411) @[Parameters.scala 117:52]
    node _T_3414 = eq(_T_3412, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3415 = or(_T_3398, _T_3406) @[Parameters.scala 133:42]
    node _T_3416 = or(_T_3415, _T_3414) @[Parameters.scala 133:42]
    node _T_3417 = and(_T_3390, _T_3416) @[Parameters.scala 132:56]
    node _T_3420 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_3422 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_3423 = cvt(_T_3422) @[Parameters.scala 117:49]
    node _T_3425 = and(_T_3423, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3426 = asSInt(_T_3425) @[Parameters.scala 117:52]
    node _T_3428 = eq(_T_3426, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3430 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_3431 = cvt(_T_3430) @[Parameters.scala 117:49]
    node _T_3433 = and(_T_3431, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_3434 = asSInt(_T_3433) @[Parameters.scala 117:52]
    node _T_3436 = eq(_T_3434, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3438 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_3439 = cvt(_T_3438) @[Parameters.scala 117:49]
    node _T_3441 = and(_T_3439, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_3442 = asSInt(_T_3441) @[Parameters.scala 117:52]
    node _T_3444 = eq(_T_3442, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3446 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_3447 = cvt(_T_3446) @[Parameters.scala 117:49]
    node _T_3449 = and(_T_3447, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_3450 = asSInt(_T_3449) @[Parameters.scala 117:52]
    node _T_3452 = eq(_T_3450, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3453 = or(_T_3428, _T_3436) @[Parameters.scala 133:42]
    node _T_3454 = or(_T_3453, _T_3444) @[Parameters.scala 133:42]
    node _T_3455 = or(_T_3454, _T_3452) @[Parameters.scala 133:42]
    node _T_3456 = and(_T_3420, _T_3455) @[Parameters.scala 132:56]
    node _T_3458 = or(UInt<1>("h00"), _T_3417) @[Parameters.scala 134:30]
    node _T_3459 = or(_T_3458, _T_3456) @[Parameters.scala 134:30]
    wire _T_3468 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 384:17]
    _T_3468 is invalid @[Edges.scala 384:17]
    _T_3468.opcode <= UInt<2>("h02") @[Edges.scala 385:15]
    _T_3468.param <= UInt<3>("h02") @[Edges.scala 386:15]
    _T_3468.size <= a_size @[Edges.scala 387:15]
    _T_3468.source <= UInt<1>("h00") @[Edges.scala 388:15]
    _T_3468.address <= s2_req.addr @[Edges.scala 389:15]
    node _T_3478 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_3479 = dshl(UInt<1>("h01"), _T_3478) @[OneHot.scala 49:12]
    node _T_3480 = bits(_T_3479, 2, 0) @[OneHot.scala 49:37]
    node _T_3482 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_3484 = bits(_T_3480, 2, 2) @[package.scala 44:26]
    node _T_3485 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_3487 = eq(_T_3485, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3488 = and(UInt<1>("h01"), _T_3487) @[package.scala 49:27]
    node _T_3489 = and(_T_3484, _T_3488) @[package.scala 50:38]
    node _T_3490 = or(_T_3482, _T_3489) @[package.scala 50:29]
    node _T_3491 = and(UInt<1>("h01"), _T_3485) @[package.scala 49:27]
    node _T_3492 = and(_T_3484, _T_3491) @[package.scala 50:38]
    node _T_3493 = or(_T_3482, _T_3492) @[package.scala 50:29]
    node _T_3494 = bits(_T_3480, 1, 1) @[package.scala 44:26]
    node _T_3495 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_3497 = eq(_T_3495, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3498 = and(_T_3488, _T_3497) @[package.scala 49:27]
    node _T_3499 = and(_T_3494, _T_3498) @[package.scala 50:38]
    node _T_3500 = or(_T_3490, _T_3499) @[package.scala 50:29]
    node _T_3501 = and(_T_3488, _T_3495) @[package.scala 49:27]
    node _T_3502 = and(_T_3494, _T_3501) @[package.scala 50:38]
    node _T_3503 = or(_T_3490, _T_3502) @[package.scala 50:29]
    node _T_3504 = and(_T_3491, _T_3497) @[package.scala 49:27]
    node _T_3505 = and(_T_3494, _T_3504) @[package.scala 50:38]
    node _T_3506 = or(_T_3493, _T_3505) @[package.scala 50:29]
    node _T_3507 = and(_T_3491, _T_3495) @[package.scala 49:27]
    node _T_3508 = and(_T_3494, _T_3507) @[package.scala 50:38]
    node _T_3509 = or(_T_3493, _T_3508) @[package.scala 50:29]
    node _T_3510 = bits(_T_3480, 0, 0) @[package.scala 44:26]
    node _T_3511 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_3513 = eq(_T_3511, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3514 = and(_T_3498, _T_3513) @[package.scala 49:27]
    node _T_3515 = and(_T_3510, _T_3514) @[package.scala 50:38]
    node _T_3516 = or(_T_3500, _T_3515) @[package.scala 50:29]
    node _T_3517 = and(_T_3498, _T_3511) @[package.scala 49:27]
    node _T_3518 = and(_T_3510, _T_3517) @[package.scala 50:38]
    node _T_3519 = or(_T_3500, _T_3518) @[package.scala 50:29]
    node _T_3520 = and(_T_3501, _T_3513) @[package.scala 49:27]
    node _T_3521 = and(_T_3510, _T_3520) @[package.scala 50:38]
    node _T_3522 = or(_T_3503, _T_3521) @[package.scala 50:29]
    node _T_3523 = and(_T_3501, _T_3511) @[package.scala 49:27]
    node _T_3524 = and(_T_3510, _T_3523) @[package.scala 50:38]
    node _T_3525 = or(_T_3503, _T_3524) @[package.scala 50:29]
    node _T_3526 = and(_T_3504, _T_3513) @[package.scala 49:27]
    node _T_3527 = and(_T_3510, _T_3526) @[package.scala 50:38]
    node _T_3528 = or(_T_3506, _T_3527) @[package.scala 50:29]
    node _T_3529 = and(_T_3504, _T_3511) @[package.scala 49:27]
    node _T_3530 = and(_T_3510, _T_3529) @[package.scala 50:38]
    node _T_3531 = or(_T_3506, _T_3530) @[package.scala 50:29]
    node _T_3532 = and(_T_3507, _T_3513) @[package.scala 49:27]
    node _T_3533 = and(_T_3510, _T_3532) @[package.scala 50:38]
    node _T_3534 = or(_T_3509, _T_3533) @[package.scala 50:29]
    node _T_3535 = and(_T_3507, _T_3511) @[package.scala 49:27]
    node _T_3536 = and(_T_3510, _T_3535) @[package.scala 50:38]
    node _T_3537 = or(_T_3509, _T_3536) @[package.scala 50:29]
    node _T_3538 = cat(_T_3519, _T_3516) @[Cat.scala 30:58]
    node _T_3539 = cat(_T_3525, _T_3522) @[Cat.scala 30:58]
    node _T_3540 = cat(_T_3539, _T_3538) @[Cat.scala 30:58]
    node _T_3541 = cat(_T_3531, _T_3528) @[Cat.scala 30:58]
    node _T_3542 = cat(_T_3537, _T_3534) @[Cat.scala 30:58]
    node _T_3543 = cat(_T_3542, _T_3541) @[Cat.scala 30:58]
    node _T_3544 = cat(_T_3543, _T_3540) @[Cat.scala 30:58]
    _T_3468.mask <= _T_3544 @[Edges.scala 390:15]
    _T_3468.data <= a_data @[Edges.scala 391:15]
    node _T_3549 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 63:32]
    node _T_3551 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 63:42]
    node _T_3552 = and(_T_3549, _T_3551) @[Parameters.scala 63:37]
    node _T_3553 = or(UInt<1>("h00"), _T_3552) @[Parameters.scala 132:31]
    node _T_3555 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_3556 = cvt(_T_3555) @[Parameters.scala 117:49]
    node _T_3558 = and(_T_3556, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3559 = asSInt(_T_3558) @[Parameters.scala 117:52]
    node _T_3561 = eq(_T_3559, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3563 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_3564 = cvt(_T_3563) @[Parameters.scala 117:49]
    node _T_3566 = and(_T_3564, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
    node _T_3567 = asSInt(_T_3566) @[Parameters.scala 117:52]
    node _T_3569 = eq(_T_3567, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3571 = xor(s2_req.addr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_3572 = cvt(_T_3571) @[Parameters.scala 117:49]
    node _T_3574 = and(_T_3572, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_3575 = asSInt(_T_3574) @[Parameters.scala 117:52]
    node _T_3577 = eq(_T_3575, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3578 = or(_T_3561, _T_3569) @[Parameters.scala 133:42]
    node _T_3579 = or(_T_3578, _T_3577) @[Parameters.scala 133:42]
    node _T_3580 = and(_T_3553, _T_3579) @[Parameters.scala 132:56]
    node _T_3583 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_3585 = xor(s2_req.addr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_3586 = cvt(_T_3585) @[Parameters.scala 117:49]
    node _T_3588 = and(_T_3586, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
    node _T_3589 = asSInt(_T_3588) @[Parameters.scala 117:52]
    node _T_3591 = eq(_T_3589, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3593 = xor(s2_req.addr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_3594 = cvt(_T_3593) @[Parameters.scala 117:49]
    node _T_3596 = and(_T_3594, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
    node _T_3597 = asSInt(_T_3596) @[Parameters.scala 117:52]
    node _T_3599 = eq(_T_3597, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3601 = xor(s2_req.addr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_3602 = cvt(_T_3601) @[Parameters.scala 117:49]
    node _T_3604 = and(_T_3602, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_3605 = asSInt(_T_3604) @[Parameters.scala 117:52]
    node _T_3607 = eq(_T_3605, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3609 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_3610 = cvt(_T_3609) @[Parameters.scala 117:49]
    node _T_3612 = and(_T_3610, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_3613 = asSInt(_T_3612) @[Parameters.scala 117:52]
    node _T_3615 = eq(_T_3613, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_3616 = or(_T_3591, _T_3599) @[Parameters.scala 133:42]
    node _T_3617 = or(_T_3616, _T_3607) @[Parameters.scala 133:42]
    node _T_3618 = or(_T_3617, _T_3615) @[Parameters.scala 133:42]
    node _T_3619 = and(_T_3583, _T_3618) @[Parameters.scala 132:56]
    node _T_3621 = or(UInt<1>("h00"), _T_3580) @[Parameters.scala 134:30]
    node _T_3622 = or(_T_3621, _T_3619) @[Parameters.scala 134:30]
    wire _T_3631 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 384:17]
    _T_3631 is invalid @[Edges.scala 384:17]
    _T_3631.opcode <= UInt<2>("h02") @[Edges.scala 385:15]
    _T_3631.param <= UInt<3>("h03") @[Edges.scala 386:15]
    _T_3631.size <= a_size @[Edges.scala 387:15]
    _T_3631.source <= UInt<1>("h00") @[Edges.scala 388:15]
    _T_3631.address <= s2_req.addr @[Edges.scala 389:15]
    node _T_3641 = bits(a_size, 1, 0) @[OneHot.scala 49:17]
    node _T_3642 = dshl(UInt<1>("h01"), _T_3641) @[OneHot.scala 49:12]
    node _T_3643 = bits(_T_3642, 2, 0) @[OneHot.scala 49:37]
    node _T_3645 = geq(a_size, UInt<2>("h03")) @[package.scala 41:21]
    node _T_3647 = bits(_T_3643, 2, 2) @[package.scala 44:26]
    node _T_3648 = bits(s2_req.addr, 2, 2) @[package.scala 45:26]
    node _T_3650 = eq(_T_3648, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3651 = and(UInt<1>("h01"), _T_3650) @[package.scala 49:27]
    node _T_3652 = and(_T_3647, _T_3651) @[package.scala 50:38]
    node _T_3653 = or(_T_3645, _T_3652) @[package.scala 50:29]
    node _T_3654 = and(UInt<1>("h01"), _T_3648) @[package.scala 49:27]
    node _T_3655 = and(_T_3647, _T_3654) @[package.scala 50:38]
    node _T_3656 = or(_T_3645, _T_3655) @[package.scala 50:29]
    node _T_3657 = bits(_T_3643, 1, 1) @[package.scala 44:26]
    node _T_3658 = bits(s2_req.addr, 1, 1) @[package.scala 45:26]
    node _T_3660 = eq(_T_3658, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3661 = and(_T_3651, _T_3660) @[package.scala 49:27]
    node _T_3662 = and(_T_3657, _T_3661) @[package.scala 50:38]
    node _T_3663 = or(_T_3653, _T_3662) @[package.scala 50:29]
    node _T_3664 = and(_T_3651, _T_3658) @[package.scala 49:27]
    node _T_3665 = and(_T_3657, _T_3664) @[package.scala 50:38]
    node _T_3666 = or(_T_3653, _T_3665) @[package.scala 50:29]
    node _T_3667 = and(_T_3654, _T_3660) @[package.scala 49:27]
    node _T_3668 = and(_T_3657, _T_3667) @[package.scala 50:38]
    node _T_3669 = or(_T_3656, _T_3668) @[package.scala 50:29]
    node _T_3670 = and(_T_3654, _T_3658) @[package.scala 49:27]
    node _T_3671 = and(_T_3657, _T_3670) @[package.scala 50:38]
    node _T_3672 = or(_T_3656, _T_3671) @[package.scala 50:29]
    node _T_3673 = bits(_T_3643, 0, 0) @[package.scala 44:26]
    node _T_3674 = bits(s2_req.addr, 0, 0) @[package.scala 45:26]
    node _T_3676 = eq(_T_3674, UInt<1>("h00")) @[package.scala 46:20]
    node _T_3677 = and(_T_3661, _T_3676) @[package.scala 49:27]
    node _T_3678 = and(_T_3673, _T_3677) @[package.scala 50:38]
    node _T_3679 = or(_T_3663, _T_3678) @[package.scala 50:29]
    node _T_3680 = and(_T_3661, _T_3674) @[package.scala 49:27]
    node _T_3681 = and(_T_3673, _T_3680) @[package.scala 50:38]
    node _T_3682 = or(_T_3663, _T_3681) @[package.scala 50:29]
    node _T_3683 = and(_T_3664, _T_3676) @[package.scala 49:27]
    node _T_3684 = and(_T_3673, _T_3683) @[package.scala 50:38]
    node _T_3685 = or(_T_3666, _T_3684) @[package.scala 50:29]
    node _T_3686 = and(_T_3664, _T_3674) @[package.scala 49:27]
    node _T_3687 = and(_T_3673, _T_3686) @[package.scala 50:38]
    node _T_3688 = or(_T_3666, _T_3687) @[package.scala 50:29]
    node _T_3689 = and(_T_3667, _T_3676) @[package.scala 49:27]
    node _T_3690 = and(_T_3673, _T_3689) @[package.scala 50:38]
    node _T_3691 = or(_T_3669, _T_3690) @[package.scala 50:29]
    node _T_3692 = and(_T_3667, _T_3674) @[package.scala 49:27]
    node _T_3693 = and(_T_3673, _T_3692) @[package.scala 50:38]
    node _T_3694 = or(_T_3669, _T_3693) @[package.scala 50:29]
    node _T_3695 = and(_T_3670, _T_3676) @[package.scala 49:27]
    node _T_3696 = and(_T_3673, _T_3695) @[package.scala 50:38]
    node _T_3697 = or(_T_3672, _T_3696) @[package.scala 50:29]
    node _T_3698 = and(_T_3670, _T_3674) @[package.scala 49:27]
    node _T_3699 = and(_T_3673, _T_3698) @[package.scala 50:38]
    node _T_3700 = or(_T_3672, _T_3699) @[package.scala 50:29]
    node _T_3701 = cat(_T_3682, _T_3679) @[Cat.scala 30:58]
    node _T_3702 = cat(_T_3688, _T_3685) @[Cat.scala 30:58]
    node _T_3703 = cat(_T_3702, _T_3701) @[Cat.scala 30:58]
    node _T_3704 = cat(_T_3694, _T_3691) @[Cat.scala 30:58]
    node _T_3705 = cat(_T_3700, _T_3697) @[Cat.scala 30:58]
    node _T_3706 = cat(_T_3705, _T_3704) @[Cat.scala 30:58]
    node _T_3707 = cat(_T_3706, _T_3703) @[Cat.scala 30:58]
    _T_3631.mask <= _T_3707 @[Edges.scala 390:15]
    _T_3631.data <= a_data @[Edges.scala 391:15]
    node _T_3708 = eq(UInt<4>("h0f"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3709 = mux(_T_3708, _T_3631, _T_2233) @[Mux.scala 46:16]
    node _T_3717 = eq(UInt<4>("h0e"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3718 = mux(_T_3717, _T_3468, _T_3709) @[Mux.scala 46:16]
    node _T_3726 = eq(UInt<4>("h0d"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3727 = mux(_T_3726, _T_3305, _T_3718) @[Mux.scala 46:16]
    node _T_3735 = eq(UInt<4>("h0c"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3736 = mux(_T_3735, _T_3142, _T_3727) @[Mux.scala 46:16]
    node _T_3744 = eq(UInt<4>("h08"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3745 = mux(_T_3744, _T_2979, _T_3736) @[Mux.scala 46:16]
    node _T_3753 = eq(UInt<4>("h0b"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3754 = mux(_T_3753, _T_2816, _T_3745) @[Mux.scala 46:16]
    node _T_3762 = eq(UInt<4>("h0a"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3763 = mux(_T_3762, _T_2653, _T_3754) @[Mux.scala 46:16]
    node _T_3771 = eq(UInt<4>("h09"), s2_req.cmd) @[Mux.scala 46:19]
    node _T_3772 = mux(_T_3771, _T_2490, _T_3763) @[Mux.scala 46:16]
    node _T_3780 = eq(UInt<3>("h04"), s2_req.cmd) @[Mux.scala 46:19]
    node atomics = mux(_T_3780, _T_2327, _T_3772) @[Mux.scala 46:16]
    node _T_3789 = eq(s2_victim_dirty, UInt<1>("h00")) @[DCache.scala 276:73]
    node _T_3790 = and(s2_valid_cached_miss, _T_3789) @[DCache.scala 276:70]
    node _T_3791 = not(uncachedInFlight[0]) @[DCache.scala 277:88]
    node _T_3793 = eq(_T_3791, UInt<1>("h00")) @[DCache.scala 277:88]
    node _T_3795 = eq(_T_3793, UInt<1>("h00")) @[DCache.scala 277:63]
    node _T_3796 = and(s2_valid_uncached, _T_3795) @[DCache.scala 277:60]
    node _T_3797 = or(_T_3790, _T_3796) @[DCache.scala 276:91]
    node _T_3798 = and(grantackq.io.enq.ready, _T_3797) @[DCache.scala 276:44]
    io.mem.0.a.valid <= _T_3798 @[DCache.scala 276:18]
    node _T_3800 = eq(s2_uncached, UInt<1>("h00")) @[DCache.scala 278:24]
    node _T_3802 = eq(s2_write, UInt<1>("h00")) @[DCache.scala 278:51]
    node _T_3804 = eq(pstore1_amo, UInt<1>("h00")) @[DCache.scala 278:71]
    node _T_3805 = mux(_T_3804, put, atomics) @[DCache.scala 278:70]
    node _T_3813 = mux(_T_3802, get, _T_3805) @[DCache.scala 278:50]
    node _T_3821 = mux(_T_3800, acquire, _T_3813) @[DCache.scala 278:23]
    io.mem.0.a.bits <- _T_3821 @[DCache.scala 278:17]
    node _T_3829 = and(io.mem.0.a.ready, io.mem.0.a.valid) @[Decoupled.scala 30:37]
    when _T_3829 : @[DCache.scala 281:26]
      when s2_uncached : @[DCache.scala 282:24]
        uncachedInFlight[UInt<1>("h00")] <= UInt<1>("h01") @[DCache.scala 283:34]
        uncachedReqs[UInt<1>("h00")] <- s2_req @[DCache.scala 284:30]
        skip @[DCache.scala 282:24]
      node _T_3849 = eq(s2_uncached, UInt<1>("h00")) @[DCache.scala 282:24]
      when _T_3849 : @[DCache.scala 285:17]
        cached_grant_wait <= UInt<1>("h01") @[DCache.scala 286:25]
        skip @[DCache.scala 285:17]
      skip @[DCache.scala 281:26]
    node _T_3851 = and(io.mem.0.d.ready, io.mem.0.d.valid) @[Decoupled.scala 30:37]
    node _T_3853 = asUInt(asSInt(UInt<8>("h0ff"))) @[package.scala 19:64]
    node _T_3854 = dshl(_T_3853, io.mem.0.d.bits.size) @[package.scala 19:71]
    node _T_3855 = bits(_T_3854, 7, 0) @[package.scala 19:76]
    node _T_3856 = not(_T_3855) @[package.scala 19:40]
    node _T_3857 = shr(_T_3856, 3) @[Edges.scala 198:59]
    node _T_3858 = bits(io.mem.0.d.bits.opcode, 0, 0) @[Edges.scala 90:36]
    node _T_3860 = mux(_T_3858, _T_3857, UInt<1>("h00")) @[Edges.scala 199:14]
    reg _T_3862 : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Reg.scala 26:44]
    node _T_3864 = sub(_T_3862, UInt<1>("h01")) @[Edges.scala 208:28]
    node _T_3865 = asUInt(_T_3864) @[Edges.scala 208:28]
    node _T_3866 = tail(_T_3865, 1) @[Edges.scala 208:28]
    node d_first = eq(_T_3862, UInt<1>("h00")) @[Edges.scala 209:25]
    node _T_3869 = eq(_T_3862, UInt<1>("h01")) @[Edges.scala 210:25]
    node _T_3871 = eq(_T_3860, UInt<1>("h00")) @[Edges.scala 210:47]
    node d_last = or(_T_3869, _T_3871) @[Edges.scala 210:37]
    node d_done = and(d_last, _T_3851) @[Edges.scala 211:22]
    node _T_3872 = not(_T_3866) @[Edges.scala 212:27]
    node _T_3873 = and(_T_3860, _T_3872) @[Edges.scala 212:25]
    when _T_3851 : @[Edges.scala 213:17]
      node _T_3874 = mux(d_first, _T_3860, _T_3866) @[Edges.scala 214:21]
      _T_3862 <= _T_3874 @[Edges.scala 214:15]
      skip @[Edges.scala 213:17]
    node d_address_inc = shl(_T_3873, 3) @[Edges.scala 247:29]
    node _T_3877 = eq(io.mem.0.d.bits.opcode, UInt<3>("h04")) @[Package.scala 7:47]
    node _T_3878 = eq(io.mem.0.d.bits.opcode, UInt<3>("h05")) @[Package.scala 7:47]
    node grantIsCached = or(_T_3877, _T_3878) @[Package.scala 7:62]
    node _T_3882 = eq(io.mem.0.d.bits.opcode, UInt<1>("h00")) @[Package.scala 7:47]
    node _T_3883 = eq(io.mem.0.d.bits.opcode, UInt<1>("h01")) @[Package.scala 7:47]
    node _T_3884 = eq(io.mem.0.d.bits.opcode, UInt<2>("h02")) @[Package.scala 7:47]
    node _T_3885 = or(_T_3882, _T_3883) @[Package.scala 7:62]
    node grantIsUncached = or(_T_3885, _T_3884) @[Package.scala 7:62]
    node grantIsVoluntary = eq(io.mem.0.d.bits.opcode, UInt<3>("h06")) @[DCache.scala 294:47]
    node grantIsRefill = eq(io.mem.0.d.bits.opcode, UInt<3>("h05")) @[DCache.scala 295:44]
    io.mem.0.d.ready <= UInt<1>("h01") @[DCache.scala 296:18]
    node _T_3889 = and(io.mem.0.d.ready, io.mem.0.d.valid) @[Decoupled.scala 30:37]
    when _T_3889 : @[DCache.scala 297:26]
      when grantIsCached : @[DCache.scala 298:26]
        node _T_3890 = or(cached_grant_wait, reset) @[DCache.scala 299:13]
        node _T_3892 = eq(_T_3890, UInt<1>("h00")) @[DCache.scala 299:13]
        when _T_3892 : @[DCache.scala 299:13]
          printf(clock, UInt<1>(1), "Assertion failed: A GrantData was unexpected by the dcache.\n    at DCache.scala:299 assert(cached_grant_wait, \"A GrantData was unexpected by the dcache.\")\n") @[DCache.scala 299:13]
          stop(clock, UInt<1>(1), 1) @[DCache.scala 299:13]
          skip @[DCache.scala 299:13]
        when d_last : @[DCache.scala 300:20]
          cached_grant_wait <= UInt<1>("h00") @[DCache.scala 300:40]
          skip @[DCache.scala 300:20]
        skip @[DCache.scala 298:26]
      node _T_3895 = eq(grantIsCached, UInt<1>("h00")) @[DCache.scala 298:26]
      node _T_3896 = and(_T_3895, grantIsUncached) @[DCache.scala 301:35]
      when _T_3896 : @[DCache.scala 301:35]
        node _T_3914 = or(uncachedInFlight[UInt<1>("h00")], reset) @[DCache.scala 304:13]
        node _T_3916 = eq(_T_3914, UInt<1>("h00")) @[DCache.scala 304:13]
        when _T_3916 : @[DCache.scala 304:13]
          printf(clock, UInt<1>(1), "Assertion failed: An AccessAck was unexpected by the dcache.\n    at DCache.scala:304 assert(uncachedInFlight(id), \"An AccessAck was unexpected by the dcache.\") // TODO must handle Ack coming back on same cycle!\n") @[DCache.scala 304:13]
          stop(clock, UInt<1>(1), 1) @[DCache.scala 304:13]
          skip @[DCache.scala 304:13]
        when d_last : @[DCache.scala 305:20]
          uncachedInFlight[UInt<1>("h00")] <= UInt<1>("h00") @[DCache.scala 305:43]
          skip @[DCache.scala 305:20]
        s2_data <= io.mem.0.d.bits.data @[DCache.scala 306:15]
        s2_req.cmd <= uncachedReqs[UInt<1>("h00")].cmd @[DCache.scala 307:18]
        s2_req.typ <= uncachedReqs[UInt<1>("h00")].typ @[DCache.scala 308:18]
        s2_req.tag <= uncachedReqs[UInt<1>("h00")].tag @[DCache.scala 309:18]
        node _T_3921 = shr(tlb.io.resp.paddr, 3) @[DCache.scala 310:35]
        node _T_3922 = bits(uncachedReqs[UInt<1>("h00")].addr, 2, 0) @[DCache.scala 310:76]
        node _T_3923 = cat(_T_3921, _T_3922) @[Cat.scala 30:58]
        s2_req.addr <= _T_3923 @[DCache.scala 310:19]
        skip @[DCache.scala 301:35]
      node _T_3925 = eq(grantIsCached, UInt<1>("h00")) @[DCache.scala 298:26]
      node _T_3927 = eq(grantIsUncached, UInt<1>("h00")) @[DCache.scala 301:35]
      node _T_3928 = and(_T_3925, _T_3927) @[DCache.scala 301:35]
      node _T_3929 = and(_T_3928, grantIsVoluntary) @[DCache.scala 311:36]
      when _T_3929 : @[DCache.scala 311:36]
        node _T_3930 = or(release_ack_wait, reset) @[DCache.scala 312:13]
        node _T_3932 = eq(_T_3930, UInt<1>("h00")) @[DCache.scala 312:13]
        when _T_3932 : @[DCache.scala 312:13]
          printf(clock, UInt<1>(1), "Assertion failed: A ReleaseAck was unexpected by the dcache.\n    at DCache.scala:312 assert(release_ack_wait, \"A ReleaseAck was unexpected by the dcache.\") // TODO should handle Ack coming back on same cycle!\n") @[DCache.scala 312:13]
          stop(clock, UInt<1>(1), 1) @[DCache.scala 312:13]
          skip @[DCache.scala 312:13]
        release_ack_wait <= UInt<1>("h00") @[DCache.scala 313:24]
        skip @[DCache.scala 311:36]
      skip @[DCache.scala 297:26]
    node doRefillBeat = and(grantIsRefill, io.mem.0.d.valid) @[DCache.scala 318:36]
    dataArb.io.in[1].valid <= doRefillBeat @[DCache.scala 319:26]
    node _T_3935 = eq(doRefillBeat, UInt<1>("h00")) @[DCache.scala 320:36]
    node _T_3936 = or(dataArb.io.in[1].ready, _T_3935) @[DCache.scala 320:33]
    node _T_3937 = or(_T_3936, reset) @[DCache.scala 320:9]
    node _T_3939 = eq(_T_3937, UInt<1>("h00")) @[DCache.scala 320:9]
    when _T_3939 : @[DCache.scala 320:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:320 assert(dataArb.io.in(1).ready || !doRefillBeat)\n") @[DCache.scala 320:9]
      stop(clock, UInt<1>(1), 1) @[DCache.scala 320:9]
      skip @[DCache.scala 320:9]
    dataArb.io.in[1].bits.write <= UInt<1>("h01") @[DCache.scala 321:31]
    node _T_3941 = or(acquire_address, d_address_inc) @[DCache.scala 322:52]
    dataArb.io.in[1].bits.addr <= _T_3941 @[DCache.scala 322:30]
    dataArb.io.in[1].bits.way_en <= s2_victim_way @[DCache.scala 323:32]
    dataArb.io.in[1].bits.wdata <= io.mem.0.d.bits.data @[DCache.scala 324:31]
    node _T_3943 = not(UInt<8>("h00")) @[DCache.scala 325:34]
    dataArb.io.in[1].bits.wmask <= _T_3943 @[DCache.scala 325:31]
    node _T_3944 = and(grantIsCached, d_done) @[DCache.scala 327:48]
    metaWriteArb.io.in[1].valid <= _T_3944 @[DCache.scala 327:31]
    node _T_3946 = eq(metaWriteArb.io.in[1].valid, UInt<1>("h00")) @[DCache.scala 328:10]
    node _T_3947 = or(_T_3946, metaWriteArb.io.in[1].ready) @[DCache.scala 328:39]
    node _T_3948 = or(_T_3947, reset) @[DCache.scala 328:9]
    node _T_3950 = eq(_T_3948, UInt<1>("h00")) @[DCache.scala 328:9]
    when _T_3950 : @[DCache.scala 328:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:328 assert(!metaWriteArb.io.in(1).valid || metaWriteArb.io.in(1).ready)\n") @[DCache.scala 328:9]
      stop(clock, UInt<1>(1), 1) @[DCache.scala 328:9]
      skip @[DCache.scala 328:9]
    metaWriteArb.io.in[1].bits.way_en <= s2_victim_way @[DCache.scala 329:37]
    node _T_3951 = bits(s2_req.addr, 11, 6) @[DCache.scala 330:48]
    metaWriteArb.io.in[1].bits.idx <= _T_3951 @[DCache.scala 330:34]
    node _T_3953 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 36:32]
    node _T_3955 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 36:49]
    node _T_3956 = or(_T_3953, _T_3955) @[Consts.scala 36:42]
    node _T_3957 = bits(s2_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_3959 = eq(s2_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_3960 = or(_T_3957, _T_3959) @[Consts.scala 33:33]
    node _T_3961 = or(_T_3956, _T_3960) @[Consts.scala 36:59]
    node _T_3963 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 36:32]
    node _T_3965 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 36:49]
    node _T_3966 = or(_T_3963, _T_3965) @[Consts.scala 36:42]
    node _T_3967 = bits(s2_req.cmd, 3, 3) @[Consts.scala 33:29]
    node _T_3969 = eq(s2_req.cmd, UInt<3>("h04")) @[Consts.scala 33:40]
    node _T_3970 = or(_T_3967, _T_3969) @[Consts.scala 33:33]
    node _T_3971 = or(_T_3966, _T_3970) @[Consts.scala 36:59]
    node _T_3973 = eq(s2_req.cmd, UInt<2>("h03")) @[Consts.scala 37:54]
    node _T_3974 = or(_T_3971, _T_3973) @[Consts.scala 37:47]
    node _T_3976 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 37:71]
    node _T_3977 = or(_T_3974, _T_3976) @[Consts.scala 37:64]
    node _T_3978 = cat(_T_3961, _T_3977) @[Cat.scala 30:58]
    node _T_3979 = cat(_T_3978, io.mem.0.d.bits.param) @[Cat.scala 30:58]
    node _T_3983 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_3985 = cat(_T_3983, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_3989 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_3991 = cat(_T_3989, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_3995 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_3997 = cat(_T_3995, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_4001 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_4003 = cat(_T_4001, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_4005 = eq(_T_4003, _T_3979) @[Mux.scala 46:19]
    node _T_4006 = mux(_T_4005, UInt<2>("h03"), UInt<2>("h00")) @[Mux.scala 46:16]
    node _T_4007 = eq(_T_3997, _T_3979) @[Mux.scala 46:19]
    node _T_4008 = mux(_T_4007, UInt<2>("h02"), _T_4006) @[Mux.scala 46:16]
    node _T_4009 = eq(_T_3991, _T_3979) @[Mux.scala 46:19]
    node _T_4010 = mux(_T_4009, UInt<2>("h02"), _T_4008) @[Mux.scala 46:16]
    node _T_4011 = eq(_T_3985, _T_3979) @[Mux.scala 46:19]
    node _T_4012 = mux(_T_4011, UInt<2>("h01"), _T_4010) @[Mux.scala 46:16]
    wire _T_4015 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_4015 is invalid @[Metadata.scala 160:20]
    _T_4015.state <= _T_4012 @[Metadata.scala 161:16]
    metaWriteArb.io.in[1].bits.data.coh <- _T_4015 @[DCache.scala 331:39]
    node _T_4017 = bits(s2_req.addr, 31, 12) @[DCache.scala 332:53]
    metaWriteArb.io.in[1].bits.data.tag <= _T_4017 @[DCache.scala 332:39]
    reg blockUncachedGrant : UInt<1>, clock @[DCache.scala 334:31]
    blockUncachedGrant <= dataArb.io.out.valid @[DCache.scala 335:22]
    when grantIsUncached : @[DCache.scala 336:26]
      node _T_4019 = or(blockUncachedGrant, s1_valid) @[DCache.scala 337:44]
      node _T_4021 = eq(_T_4019, UInt<1>("h00")) @[DCache.scala 337:23]
      io.mem.0.d.ready <= _T_4021 @[DCache.scala 337:20]
      node _T_4023 = eq(io.mem.0.d.ready, UInt<1>("h00")) @[DCache.scala 339:29]
      node _T_4024 = and(io.mem.0.d.valid, _T_4023) @[DCache.scala 339:26]
      when _T_4024 : @[DCache.scala 339:46]
        io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 340:24]
        dataArb.io.in[1].valid <= UInt<1>("h01") @[DCache.scala 341:30]
        dataArb.io.in[1].bits.write <= UInt<1>("h00") @[DCache.scala 342:35]
        node _T_4029 = eq(dataArb.io.in[1].ready, UInt<1>("h00")) @[DCache.scala 343:29]
        blockUncachedGrant <= _T_4029 @[DCache.scala 343:26]
        skip @[DCache.scala 339:46]
      skip @[DCache.scala 336:26]
    node _T_4030 = bits(io.mem.0.d.bits.opcode, 2, 2) @[Edges.scala 67:36]
    node _T_4031 = bits(io.mem.0.d.bits.opcode, 1, 1) @[Edges.scala 67:52]
    node _T_4033 = eq(_T_4031, UInt<1>("h00")) @[Edges.scala 67:43]
    node _T_4034 = and(_T_4030, _T_4033) @[Edges.scala 67:40]
    node _T_4035 = and(d_done, _T_4034) @[DCache.scala 348:36]
    grantackq.io.enq.valid <= _T_4035 @[DCache.scala 348:26]
    wire _T_4038 : {sink : UInt<4>} @[Edges.scala 333:17]
    _T_4038 is invalid @[Edges.scala 333:17]
    _T_4038.sink <= io.mem.0.d.bits.sink @[Edges.scala 334:12]
    grantackq.io.enq.bits <- _T_4038 @[DCache.scala 349:25]
    io.mem.0.e <- grantackq.io.deq @[DCache.scala 350:12]
    node _T_4041 = eq(grantackq.io.enq.valid, UInt<1>("h00")) @[DCache.scala 351:10]
    node _T_4042 = or(_T_4041, grantackq.io.enq.ready) @[DCache.scala 351:34]
    node _T_4043 = or(_T_4042, reset) @[DCache.scala 351:9]
    node _T_4045 = eq(_T_4043, UInt<1>("h00")) @[DCache.scala 351:9]
    when _T_4045 : @[DCache.scala 351:9]
      printf(clock, UInt<1>(1), "Assertion failed: Too many Grants received by dcache.\n    at DCache.scala:351 assert(!grantackq.io.enq.valid || grantackq.io.enq.ready, \"Too many Grants received by dcache.\")\n") @[DCache.scala 351:9]
      stop(clock, UInt<1>(1), 1) @[DCache.scala 351:9]
      skip @[DCache.scala 351:9]
    when d_done : @[DCache.scala 352:17]
      _T_570 <= UInt<1>("h01") @[Replacement.scala 20:22]
      skip @[DCache.scala 352:17]
    node _T_4047 = or(releaseInFlight, lrscValid) @[DCache.scala 355:37]
    node _T_4048 = and(s2_valid_hit, s2_lr) @[DCache.scala 355:67]
    node block_probe = or(_T_4047, _T_4048) @[DCache.scala 355:50]
    node _T_4050 = eq(block_probe, UInt<1>("h00")) @[DCache.scala 356:51]
    node _T_4051 = and(io.mem.0.b.valid, _T_4050) @[DCache.scala 356:48]
    metaReadArb.io.in[1].valid <= _T_4051 @[DCache.scala 356:30]
    node _T_4053 = eq(block_probe, UInt<1>("h00")) @[DCache.scala 357:51]
    node _T_4054 = and(metaReadArb.io.in[1].ready, _T_4053) @[DCache.scala 357:48]
    node _T_4056 = eq(s1_valid, UInt<1>("h00")) @[DCache.scala 357:67]
    node _T_4057 = and(_T_4054, _T_4056) @[DCache.scala 357:64]
    node _T_4059 = eq(s2_valid, UInt<1>("h00")) @[DCache.scala 357:81]
    node _T_4060 = or(_T_4059, s2_valid_hit) @[DCache.scala 357:91]
    node _T_4061 = and(_T_4057, _T_4060) @[DCache.scala 357:77]
    io.mem.0.b.ready <= _T_4061 @[DCache.scala 357:18]
    node _T_4062 = bits(io.mem.0.b.bits.address, 11, 6) @[DCache.scala 358:57]
    metaReadArb.io.in[1].bits.idx <= _T_4062 @[DCache.scala 358:33]
    node _T_4064 = not(UInt<4>("h00")) @[DCache.scala 359:39]
    metaReadArb.io.in[1].bits.way_en <= _T_4064 @[DCache.scala 359:36]
    node _T_4065 = and(io.mem.0.c.ready, io.mem.0.c.valid) @[Decoupled.scala 30:37]
    node _T_4067 = asUInt(asSInt(UInt<8>("h0ff"))) @[package.scala 19:64]
    node _T_4068 = dshl(_T_4067, io.mem.0.c.bits.size) @[package.scala 19:71]
    node _T_4069 = bits(_T_4068, 7, 0) @[package.scala 19:76]
    node _T_4070 = not(_T_4069) @[package.scala 19:40]
    node _T_4071 = shr(_T_4070, 3) @[Edges.scala 198:59]
    node _T_4072 = bits(io.mem.0.c.bits.opcode, 0, 0) @[Edges.scala 86:36]
    node _T_4074 = mux(_T_4072, _T_4071, UInt<1>("h00")) @[Edges.scala 199:14]
    reg _T_4076 : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Reg.scala 26:44]
    node _T_4078 = sub(_T_4076, UInt<1>("h01")) @[Edges.scala 208:28]
    node _T_4079 = asUInt(_T_4078) @[Edges.scala 208:28]
    node _T_4080 = tail(_T_4079, 1) @[Edges.scala 208:28]
    node _T_4082 = eq(_T_4076, UInt<1>("h00")) @[Edges.scala 209:25]
    node _T_4084 = eq(_T_4076, UInt<1>("h01")) @[Edges.scala 210:25]
    node _T_4086 = eq(_T_4074, UInt<1>("h00")) @[Edges.scala 210:47]
    node c_last = or(_T_4084, _T_4086) @[Edges.scala 210:37]
    node releaseDone = and(c_last, _T_4065) @[Edges.scala 211:22]
    node _T_4087 = not(_T_4080) @[Edges.scala 212:27]
    node c_count = and(_T_4074, _T_4087) @[Edges.scala 212:25]
    when _T_4065 : @[Edges.scala 213:17]
      node _T_4088 = mux(_T_4082, _T_4074, _T_4080) @[Edges.scala 214:21]
      _T_4076 <= _T_4088 @[Edges.scala 214:15]
      skip @[Edges.scala 213:17]
    node _T_4090 = eq(io.mem.0.c.ready, UInt<1>("h00")) @[DCache.scala 363:43]
    node releaseRejected = and(io.mem.0.c.valid, _T_4090) @[DCache.scala 363:40]
    node _T_4091 = and(dataArb.io.in[2].ready, dataArb.io.in[2].valid) @[Decoupled.scala 30:37]
    reg s1_release_data_valid : UInt<1>, clock @[DCache.scala 364:34]
    s1_release_data_valid <= _T_4091 @[DCache.scala 364:34]
    node _T_4093 = eq(releaseRejected, UInt<1>("h00")) @[DCache.scala 365:67]
    node _T_4094 = and(s1_release_data_valid, _T_4093) @[DCache.scala 365:64]
    reg s2_release_data_valid : UInt<1>, clock @[DCache.scala 365:34]
    s2_release_data_valid <= _T_4094 @[DCache.scala 365:34]
    node _T_4096 = cat(UInt<1>("h00"), c_count) @[Cat.scala 30:58]
    node _T_4099 = cat(UInt<1>("h00"), s2_release_data_valid) @[Cat.scala 30:58]
    node _T_4100 = add(s1_release_data_valid, _T_4099) @[DCache.scala 366:101]
    node _T_4101 = tail(_T_4100, 1) @[DCache.scala 366:101]
    node _T_4102 = mux(releaseRejected, UInt<1>("h00"), _T_4101) @[DCache.scala 366:52]
    node _T_4103 = add(_T_4096, _T_4102) @[DCache.scala 366:47]
    node releaseDataBeat = tail(_T_4103, 1) @[DCache.scala 366:47]
    wire nackResponseMessage : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Edges.scala 305:17]
    nackResponseMessage is invalid @[Edges.scala 305:17]
    nackResponseMessage.opcode <= UInt<3>("h04") @[Edges.scala 306:15]
    nackResponseMessage.param <= UInt<3>("h05") @[Edges.scala 307:15]
    nackResponseMessage.size <= probe_bits.size @[Edges.scala 308:15]
    nackResponseMessage.source <= probe_bits.source @[Edges.scala 309:15]
    nackResponseMessage.address <= probe_bits.address @[Edges.scala 310:15]
    nackResponseMessage.data <= UInt<1>("h00") @[Edges.scala 311:15]
    nackResponseMessage.error <= UInt<1>("h00") @[Edges.scala 312:15]
    node _T_4127 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 63:32]
    node _T_4129 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 63:42]
    node _T_4130 = and(_T_4127, _T_4129) @[Parameters.scala 63:37]
    node _T_4131 = or(UInt<1>("h00"), _T_4130) @[Parameters.scala 132:31]
    node _T_4133 = xor(probe_bits.address, UInt<28>("h08000000")) @[Parameters.scala 117:31]
    node _T_4134 = cvt(_T_4133) @[Parameters.scala 117:49]
    node _T_4136 = and(_T_4134, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_4137 = asSInt(_T_4136) @[Parameters.scala 117:52]
    node _T_4139 = eq(_T_4137, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_4141 = xor(probe_bits.address, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_4142 = cvt(_T_4141) @[Parameters.scala 117:49]
    node _T_4144 = and(_T_4142, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
    node _T_4145 = asSInt(_T_4144) @[Parameters.scala 117:52]
    node _T_4147 = eq(_T_4145, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_4148 = or(_T_4139, _T_4147) @[Parameters.scala 133:42]
    node _T_4149 = and(_T_4131, _T_4148) @[Parameters.scala 132:56]
    node _T_4152 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 132:31]
    node _T_4154 = xor(probe_bits.address, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_4155 = cvt(_T_4154) @[Parameters.scala 117:49]
    node _T_4157 = and(_T_4155, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_4158 = asSInt(_T_4157) @[Parameters.scala 117:52]
    node _T_4160 = eq(_T_4158, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_4162 = xor(probe_bits.address, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_4163 = cvt(_T_4162) @[Parameters.scala 117:49]
    node _T_4165 = and(_T_4163, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
    node _T_4166 = asSInt(_T_4165) @[Parameters.scala 117:52]
    node _T_4168 = eq(_T_4166, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_4170 = xor(probe_bits.address, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_4171 = cvt(_T_4170) @[Parameters.scala 117:49]
    node _T_4173 = and(_T_4171, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
    node _T_4174 = asSInt(_T_4173) @[Parameters.scala 117:52]
    node _T_4176 = eq(_T_4174, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_4177 = or(_T_4160, _T_4168) @[Parameters.scala 133:42]
    node _T_4178 = or(_T_4177, _T_4176) @[Parameters.scala 133:42]
    node _T_4179 = and(_T_4152, _T_4178) @[Parameters.scala 132:56]
    node _T_4181 = or(UInt<1>("h00"), _T_4149) @[Parameters.scala 134:30]
    node _T_4182 = or(_T_4181, _T_4179) @[Parameters.scala 134:30]
    wire voluntaryReleaseMessage : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Edges.scala 290:17]
    voluntaryReleaseMessage is invalid @[Edges.scala 290:17]
    voluntaryReleaseMessage.opcode <= UInt<3>("h07") @[Edges.scala 291:15]
    voluntaryReleaseMessage.param <= s2_shrink_param @[Edges.scala 292:15]
    voluntaryReleaseMessage.size <= UInt<3>("h06") @[Edges.scala 293:15]
    voluntaryReleaseMessage.source <= UInt<1>("h00") @[Edges.scala 294:15]
    voluntaryReleaseMessage.address <= probe_bits.address @[Edges.scala 295:15]
    voluntaryReleaseMessage.data <= s2_data @[Edges.scala 296:15]
    voluntaryReleaseMessage.error <= UInt<1>("h00") @[Edges.scala 297:15]
    node _T_4201 = eq(s2_prb_ack_data, UInt<1>("h00")) @[DCache.scala 383:34]
    wire _T_4210 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Edges.scala 305:17]
    _T_4210 is invalid @[Edges.scala 305:17]
    _T_4210.opcode <= UInt<3>("h04") @[Edges.scala 306:15]
    _T_4210.param <= s2_report_param @[Edges.scala 307:15]
    _T_4210.size <= probe_bits.size @[Edges.scala 308:15]
    _T_4210.source <= probe_bits.source @[Edges.scala 309:15]
    _T_4210.address <= probe_bits.address @[Edges.scala 310:15]
    _T_4210.data <= UInt<1>("h00") @[Edges.scala 311:15]
    _T_4210.error <= UInt<1>("h00") @[Edges.scala 312:15]
    wire _T_4229 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Edges.scala 320:17]
    _T_4229 is invalid @[Edges.scala 320:17]
    _T_4229.opcode <= UInt<3>("h05") @[Edges.scala 321:15]
    _T_4229.param <= s2_report_param @[Edges.scala 322:15]
    _T_4229.size <= probe_bits.size @[Edges.scala 323:15]
    _T_4229.source <= probe_bits.source @[Edges.scala 324:15]
    _T_4229.address <= probe_bits.address @[Edges.scala 325:15]
    _T_4229.data <= s2_data @[Edges.scala 326:15]
    _T_4229.error <= UInt<1>("h00") @[Edges.scala 327:15]
    node probeResponseMessage = mux(_T_4201, _T_4210, _T_4229) @[DCache.scala 383:33]
    io.mem.0.c.valid <= s2_release_data_valid @[DCache.scala 392:18]
    io.mem.0.c.bits <- nackResponseMessage @[DCache.scala 393:17]
    wire newCoh : {state : UInt<2>}
    newCoh is invalid
    newCoh <- probeNewCoh
    releaseWay <= s2_probe_way @[DCache.scala 395:14]
    node _T_4247 = and(s2_victimize, s2_victim_dirty) @[DCache.scala 397:22]
    when _T_4247 : @[DCache.scala 397:42]
      node _T_4248 = and(s2_valid, s2_hit_valid) @[DCache.scala 398:23]
      node _T_4250 = eq(_T_4248, UInt<1>("h00")) @[DCache.scala 398:12]
      node _T_4251 = or(_T_4250, reset) @[DCache.scala 398:11]
      node _T_4253 = eq(_T_4251, UInt<1>("h00")) @[DCache.scala 398:11]
      when _T_4253 : @[DCache.scala 398:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:398 assert(!(s2_valid && s2_hit_valid))\n") @[DCache.scala 398:11]
        stop(clock, UInt<1>(1), 1) @[DCache.scala 398:11]
        skip @[DCache.scala 398:11]
      release_state <= UInt<3>("h01") @[DCache.scala 399:19]
      node _T_4254 = bits(s2_req.addr, 11, 6) @[DCache.scala 400:57]
      node _T_4255 = cat(s2_victim_tag, _T_4254) @[Cat.scala 30:58]
      node _T_4256 = shl(_T_4255, 6) @[DCache.scala 400:75]
      probe_bits.address <= _T_4256 @[DCache.scala 400:24]
      skip @[DCache.scala 397:42]
    when s2_probe : @[DCache.scala 402:19]
      when s2_prb_ack_data : @[DCache.scala 403:28]
        release_state <= UInt<3>("h02") @[DCache.scala 403:44]
        skip @[DCache.scala 403:28]
      node _T_4258 = gt(s2_probe_state.state, UInt<2>("h00")) @[Metadata.scala 50:45]
      node _T_4260 = eq(s2_prb_ack_data, UInt<1>("h00")) @[DCache.scala 403:28]
      node _T_4261 = and(_T_4260, _T_4258) @[DCache.scala 404:42]
      when _T_4261 : @[DCache.scala 404:42]
        release_state <= UInt<3>("h03") @[DCache.scala 404:58]
        skip @[DCache.scala 404:42]
      node _T_4263 = eq(s2_prb_ack_data, UInt<1>("h00")) @[DCache.scala 403:28]
      node _T_4265 = eq(_T_4258, UInt<1>("h00")) @[DCache.scala 404:42]
      node _T_4266 = and(_T_4263, _T_4265) @[DCache.scala 404:42]
      when _T_4266 : @[DCache.scala 405:16]
        io.mem.0.c.valid <= UInt<1>("h01") @[DCache.scala 406:22]
        release_state <= UInt<3>("h04") @[DCache.scala 407:21]
        skip @[DCache.scala 405:16]
      skip @[DCache.scala 402:19]
    when releaseDone : @[DCache.scala 410:22]
      release_state <= UInt<3>("h00") @[DCache.scala 410:38]
      skip @[DCache.scala 410:22]
    node _T_4268 = eq(release_state, UInt<3>("h04")) @[Package.scala 7:47]
    node _T_4269 = eq(release_state, UInt<3>("h03")) @[Package.scala 7:47]
    node _T_4270 = or(_T_4268, _T_4269) @[Package.scala 7:62]
    when _T_4270 : @[DCache.scala 411:69]
      io.mem.0.c.valid <= UInt<1>("h01") @[DCache.scala 412:20]
      skip @[DCache.scala 411:69]
    node _T_4272 = eq(release_state, UInt<3>("h03")) @[Package.scala 7:47]
    node _T_4273 = eq(release_state, UInt<3>("h02")) @[Package.scala 7:47]
    node _T_4274 = or(_T_4272, _T_4273) @[Package.scala 7:62]
    when _T_4274 : @[DCache.scala 414:70]
      io.mem.0.c.bits <- probeResponseMessage @[DCache.scala 415:19]
      when releaseDone : @[DCache.scala 416:24]
        release_state <= UInt<3>("h06") @[DCache.scala 416:40]
        skip @[DCache.scala 416:24]
      skip @[DCache.scala 414:70]
    node _T_4275 = eq(release_state, UInt<3>("h01")) @[Package.scala 7:47]
    node _T_4276 = eq(release_state, UInt<3>("h05")) @[Package.scala 7:47]
    node _T_4277 = or(_T_4275, _T_4276) @[Package.scala 7:62]
    when _T_4277 : @[DCache.scala 418:79]
      io.mem.0.c.bits <- voluntaryReleaseMessage @[DCache.scala 419:19]
      newCoh <- voluntaryNewCoh @[DCache.scala 420:12]
      releaseWay <= s2_victim_way @[DCache.scala 421:16]
      when releaseDone : @[DCache.scala 422:24]
        release_state <= UInt<3>("h05") @[DCache.scala 423:21]
        release_ack_wait <= UInt<1>("h01") @[DCache.scala 424:24]
        skip @[DCache.scala 422:24]
      skip @[DCache.scala 418:79]
    node _T_4279 = and(io.mem.0.c.ready, io.mem.0.c.valid) @[Decoupled.scala 30:37]
    node _T_4281 = eq(_T_4279, UInt<1>("h00")) @[DCache.scala 427:21]
    node _T_4282 = and(s2_probe, _T_4281) @[DCache.scala 427:18]
    when _T_4282 : @[DCache.scala 427:39]
      s1_nack <= UInt<1>("h01") @[DCache.scala 427:49]
      skip @[DCache.scala 427:39]
    io.mem.0.c.bits.address <= probe_bits.address @[DCache.scala 428:25]
    io.mem.0.c.bits.data <= s2_data @[DCache.scala 429:22]
    node _T_4285 = lt(releaseDataBeat, UInt<4>("h08")) @[DCache.scala 431:60]
    node _T_4286 = and(inWriteback, _T_4285) @[DCache.scala 431:41]
    dataArb.io.in[2].valid <= _T_4286 @[DCache.scala 431:26]
    dataArb.io.in[2].bits.write <= UInt<1>("h00") @[DCache.scala 432:31]
    node _T_4288 = bits(releaseDataBeat, 2, 0) @[DCache.scala 433:73]
    node _T_4289 = shl(_T_4288, 3) @[DCache.scala 433:100]
    node _T_4290 = or(io.mem.0.c.bits.address, _T_4289) @[DCache.scala 433:55]
    dataArb.io.in[2].bits.addr <= _T_4290 @[DCache.scala 433:30]
    node _T_4292 = not(UInt<4>("h00")) @[DCache.scala 434:35]
    dataArb.io.in[2].bits.way_en <= _T_4292 @[DCache.scala 434:32]
    node _T_4293 = eq(release_state, UInt<3>("h05")) @[Package.scala 7:47]
    node _T_4294 = eq(release_state, UInt<3>("h06")) @[Package.scala 7:47]
    node _T_4295 = or(_T_4293, _T_4294) @[Package.scala 7:62]
    metaWriteArb.io.in[2].valid <= _T_4295 @[DCache.scala 436:31]
    metaWriteArb.io.in[2].bits.way_en <= releaseWay @[DCache.scala 437:37]
    node _T_4296 = bits(io.mem.0.c.bits.address, 11, 6) @[DCache.scala 438:58]
    metaWriteArb.io.in[2].bits.idx <= _T_4296 @[DCache.scala 438:34]
    metaWriteArb.io.in[2].bits.data.coh <- newCoh @[DCache.scala 439:39]
    node _T_4297 = bits(io.mem.0.c.bits.address, 31, 12) @[DCache.scala 440:63]
    metaWriteArb.io.in[2].bits.data.tag <= _T_4297 @[DCache.scala 440:39]
    node _T_4298 = and(metaWriteArb.io.in[2].ready, metaWriteArb.io.in[2].valid) @[Decoupled.scala 30:37]
    when _T_4298 : @[DCache.scala 441:39]
      release_state <= UInt<3>("h00") @[DCache.scala 441:55]
      skip @[DCache.scala 441:39]
    io.cpu.resp.valid <= s2_valid_hit @[DCache.scala 444:21]
    io.cpu.resp.bits <- s2_req @[DCache.scala 445:20]
    io.cpu.resp.bits.has_data <= s2_read @[DCache.scala 446:29]
    io.cpu.resp.bits.replay <= UInt<1>("h00") @[DCache.scala 447:27]
    node _T_4300 = or(s1_valid, s2_valid) @[DCache.scala 448:32]
    node _T_4301 = or(_T_4300, cached_grant_wait) @[DCache.scala 448:44]
    node _T_4303 = neq(uncachedInFlight[0], UInt<1>("h00")) @[DCache.scala 448:92]
    node _T_4304 = or(_T_4301, _T_4303) @[DCache.scala 448:65]
    node _T_4306 = eq(_T_4304, UInt<1>("h00")) @[DCache.scala 448:21]
    io.cpu.ordered <= _T_4306 @[DCache.scala 448:18]
    node _T_4307 = and(io.mem.0.d.ready, io.mem.0.d.valid) @[Decoupled.scala 30:37]
    node _T_4308 = and(_T_4307, grantIsUncached) @[DCache.scala 451:41]
    io.cpu.replay_next <= _T_4308 @[DCache.scala 451:22]
    reg doUncachedResp : UInt<1>, clock @[DCache.scala 452:27]
    doUncachedResp <= io.cpu.replay_next @[DCache.scala 452:27]
    when doUncachedResp : @[DCache.scala 453:25]
      node _T_4310 = eq(s2_valid_hit, UInt<1>("h00")) @[DCache.scala 454:12]
      node _T_4311 = or(_T_4310, reset) @[DCache.scala 454:11]
      node _T_4313 = eq(_T_4311, UInt<1>("h00")) @[DCache.scala 454:11]
      when _T_4313 : @[DCache.scala 454:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:454 assert(!s2_valid_hit)\n") @[DCache.scala 454:11]
        stop(clock, UInt<1>(1), 1) @[DCache.scala 454:11]
        skip @[DCache.scala 454:11]
      io.cpu.resp.valid <= UInt<1>("h01") @[DCache.scala 455:23]
      io.cpu.resp.bits.replay <= UInt<1>("h01") @[DCache.scala 456:29]
      skip @[DCache.scala 453:25]
    node _T_4317 = cat(UInt<1>("h00"), UInt<6>("h00")) @[Cat.scala 30:58]
    node s2_data_word = dshr(s2_data, _T_4317) @[DCache.scala 461:30]
    node _T_4318 = bits(s2_req.typ, 2, 2) @[Consts.scala 20:31]
    node _T_4320 = eq(_T_4318, UInt<1>("h00")) @[Consts.scala 20:28]
    node _T_4321 = bits(s2_req.typ, 1, 0) @[AmoAlu.scala 12:17]
    node _T_4322 = bits(s2_req.addr, 2, 2) @[AmoAlu.scala 45:29]
    node _T_4323 = bits(s2_data_word, 63, 32) @[AmoAlu.scala 45:37]
    node _T_4324 = bits(s2_data_word, 31, 0) @[AmoAlu.scala 45:55]
    node _T_4325 = mux(_T_4322, _T_4323, _T_4324) @[AmoAlu.scala 45:24]
    node _T_4327 = and(UInt<1>("h00"), s2_sc) @[AmoAlu.scala 46:33]
    node _T_4329 = mux(_T_4327, UInt<1>("h00"), _T_4325) @[AmoAlu.scala 47:23]
    node _T_4331 = eq(_T_4321, UInt<2>("h02")) @[AmoAlu.scala 48:26]
    node _T_4332 = or(_T_4331, _T_4327) @[AmoAlu.scala 48:38]
    node _T_4333 = bits(_T_4329, 31, 31) @[AmoAlu.scala 48:85]
    node _T_4334 = and(_T_4320, _T_4333) @[AmoAlu.scala 48:76]
    node _T_4335 = bits(_T_4334, 0, 0) @[Bitwise.scala 71:15]
    node _T_4338 = mux(_T_4335, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 71:12]
    node _T_4339 = bits(s2_data_word, 63, 32) @[AmoAlu.scala 48:98]
    node _T_4340 = mux(_T_4332, _T_4338, _T_4339) @[AmoAlu.scala 48:20]
    node _T_4341 = cat(_T_4340, _T_4329) @[Cat.scala 30:58]
    node _T_4342 = bits(s2_req.addr, 1, 1) @[AmoAlu.scala 45:29]
    node _T_4343 = bits(_T_4341, 31, 16) @[AmoAlu.scala 45:37]
    node _T_4344 = bits(_T_4341, 15, 0) @[AmoAlu.scala 45:55]
    node _T_4345 = mux(_T_4342, _T_4343, _T_4344) @[AmoAlu.scala 45:24]
    node _T_4347 = and(UInt<1>("h00"), s2_sc) @[AmoAlu.scala 46:33]
    node _T_4349 = mux(_T_4347, UInt<1>("h00"), _T_4345) @[AmoAlu.scala 47:23]
    node _T_4351 = eq(_T_4321, UInt<1>("h01")) @[AmoAlu.scala 48:26]
    node _T_4352 = or(_T_4351, _T_4347) @[AmoAlu.scala 48:38]
    node _T_4353 = bits(_T_4349, 15, 15) @[AmoAlu.scala 48:85]
    node _T_4354 = and(_T_4320, _T_4353) @[AmoAlu.scala 48:76]
    node _T_4355 = bits(_T_4354, 0, 0) @[Bitwise.scala 71:15]
    node _T_4358 = mux(_T_4355, UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 71:12]
    node _T_4359 = bits(_T_4341, 63, 16) @[AmoAlu.scala 48:98]
    node _T_4360 = mux(_T_4352, _T_4358, _T_4359) @[AmoAlu.scala 48:20]
    node _T_4361 = cat(_T_4360, _T_4349) @[Cat.scala 30:58]
    node _T_4362 = bits(s2_req.addr, 0, 0) @[AmoAlu.scala 45:29]
    node _T_4363 = bits(_T_4361, 15, 8) @[AmoAlu.scala 45:37]
    node _T_4364 = bits(_T_4361, 7, 0) @[AmoAlu.scala 45:55]
    node _T_4365 = mux(_T_4362, _T_4363, _T_4364) @[AmoAlu.scala 45:24]
    node _T_4367 = and(UInt<1>("h01"), s2_sc) @[AmoAlu.scala 46:33]
    node _T_4369 = mux(_T_4367, UInt<1>("h00"), _T_4365) @[AmoAlu.scala 47:23]
    node _T_4371 = eq(_T_4321, UInt<1>("h00")) @[AmoAlu.scala 48:26]
    node _T_4372 = or(_T_4371, _T_4367) @[AmoAlu.scala 48:38]
    node _T_4373 = bits(_T_4369, 7, 7) @[AmoAlu.scala 48:85]
    node _T_4374 = and(_T_4320, _T_4373) @[AmoAlu.scala 48:76]
    node _T_4375 = bits(_T_4374, 0, 0) @[Bitwise.scala 71:15]
    node _T_4378 = mux(_T_4375, UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 71:12]
    node _T_4379 = bits(_T_4361, 63, 8) @[AmoAlu.scala 48:98]
    node _T_4380 = mux(_T_4372, _T_4378, _T_4379) @[AmoAlu.scala 48:20]
    node _T_4381 = cat(_T_4380, _T_4369) @[Cat.scala 30:58]
    node _T_4382 = or(_T_4381, s2_sc_fail) @[DCache.scala 463:41]
    io.cpu.resp.bits.data <= _T_4382 @[DCache.scala 463:25]
    node _T_4383 = bits(s2_req.addr, 2, 2) @[AmoAlu.scala 45:29]
    node _T_4384 = bits(s2_data_word, 63, 32) @[AmoAlu.scala 45:37]
    node _T_4385 = bits(s2_data_word, 31, 0) @[AmoAlu.scala 45:55]
    node _T_4386 = mux(_T_4383, _T_4384, _T_4385) @[AmoAlu.scala 45:24]
    node _T_4388 = and(UInt<1>("h00"), s2_sc) @[AmoAlu.scala 46:33]
    node _T_4390 = mux(_T_4388, UInt<1>("h00"), _T_4386) @[AmoAlu.scala 47:23]
    node _T_4392 = eq(_T_4321, UInt<2>("h02")) @[AmoAlu.scala 48:26]
    node _T_4393 = or(_T_4392, _T_4388) @[AmoAlu.scala 48:38]
    node _T_4394 = bits(_T_4390, 31, 31) @[AmoAlu.scala 48:85]
    node _T_4395 = and(_T_4320, _T_4394) @[AmoAlu.scala 48:76]
    node _T_4396 = bits(_T_4395, 0, 0) @[Bitwise.scala 71:15]
    node _T_4399 = mux(_T_4396, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 71:12]
    node _T_4400 = bits(s2_data_word, 63, 32) @[AmoAlu.scala 48:98]
    node _T_4401 = mux(_T_4393, _T_4399, _T_4400) @[AmoAlu.scala 48:20]
    node _T_4402 = cat(_T_4401, _T_4390) @[Cat.scala 30:58]
    io.cpu.resp.bits.data_word_bypass <= _T_4402 @[DCache.scala 464:37]
    io.cpu.resp.bits.store_data <= pstore1_data @[DCache.scala 465:31]
    inst AMOALU of AMOALU @[DCache.scala 469:24]
    AMOALU.io is invalid
    AMOALU.clock <= clock
    AMOALU.reset <= reset
    AMOALU.io.addr <= pstore1_addr @[DCache.scala 470:20]
    AMOALU.io.cmd <= pstore1_cmd @[DCache.scala 471:19]
    AMOALU.io.typ <= pstore1_typ @[DCache.scala 472:19]
    AMOALU.io.lhs <= s2_data_word @[DCache.scala 473:19]
    AMOALU.io.rhs <= pstore1_data @[DCache.scala 474:19]
    pstore1_storegen_data <= AMOALU.io.out @[DCache.scala 475:27]
    reg flushed : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[DCache.scala 481:20]
    reg flushing : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 482:21]
    reg value : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Counter.scala 17:29]
    node _T_4406 = and(io.mem.0.a.ready, io.mem.0.a.valid) @[Decoupled.scala 30:37]
    node _T_4408 = eq(s2_uncached, UInt<1>("h00")) @[DCache.scala 484:28]
    node _T_4409 = and(_T_4406, _T_4408) @[DCache.scala 484:25]
    when _T_4409 : @[DCache.scala 484:42]
      flushed <= UInt<1>("h00") @[DCache.scala 484:52]
      skip @[DCache.scala 484:42]
    node _T_4412 = eq(s2_req.cmd, UInt<3>("h05")) @[DCache.scala 485:39]
    node _T_4413 = and(s2_valid_masked, _T_4412) @[DCache.scala 485:25]
    when _T_4413 : @[DCache.scala 485:56]
      node _T_4415 = eq(flushed, UInt<1>("h00")) @[DCache.scala 486:23]
      io.cpu.s2_nack <= _T_4415 @[DCache.scala 486:20]
      node _T_4417 = eq(flushed, UInt<1>("h00")) @[DCache.scala 487:11]
      when _T_4417 : @[DCache.scala 487:21]
        node _T_4419 = eq(release_ack_wait, UInt<1>("h00")) @[DCache.scala 488:19]
        node _T_4421 = neq(uncachedInFlight[0], UInt<1>("h00")) @[DCache.scala 488:65]
        node _T_4423 = eq(_T_4421, UInt<1>("h00")) @[DCache.scala 488:40]
        node _T_4424 = and(_T_4419, _T_4423) @[DCache.scala 488:37]
        flushing <= _T_4424 @[DCache.scala 488:16]
        skip @[DCache.scala 487:21]
      skip @[DCache.scala 485:56]
    node _T_4425 = and(metaReadArb.io.in[0].ready, metaReadArb.io.in[0].valid) @[Decoupled.scala 30:37]
    node _T_4427 = eq(s1_flush_valid, UInt<1>("h00")) @[DCache.scala 491:52]
    node _T_4428 = and(_T_4425, _T_4427) @[DCache.scala 491:49]
    node _T_4430 = eq(s2_flush_valid, UInt<1>("h00")) @[DCache.scala 491:71]
    node _T_4431 = and(_T_4428, _T_4430) @[DCache.scala 491:68]
    node _T_4432 = eq(release_state, UInt<3>("h00")) @[DCache.scala 491:104]
    node _T_4433 = and(_T_4431, _T_4432) @[DCache.scala 491:87]
    node _T_4435 = eq(release_ack_wait, UInt<1>("h00")) @[DCache.scala 491:119]
    node _T_4436 = and(_T_4433, _T_4435) @[DCache.scala 491:116]
    s1_flush_valid <= _T_4436 @[DCache.scala 491:18]
    metaReadArb.io.in[0].valid <= flushing @[DCache.scala 492:30]
    metaReadArb.io.in[0].bits.idx <= value @[DCache.scala 493:33]
    node _T_4438 = not(UInt<4>("h00")) @[DCache.scala 494:39]
    metaReadArb.io.in[0].bits.way_en <= _T_4438 @[DCache.scala 494:36]
    when flushing : @[DCache.scala 495:19]
      node _T_4439 = shr(value, 6) @[DCache.scala 496:41]
      s1_victim_way <= _T_4439 @[DCache.scala 496:19]
      when s2_flush_valid : @[DCache.scala 497:27]
        node _T_4441 = eq(value, UInt<8>("h0ff")) @[Counter.scala 25:24]
        node _T_4443 = add(value, UInt<1>("h01")) @[Counter.scala 26:22]
        node _T_4444 = tail(_T_4443, 1) @[Counter.scala 26:22]
        value <= _T_4444 @[Counter.scala 26:13]
        when _T_4441 : @[DCache.scala 498:33]
          flushed <= UInt<1>("h01") @[DCache.scala 499:17]
          skip @[DCache.scala 498:33]
        skip @[DCache.scala 497:27]
      node _T_4446 = eq(release_state, UInt<3>("h00")) @[DCache.scala 502:36]
      node _T_4447 = and(flushed, _T_4446) @[DCache.scala 502:19]
      node _T_4449 = eq(release_ack_wait, UInt<1>("h00")) @[DCache.scala 502:51]
      node _T_4450 = and(_T_4447, _T_4449) @[DCache.scala 502:48]
      when _T_4450 : @[DCache.scala 502:70]
        flushing <= UInt<1>("h00") @[DCache.scala 503:16]
        skip @[DCache.scala 502:70]
      skip @[DCache.scala 495:19]
    node _T_4452 = and(io.mem.0.a.ready, io.mem.0.a.valid) @[Decoupled.scala 30:37]
    node _T_4454 = asUInt(asSInt(UInt<8>("h0ff"))) @[package.scala 19:64]
    node _T_4455 = dshl(_T_4454, io.mem.0.a.bits.size) @[package.scala 19:71]
    node _T_4456 = bits(_T_4455, 7, 0) @[package.scala 19:76]
    node _T_4457 = not(_T_4456) @[package.scala 19:40]
    node _T_4458 = shr(_T_4457, 3) @[Edges.scala 198:59]
    node _T_4459 = bits(io.mem.0.a.bits.opcode, 2, 2) @[Edges.scala 76:37]
    node _T_4461 = eq(_T_4459, UInt<1>("h00")) @[Edges.scala 76:28]
    node _T_4463 = mux(_T_4461, _T_4458, UInt<1>("h00")) @[Edges.scala 199:14]
    reg _T_4465 : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Reg.scala 26:44]
    node _T_4467 = sub(_T_4465, UInt<1>("h01")) @[Edges.scala 208:28]
    node _T_4468 = asUInt(_T_4467) @[Edges.scala 208:28]
    node _T_4469 = tail(_T_4468, 1) @[Edges.scala 208:28]
    node _T_4471 = eq(_T_4465, UInt<1>("h00")) @[Edges.scala 209:25]
    node _T_4473 = eq(_T_4465, UInt<1>("h01")) @[Edges.scala 210:25]
    node _T_4475 = eq(_T_4463, UInt<1>("h00")) @[Edges.scala 210:47]
    node _T_4476 = or(_T_4473, _T_4475) @[Edges.scala 210:37]
    node _T_4477 = and(_T_4476, _T_4452) @[Edges.scala 211:22]
    node _T_4478 = not(_T_4469) @[Edges.scala 212:27]
    node _T_4479 = and(_T_4463, _T_4478) @[Edges.scala 212:25]
    when _T_4452 : @[Edges.scala 213:17]
      node _T_4480 = mux(_T_4471, _T_4463, _T_4469) @[Edges.scala 214:21]
      _T_4465 <= _T_4480 @[Edges.scala 214:15]
      skip @[Edges.scala 213:17]
    io.cpu.acquire <= _T_4477 @[DCache.scala 508:18]
    node _T_4481 = and(io.mem.0.c.ready, io.mem.0.c.valid) @[Decoupled.scala 30:37]
    node _T_4483 = asUInt(asSInt(UInt<8>("h0ff"))) @[package.scala 19:64]
    node _T_4484 = dshl(_T_4483, io.mem.0.c.bits.size) @[package.scala 19:71]
    node _T_4485 = bits(_T_4484, 7, 0) @[package.scala 19:76]
    node _T_4486 = not(_T_4485) @[package.scala 19:40]
    node _T_4487 = shr(_T_4486, 3) @[Edges.scala 198:59]
    node _T_4488 = bits(io.mem.0.c.bits.opcode, 0, 0) @[Edges.scala 86:36]
    node _T_4490 = mux(_T_4488, _T_4487, UInt<1>("h00")) @[Edges.scala 199:14]
    reg _T_4492 : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Reg.scala 26:44]
    node _T_4494 = sub(_T_4492, UInt<1>("h01")) @[Edges.scala 208:28]
    node _T_4495 = asUInt(_T_4494) @[Edges.scala 208:28]
    node _T_4496 = tail(_T_4495, 1) @[Edges.scala 208:28]
    node _T_4498 = eq(_T_4492, UInt<1>("h00")) @[Edges.scala 209:25]
    node _T_4500 = eq(_T_4492, UInt<1>("h01")) @[Edges.scala 210:25]
    node _T_4502 = eq(_T_4490, UInt<1>("h00")) @[Edges.scala 210:47]
    node _T_4503 = or(_T_4500, _T_4502) @[Edges.scala 210:37]
    node _T_4504 = and(_T_4503, _T_4481) @[Edges.scala 211:22]
    node _T_4505 = not(_T_4496) @[Edges.scala 212:27]
    node _T_4506 = and(_T_4490, _T_4505) @[Edges.scala 212:25]
    when _T_4481 : @[Edges.scala 213:17]
      node _T_4507 = mux(_T_4498, _T_4490, _T_4496) @[Edges.scala 214:21]
      _T_4492 <= _T_4507 @[Edges.scala 214:15]
      skip @[Edges.scala 213:17]
    io.cpu.release <= _T_4504 @[DCache.scala 509:18]
    
  module Queue_35 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<4>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<4>}}, count : UInt<1>}
    
    io is invalid
    io is invalid
    cmem ram : {sink : UInt<4>}[1] @[Decoupled.scala 182:24]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 185:31]
    node _T_34 = eq(UInt<1>("h00"), UInt<1>("h00")) @[Decoupled.scala 187:41]
    node _T_36 = eq(maybe_full, UInt<1>("h00")) @[Decoupled.scala 188:36]
    node _T_37 = and(_T_34, _T_36) @[Decoupled.scala 188:33]
    node _T_38 = and(_T_34, maybe_full) @[Decoupled.scala 189:32]
    node _T_39 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 30:37]
    wire do_enq : UInt<1>
    do_enq is invalid
    do_enq <= _T_39
    node _T_40 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 30:37]
    wire do_deq : UInt<1>
    do_deq is invalid
    do_deq <= _T_40
    when do_enq : @[Decoupled.scala 193:17]
      infer mport _T_42 = ram[UInt<1>("h00")], clock
      _T_42 <- io.enq.bits @[Decoupled.scala 194:24]
      skip @[Decoupled.scala 193:17]
    when do_deq : @[Decoupled.scala 197:17]
      skip @[Decoupled.scala 197:17]
    node _T_46 = neq(do_enq, do_deq) @[Decoupled.scala 200:16]
    when _T_46 : @[Decoupled.scala 200:27]
      maybe_full <= do_enq @[Decoupled.scala 201:16]
      skip @[Decoupled.scala 200:27]
    node _T_48 = eq(_T_37, UInt<1>("h00")) @[Decoupled.scala 204:19]
    io.deq.valid <= _T_48 @[Decoupled.scala 204:16]
    node _T_50 = eq(_T_38, UInt<1>("h00")) @[Decoupled.scala 205:19]
    io.enq.ready <= _T_50 @[Decoupled.scala 205:16]
    infer mport _T_52 = ram[UInt<1>("h00")], clock
    io.deq.bits <- _T_52 @[Decoupled.scala 206:15]
    node _T_54 = sub(UInt<1>("h00"), UInt<1>("h00")) @[Decoupled.scala 221:40]
    node _T_55 = asUInt(_T_54) @[Decoupled.scala 221:40]
    node _T_56 = tail(_T_55, 1) @[Decoupled.scala 221:40]
    node _T_57 = and(maybe_full, _T_34) @[Decoupled.scala 223:32]
    node _T_58 = cat(_T_57, _T_56) @[Cat.scala 30:58]
    io.count <= _T_58 @[Decoupled.scala 223:14]
    
  module Arbiter : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}[3], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, chosen : UInt<2>}
    
    io is invalid
    io is invalid
    io.chosen <= UInt<2>("h02") @[Arbiter.scala 118:13]
    io.out.bits <- io.in[2].bits @[Arbiter.scala 119:15]
    when io.in[1].valid : @[Arbiter.scala 121:27]
      io.chosen <= UInt<1>("h01") @[Arbiter.scala 122:17]
      io.out.bits <- io.in[1].bits @[Arbiter.scala 123:19]
      skip @[Arbiter.scala 121:27]
    when io.in[0].valid : @[Arbiter.scala 121:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 122:17]
      io.out.bits <- io.in[0].bits @[Arbiter.scala 123:19]
      skip @[Arbiter.scala 121:27]
    node _T_186 = or(io.in[0].valid, io.in[1].valid) @[Arbiter.scala 31:68]
    node _T_188 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _T_190 = eq(_T_186, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _T_191 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 129:19]
    io.in[0].ready <= _T_191 @[Arbiter.scala 129:14]
    node _T_192 = and(_T_188, io.out.ready) @[Arbiter.scala 129:19]
    io.in[1].ready <= _T_192 @[Arbiter.scala 129:14]
    node _T_193 = and(_T_190, io.out.ready) @[Arbiter.scala 129:19]
    io.in[2].ready <= _T_193 @[Arbiter.scala 129:14]
    node _T_195 = eq(_T_190, UInt<1>("h00")) @[Arbiter.scala 130:19]
    node _T_196 = or(_T_195, io.in[2].valid) @[Arbiter.scala 130:31]
    io.out.valid <= _T_196 @[Arbiter.scala 130:16]
    
  module Arbiter_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}[3], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, chosen : UInt<2>}
    
    io is invalid
    io is invalid
    io.chosen <= UInt<2>("h02") @[Arbiter.scala 118:13]
    io.out.bits <- io.in[2].bits @[Arbiter.scala 119:15]
    when io.in[1].valid : @[Arbiter.scala 121:27]
      io.chosen <= UInt<1>("h01") @[Arbiter.scala 122:17]
      io.out.bits <- io.in[1].bits @[Arbiter.scala 123:19]
      skip @[Arbiter.scala 121:27]
    when io.in[0].valid : @[Arbiter.scala 121:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 122:17]
      io.out.bits <- io.in[0].bits @[Arbiter.scala 123:19]
      skip @[Arbiter.scala 121:27]
    node _T_298 = or(io.in[0].valid, io.in[1].valid) @[Arbiter.scala 31:68]
    node _T_300 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _T_302 = eq(_T_298, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _T_303 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 129:19]
    io.in[0].ready <= _T_303 @[Arbiter.scala 129:14]
    node _T_304 = and(_T_300, io.out.ready) @[Arbiter.scala 129:19]
    io.in[1].ready <= _T_304 @[Arbiter.scala 129:14]
    node _T_305 = and(_T_302, io.out.ready) @[Arbiter.scala 129:19]
    io.in[2].ready <= _T_305 @[Arbiter.scala 129:14]
    node _T_307 = eq(_T_302, UInt<1>("h00")) @[Arbiter.scala 130:19]
    node _T_308 = or(_T_307, io.in[2].valid) @[Arbiter.scala 130:31]
    io.out.valid <= _T_308 @[Arbiter.scala 130:16]
    
  module DCacheDataArray : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {valid : UInt<1>, bits : {addr : UInt<12>, write : UInt<1>, wdata : UInt<64>, wmask : UInt<8>, way_en : UInt<4>}}, resp : UInt<64>[4]}
    
    io is invalid
    io is invalid
    node addr = shr(io.req.bits.addr, 3) @[DCache.scala 29:31]
    smem _T_56 : UInt<8>[8][512] @[DCache.scala 31:23]
    node _T_58 = bits(io.req.bits.way_en, 0, 0) @[DCache.scala 32:72]
    node _T_59 = or(UInt<1>("h00"), _T_58) @[DCache.scala 32:51]
    node _T_60 = and(io.req.valid, _T_59) @[DCache.scala 32:30]
    node _T_61 = and(_T_60, io.req.bits.write) @[DCache.scala 33:17]
    when _T_61 : @[DCache.scala 33:39]
      node _T_62 = bits(io.req.bits.wdata, 7, 0) @[DCache.scala 34:63]
      node _T_63 = bits(io.req.bits.wdata, 15, 8) @[DCache.scala 34:63]
      node _T_64 = bits(io.req.bits.wdata, 23, 16) @[DCache.scala 34:63]
      node _T_65 = bits(io.req.bits.wdata, 31, 24) @[DCache.scala 34:63]
      node _T_66 = bits(io.req.bits.wdata, 39, 32) @[DCache.scala 34:63]
      node _T_67 = bits(io.req.bits.wdata, 47, 40) @[DCache.scala 34:63]
      node _T_68 = bits(io.req.bits.wdata, 55, 48) @[DCache.scala 34:63]
      node _T_69 = bits(io.req.bits.wdata, 63, 56) @[DCache.scala 34:63]
      wire _T_72 : UInt<8>[8] @[DCache.scala 34:40]
      _T_72 is invalid @[DCache.scala 34:40]
      _T_72[0] <= _T_62 @[DCache.scala 34:40]
      _T_72[1] <= _T_63 @[DCache.scala 34:40]
      _T_72[2] <= _T_64 @[DCache.scala 34:40]
      _T_72[3] <= _T_65 @[DCache.scala 34:40]
      _T_72[4] <= _T_66 @[DCache.scala 34:40]
      _T_72[5] <= _T_67 @[DCache.scala 34:40]
      _T_72[6] <= _T_68 @[DCache.scala 34:40]
      _T_72[7] <= _T_69 @[DCache.scala 34:40]
      node _T_83 = bits(io.req.bits.wmask, 0, 0) @[DCache.scala 35:49]
      node _T_84 = bits(io.req.bits.wmask, 1, 1) @[DCache.scala 35:49]
      node _T_85 = bits(io.req.bits.wmask, 2, 2) @[DCache.scala 35:49]
      node _T_86 = bits(io.req.bits.wmask, 3, 3) @[DCache.scala 35:49]
      node _T_87 = bits(io.req.bits.wmask, 4, 4) @[DCache.scala 35:49]
      node _T_88 = bits(io.req.bits.wmask, 5, 5) @[DCache.scala 35:49]
      node _T_89 = bits(io.req.bits.wmask, 6, 6) @[DCache.scala 35:49]
      node _T_90 = bits(io.req.bits.wmask, 7, 7) @[DCache.scala 35:49]
      write mport _T_91 = _T_56[addr], clock
      when _T_83 :
        _T_91[0] <= _T_72[0]
        skip
      when _T_84 :
        _T_91[1] <= _T_72[1]
        skip
      when _T_85 :
        _T_91[2] <= _T_72[2]
        skip
      when _T_86 :
        _T_91[3] <= _T_72[3]
        skip
      when _T_87 :
        _T_91[4] <= _T_72[4]
        skip
      when _T_88 :
        _T_91[5] <= _T_72[5]
        skip
      when _T_89 :
        _T_91[6] <= _T_72[6]
        skip
      when _T_90 :
        _T_91[7] <= _T_72[7]
        skip
      skip @[DCache.scala 33:39]
    node _T_112 = eq(io.req.bits.write, UInt<1>("h00")) @[DCache.scala 37:45]
    node _T_113 = and(_T_60, _T_112) @[DCache.scala 37:42]
    wire _T_115 : UInt
    _T_115 is invalid
    when _T_113 :
      _T_115 <= addr
      node _T_117 = or(_T_115, UInt<9>("h00"))
      node _T_118 = bits(_T_117, 8, 0)
      read mport _T_119 = _T_56[_T_118], clock
      skip
    node _T_139 = cat(_T_119[1], _T_119[0]) @[DCache.scala 37:65]
    node _T_140 = cat(_T_119[3], _T_119[2]) @[DCache.scala 37:65]
    node _T_141 = cat(_T_140, _T_139) @[DCache.scala 37:65]
    node _T_142 = cat(_T_119[5], _T_119[4]) @[DCache.scala 37:65]
    node _T_143 = cat(_T_119[7], _T_119[6]) @[DCache.scala 37:65]
    node _T_144 = cat(_T_143, _T_142) @[DCache.scala 37:65]
    node _T_145 = cat(_T_144, _T_141) @[DCache.scala 37:65]
    io.resp[0] <= _T_145 @[DCache.scala 37:16]
    smem _T_160 : UInt<8>[8][512] @[DCache.scala 31:23]
    node _T_162 = bits(io.req.bits.way_en, 1, 1) @[DCache.scala 32:72]
    node _T_163 = or(UInt<1>("h00"), _T_162) @[DCache.scala 32:51]
    node _T_164 = and(io.req.valid, _T_163) @[DCache.scala 32:30]
    node _T_165 = and(_T_164, io.req.bits.write) @[DCache.scala 33:17]
    when _T_165 : @[DCache.scala 33:39]
      node _T_166 = bits(io.req.bits.wdata, 7, 0) @[DCache.scala 34:63]
      node _T_167 = bits(io.req.bits.wdata, 15, 8) @[DCache.scala 34:63]
      node _T_168 = bits(io.req.bits.wdata, 23, 16) @[DCache.scala 34:63]
      node _T_169 = bits(io.req.bits.wdata, 31, 24) @[DCache.scala 34:63]
      node _T_170 = bits(io.req.bits.wdata, 39, 32) @[DCache.scala 34:63]
      node _T_171 = bits(io.req.bits.wdata, 47, 40) @[DCache.scala 34:63]
      node _T_172 = bits(io.req.bits.wdata, 55, 48) @[DCache.scala 34:63]
      node _T_173 = bits(io.req.bits.wdata, 63, 56) @[DCache.scala 34:63]
      wire _T_176 : UInt<8>[8] @[DCache.scala 34:40]
      _T_176 is invalid @[DCache.scala 34:40]
      _T_176[0] <= _T_166 @[DCache.scala 34:40]
      _T_176[1] <= _T_167 @[DCache.scala 34:40]
      _T_176[2] <= _T_168 @[DCache.scala 34:40]
      _T_176[3] <= _T_169 @[DCache.scala 34:40]
      _T_176[4] <= _T_170 @[DCache.scala 34:40]
      _T_176[5] <= _T_171 @[DCache.scala 34:40]
      _T_176[6] <= _T_172 @[DCache.scala 34:40]
      _T_176[7] <= _T_173 @[DCache.scala 34:40]
      node _T_187 = bits(io.req.bits.wmask, 0, 0) @[DCache.scala 35:49]
      node _T_188 = bits(io.req.bits.wmask, 1, 1) @[DCache.scala 35:49]
      node _T_189 = bits(io.req.bits.wmask, 2, 2) @[DCache.scala 35:49]
      node _T_190 = bits(io.req.bits.wmask, 3, 3) @[DCache.scala 35:49]
      node _T_191 = bits(io.req.bits.wmask, 4, 4) @[DCache.scala 35:49]
      node _T_192 = bits(io.req.bits.wmask, 5, 5) @[DCache.scala 35:49]
      node _T_193 = bits(io.req.bits.wmask, 6, 6) @[DCache.scala 35:49]
      node _T_194 = bits(io.req.bits.wmask, 7, 7) @[DCache.scala 35:49]
      write mport _T_195 = _T_160[addr], clock
      when _T_187 :
        _T_195[0] <= _T_176[0]
        skip
      when _T_188 :
        _T_195[1] <= _T_176[1]
        skip
      when _T_189 :
        _T_195[2] <= _T_176[2]
        skip
      when _T_190 :
        _T_195[3] <= _T_176[3]
        skip
      when _T_191 :
        _T_195[4] <= _T_176[4]
        skip
      when _T_192 :
        _T_195[5] <= _T_176[5]
        skip
      when _T_193 :
        _T_195[6] <= _T_176[6]
        skip
      when _T_194 :
        _T_195[7] <= _T_176[7]
        skip
      skip @[DCache.scala 33:39]
    node _T_216 = eq(io.req.bits.write, UInt<1>("h00")) @[DCache.scala 37:45]
    node _T_217 = and(_T_164, _T_216) @[DCache.scala 37:42]
    wire _T_219 : UInt
    _T_219 is invalid
    when _T_217 :
      _T_219 <= addr
      node _T_221 = or(_T_219, UInt<9>("h00"))
      node _T_222 = bits(_T_221, 8, 0)
      read mport _T_223 = _T_160[_T_222], clock
      skip
    node _T_243 = cat(_T_223[1], _T_223[0]) @[DCache.scala 37:65]
    node _T_244 = cat(_T_223[3], _T_223[2]) @[DCache.scala 37:65]
    node _T_245 = cat(_T_244, _T_243) @[DCache.scala 37:65]
    node _T_246 = cat(_T_223[5], _T_223[4]) @[DCache.scala 37:65]
    node _T_247 = cat(_T_223[7], _T_223[6]) @[DCache.scala 37:65]
    node _T_248 = cat(_T_247, _T_246) @[DCache.scala 37:65]
    node _T_249 = cat(_T_248, _T_245) @[DCache.scala 37:65]
    io.resp[1] <= _T_249 @[DCache.scala 37:16]
    smem _T_264 : UInt<8>[8][512] @[DCache.scala 31:23]
    node _T_266 = bits(io.req.bits.way_en, 2, 2) @[DCache.scala 32:72]
    node _T_267 = or(UInt<1>("h00"), _T_266) @[DCache.scala 32:51]
    node _T_268 = and(io.req.valid, _T_267) @[DCache.scala 32:30]
    node _T_269 = and(_T_268, io.req.bits.write) @[DCache.scala 33:17]
    when _T_269 : @[DCache.scala 33:39]
      node _T_270 = bits(io.req.bits.wdata, 7, 0) @[DCache.scala 34:63]
      node _T_271 = bits(io.req.bits.wdata, 15, 8) @[DCache.scala 34:63]
      node _T_272 = bits(io.req.bits.wdata, 23, 16) @[DCache.scala 34:63]
      node _T_273 = bits(io.req.bits.wdata, 31, 24) @[DCache.scala 34:63]
      node _T_274 = bits(io.req.bits.wdata, 39, 32) @[DCache.scala 34:63]
      node _T_275 = bits(io.req.bits.wdata, 47, 40) @[DCache.scala 34:63]
      node _T_276 = bits(io.req.bits.wdata, 55, 48) @[DCache.scala 34:63]
      node _T_277 = bits(io.req.bits.wdata, 63, 56) @[DCache.scala 34:63]
      wire _T_280 : UInt<8>[8] @[DCache.scala 34:40]
      _T_280 is invalid @[DCache.scala 34:40]
      _T_280[0] <= _T_270 @[DCache.scala 34:40]
      _T_280[1] <= _T_271 @[DCache.scala 34:40]
      _T_280[2] <= _T_272 @[DCache.scala 34:40]
      _T_280[3] <= _T_273 @[DCache.scala 34:40]
      _T_280[4] <= _T_274 @[DCache.scala 34:40]
      _T_280[5] <= _T_275 @[DCache.scala 34:40]
      _T_280[6] <= _T_276 @[DCache.scala 34:40]
      _T_280[7] <= _T_277 @[DCache.scala 34:40]
      node _T_291 = bits(io.req.bits.wmask, 0, 0) @[DCache.scala 35:49]
      node _T_292 = bits(io.req.bits.wmask, 1, 1) @[DCache.scala 35:49]
      node _T_293 = bits(io.req.bits.wmask, 2, 2) @[DCache.scala 35:49]
      node _T_294 = bits(io.req.bits.wmask, 3, 3) @[DCache.scala 35:49]
      node _T_295 = bits(io.req.bits.wmask, 4, 4) @[DCache.scala 35:49]
      node _T_296 = bits(io.req.bits.wmask, 5, 5) @[DCache.scala 35:49]
      node _T_297 = bits(io.req.bits.wmask, 6, 6) @[DCache.scala 35:49]
      node _T_298 = bits(io.req.bits.wmask, 7, 7) @[DCache.scala 35:49]
      write mport _T_299 = _T_264[addr], clock
      when _T_291 :
        _T_299[0] <= _T_280[0]
        skip
      when _T_292 :
        _T_299[1] <= _T_280[1]
        skip
      when _T_293 :
        _T_299[2] <= _T_280[2]
        skip
      when _T_294 :
        _T_299[3] <= _T_280[3]
        skip
      when _T_295 :
        _T_299[4] <= _T_280[4]
        skip
      when _T_296 :
        _T_299[5] <= _T_280[5]
        skip
      when _T_297 :
        _T_299[6] <= _T_280[6]
        skip
      when _T_298 :
        _T_299[7] <= _T_280[7]
        skip
      skip @[DCache.scala 33:39]
    node _T_320 = eq(io.req.bits.write, UInt<1>("h00")) @[DCache.scala 37:45]
    node _T_321 = and(_T_268, _T_320) @[DCache.scala 37:42]
    wire _T_323 : UInt
    _T_323 is invalid
    when _T_321 :
      _T_323 <= addr
      node _T_325 = or(_T_323, UInt<9>("h00"))
      node _T_326 = bits(_T_325, 8, 0)
      read mport _T_327 = _T_264[_T_326], clock
      skip
    node _T_347 = cat(_T_327[1], _T_327[0]) @[DCache.scala 37:65]
    node _T_348 = cat(_T_327[3], _T_327[2]) @[DCache.scala 37:65]
    node _T_349 = cat(_T_348, _T_347) @[DCache.scala 37:65]
    node _T_350 = cat(_T_327[5], _T_327[4]) @[DCache.scala 37:65]
    node _T_351 = cat(_T_327[7], _T_327[6]) @[DCache.scala 37:65]
    node _T_352 = cat(_T_351, _T_350) @[DCache.scala 37:65]
    node _T_353 = cat(_T_352, _T_349) @[DCache.scala 37:65]
    io.resp[2] <= _T_353 @[DCache.scala 37:16]
    smem _T_368 : UInt<8>[8][512] @[DCache.scala 31:23]
    node _T_370 = bits(io.req.bits.way_en, 3, 3) @[DCache.scala 32:72]
    node _T_371 = or(UInt<1>("h00"), _T_370) @[DCache.scala 32:51]
    node _T_372 = and(io.req.valid, _T_371) @[DCache.scala 32:30]
    node _T_373 = and(_T_372, io.req.bits.write) @[DCache.scala 33:17]
    when _T_373 : @[DCache.scala 33:39]
      node _T_374 = bits(io.req.bits.wdata, 7, 0) @[DCache.scala 34:63]
      node _T_375 = bits(io.req.bits.wdata, 15, 8) @[DCache.scala 34:63]
      node _T_376 = bits(io.req.bits.wdata, 23, 16) @[DCache.scala 34:63]
      node _T_377 = bits(io.req.bits.wdata, 31, 24) @[DCache.scala 34:63]
      node _T_378 = bits(io.req.bits.wdata, 39, 32) @[DCache.scala 34:63]
      node _T_379 = bits(io.req.bits.wdata, 47, 40) @[DCache.scala 34:63]
      node _T_380 = bits(io.req.bits.wdata, 55, 48) @[DCache.scala 34:63]
      node _T_381 = bits(io.req.bits.wdata, 63, 56) @[DCache.scala 34:63]
      wire _T_384 : UInt<8>[8] @[DCache.scala 34:40]
      _T_384 is invalid @[DCache.scala 34:40]
      _T_384[0] <= _T_374 @[DCache.scala 34:40]
      _T_384[1] <= _T_375 @[DCache.scala 34:40]
      _T_384[2] <= _T_376 @[DCache.scala 34:40]
      _T_384[3] <= _T_377 @[DCache.scala 34:40]
      _T_384[4] <= _T_378 @[DCache.scala 34:40]
      _T_384[5] <= _T_379 @[DCache.scala 34:40]
      _T_384[6] <= _T_380 @[DCache.scala 34:40]
      _T_384[7] <= _T_381 @[DCache.scala 34:40]
      node _T_395 = bits(io.req.bits.wmask, 0, 0) @[DCache.scala 35:49]
      node _T_396 = bits(io.req.bits.wmask, 1, 1) @[DCache.scala 35:49]
      node _T_397 = bits(io.req.bits.wmask, 2, 2) @[DCache.scala 35:49]
      node _T_398 = bits(io.req.bits.wmask, 3, 3) @[DCache.scala 35:49]
      node _T_399 = bits(io.req.bits.wmask, 4, 4) @[DCache.scala 35:49]
      node _T_400 = bits(io.req.bits.wmask, 5, 5) @[DCache.scala 35:49]
      node _T_401 = bits(io.req.bits.wmask, 6, 6) @[DCache.scala 35:49]
      node _T_402 = bits(io.req.bits.wmask, 7, 7) @[DCache.scala 35:49]
      write mport _T_403 = _T_368[addr], clock
      when _T_395 :
        _T_403[0] <= _T_384[0]
        skip
      when _T_396 :
        _T_403[1] <= _T_384[1]
        skip
      when _T_397 :
        _T_403[2] <= _T_384[2]
        skip
      when _T_398 :
        _T_403[3] <= _T_384[3]
        skip
      when _T_399 :
        _T_403[4] <= _T_384[4]
        skip
      when _T_400 :
        _T_403[5] <= _T_384[5]
        skip
      when _T_401 :
        _T_403[6] <= _T_384[6]
        skip
      when _T_402 :
        _T_403[7] <= _T_384[7]
        skip
      skip @[DCache.scala 33:39]
    node _T_424 = eq(io.req.bits.write, UInt<1>("h00")) @[DCache.scala 37:45]
    node _T_425 = and(_T_372, _T_424) @[DCache.scala 37:42]
    wire _T_427 : UInt
    _T_427 is invalid
    when _T_425 :
      _T_427 <= addr
      node _T_429 = or(_T_427, UInt<9>("h00"))
      node _T_430 = bits(_T_429, 8, 0)
      read mport _T_431 = _T_368[_T_430], clock
      skip
    node _T_451 = cat(_T_431[1], _T_431[0]) @[DCache.scala 37:65]
    node _T_452 = cat(_T_431[3], _T_431[2]) @[DCache.scala 37:65]
    node _T_453 = cat(_T_452, _T_451) @[DCache.scala 37:65]
    node _T_454 = cat(_T_431[5], _T_431[4]) @[DCache.scala 37:65]
    node _T_455 = cat(_T_431[7], _T_431[6]) @[DCache.scala 37:65]
    node _T_456 = cat(_T_455, _T_454) @[DCache.scala 37:65]
    node _T_457 = cat(_T_456, _T_453) @[DCache.scala 37:65]
    io.resp[3] <= _T_457 @[DCache.scala 37:16]
    
  module Arbiter_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<12>, write : UInt<1>, wdata : UInt<64>, wmask : UInt<8>, way_en : UInt<4>}}[4], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<12>, write : UInt<1>, wdata : UInt<64>, wmask : UInt<8>, way_en : UInt<4>}}, chosen : UInt<2>}
    
    io is invalid
    io is invalid
    io.chosen <= UInt<2>("h03") @[Arbiter.scala 118:13]
    io.out.bits <- io.in[3].bits @[Arbiter.scala 119:15]
    when io.in[2].valid : @[Arbiter.scala 121:27]
      io.chosen <= UInt<2>("h02") @[Arbiter.scala 122:17]
      io.out.bits <- io.in[2].bits @[Arbiter.scala 123:19]
      skip @[Arbiter.scala 121:27]
    when io.in[1].valid : @[Arbiter.scala 121:27]
      io.chosen <= UInt<1>("h01") @[Arbiter.scala 122:17]
      io.out.bits <- io.in[1].bits @[Arbiter.scala 123:19]
      skip @[Arbiter.scala 121:27]
    when io.in[0].valid : @[Arbiter.scala 121:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 122:17]
      io.out.bits <- io.in[0].bits @[Arbiter.scala 123:19]
      skip @[Arbiter.scala 121:27]
    node _T_292 = or(io.in[0].valid, io.in[1].valid) @[Arbiter.scala 31:68]
    node _T_293 = or(_T_292, io.in[2].valid) @[Arbiter.scala 31:68]
    node _T_295 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _T_297 = eq(_T_292, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _T_299 = eq(_T_293, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _T_300 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 129:19]
    io.in[0].ready <= _T_300 @[Arbiter.scala 129:14]
    node _T_301 = and(_T_295, io.out.ready) @[Arbiter.scala 129:19]
    io.in[1].ready <= _T_301 @[Arbiter.scala 129:14]
    node _T_302 = and(_T_297, io.out.ready) @[Arbiter.scala 129:19]
    io.in[2].ready <= _T_302 @[Arbiter.scala 129:14]
    node _T_303 = and(_T_299, io.out.ready) @[Arbiter.scala 129:19]
    io.in[3].ready <= _T_303 @[Arbiter.scala 129:14]
    node _T_305 = eq(_T_299, UInt<1>("h00")) @[Arbiter.scala 130:19]
    node _T_306 = or(_T_305, io.in[3].valid) @[Arbiter.scala 130:31]
    io.out.valid <= _T_306 @[Arbiter.scala 130:16]
    
  module TLB : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {vaddr : UInt<40>, passthrough : UInt<1>, instruction : UInt<1>, store : UInt<1>}}, resp : {miss : UInt<1>, paddr : UInt<32>, xcpt_ld : UInt<1>, xcpt_st : UInt<1>, xcpt_if : UInt<1>, cacheable : UInt<1>}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {prv : UInt<2>, pum : UInt<1>, mxr : UInt<1>, addr : UInt<27>, store : UInt<1>, fetch : UInt<1>}}, flip resp : {valid : UInt<1>, bits : {pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<2>}}, flip ptbr : {mode : UInt<4>, asid : UInt<16>, ppn : UInt<44>}, flip invalidate : UInt<1>, flip status : {debug : UInt<1>, isa : UInt<32>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, pum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}}}
    
    io is invalid
    io is invalid
    reg valid : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[TLB.scala 45:18]
    reg ppns : UInt<20>[9], clock @[TLB.scala 46:17]
    reg tags : UInt<27>[9], clock @[TLB.scala 47:17]
    reg levels : UInt<2>[9], clock @[TLB.scala 48:19]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[TLB.scala 51:18]
    reg r_refill_tag : UInt<27>, clock @[TLB.scala 52:25]
    reg r_refill_waddr : UInt<3>, clock @[TLB.scala 53:27]
    reg r_req : {vaddr : UInt<40>, passthrough : UInt<1>, instruction : UInt<1>, store : UInt<1>}, clock @[TLB.scala 54:18]
    node _T_272 = eq(io.req.bits.instruction, UInt<1>("h00")) @[TLB.scala 56:39]
    node do_mprv = and(io.ptw.status.mprv, _T_272) @[TLB.scala 56:36]
    node priv = mux(do_mprv, io.ptw.status.mpp, io.ptw.status.prv) @[TLB.scala 57:17]
    node priv_s = eq(priv, UInt<1>("h01")) @[TLB.scala 58:21]
    node _T_275 = leq(priv, UInt<1>("h01")) @[TLB.scala 59:27]
    node _T_277 = eq(io.ptw.status.debug, UInt<1>("h00")) @[TLB.scala 59:39]
    node priv_uses_vm = and(_T_275, _T_277) @[TLB.scala 59:36]
    node _T_279 = bits(io.ptw.ptbr.mode, 3, 3) @[TLB.scala 60:53]
    node _T_280 = and(UInt<1>("h01"), _T_279) @[TLB.scala 60:34]
    node _T_281 = and(_T_280, priv_uses_vm) @[TLB.scala 60:83]
    node _T_283 = eq(io.req.bits.passthrough, UInt<1>("h00")) @[TLB.scala 60:102]
    node vm_enabled = and(_T_281, _T_283) @[TLB.scala 60:99]
    node vpn = bits(io.req.bits.vaddr, 39, 12) @[Misc.scala 123:7]
    node pgOffset = bits(io.req.bits.vaddr, 11, 0) @[Misc.scala 123:18]
    node refill_ppn = bits(io.ptw.resp.bits.pte.ppn, 19, 0) @[TLB.scala 64:44]
    node do_refill = and(UInt<1>("h01"), io.ptw.resp.valid) @[TLB.scala 65:33]
    node _T_285 = bits(vpn, 19, 0) @[TLB.scala 67:47]
    node _T_286 = mux(vm_enabled, ppns[8], _T_285) @[TLB.scala 67:20]
    node mpu_ppn = mux(do_refill, refill_ppn, _T_286) @[TLB.scala 66:20]
    node _T_287 = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 68:52]
    node mpu_physaddr = cat(mpu_ppn, _T_287) @[Cat.scala 30:58]
    node _T_289 = xor(mpu_physaddr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_290 = cvt(_T_289) @[Parameters.scala 117:49]
    node _T_292 = and(_T_290, asSInt(UInt<13>("h01000"))) @[Parameters.scala 117:52]
    node _T_293 = asSInt(_T_292) @[Parameters.scala 117:52]
    node _T_295 = eq(_T_293, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_297 = xor(mpu_physaddr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_298 = cvt(_T_297) @[Parameters.scala 117:49]
    node _T_300 = and(_T_298, asSInt(UInt<26>("h02000000"))) @[Parameters.scala 117:52]
    node _T_301 = asSInt(_T_300) @[Parameters.scala 117:52]
    node _T_303 = eq(_T_301, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_305 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_306 = cvt(_T_305) @[Parameters.scala 117:49]
    node _T_308 = and(_T_306, asSInt(UInt<13>("h01000"))) @[Parameters.scala 117:52]
    node _T_309 = asSInt(_T_308) @[Parameters.scala 117:52]
    node _T_311 = eq(_T_309, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_313 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_314 = cvt(_T_313) @[Parameters.scala 117:49]
    node _T_316 = and(_T_314, asSInt(UInt<17>("h010000"))) @[Parameters.scala 117:52]
    node _T_317 = asSInt(_T_316) @[Parameters.scala 117:52]
    node _T_319 = eq(_T_317, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_321 = xor(mpu_physaddr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
    node _T_322 = cvt(_T_321) @[Parameters.scala 117:49]
    node _T_324 = and(_T_322, asSInt(UInt<30>("h020000000"))) @[Parameters.scala 117:52]
    node _T_325 = asSInt(_T_324) @[Parameters.scala 117:52]
    node _T_327 = eq(_T_325, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_329 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_330 = cvt(_T_329) @[Parameters.scala 117:49]
    node _T_332 = and(_T_330, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 117:52]
    node _T_333 = asSInt(_T_332) @[Parameters.scala 117:52]
    node _T_335 = eq(_T_333, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_337 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_338 = cvt(_T_337) @[Parameters.scala 117:49]
    node _T_340 = and(_T_338, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 117:52]
    node _T_341 = asSInt(_T_340) @[Parameters.scala 117:52]
    node _T_343 = eq(_T_341, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    wire _T_346 : UInt<1>[7] @[Parameters.scala 110:36]
    _T_346 is invalid @[Parameters.scala 110:36]
    _T_346[0] <= _T_295 @[Parameters.scala 110:36]
    _T_346[1] <= _T_303 @[Parameters.scala 110:36]
    _T_346[2] <= _T_311 @[Parameters.scala 110:36]
    _T_346[3] <= _T_319 @[Parameters.scala 110:36]
    _T_346[4] <= _T_327 @[Parameters.scala 110:36]
    _T_346[5] <= _T_335 @[Parameters.scala 110:36]
    _T_346[6] <= _T_343 @[Parameters.scala 110:36]
    node _T_356 = or(_T_346[0], _T_346[1]) @[TLB.scala 69:67]
    node _T_357 = or(_T_356, _T_346[2]) @[TLB.scala 69:67]
    node _T_358 = or(_T_357, _T_346[3]) @[TLB.scala 69:67]
    node _T_359 = or(_T_358, _T_346[4]) @[TLB.scala 69:67]
    node _T_360 = or(_T_359, _T_346[5]) @[TLB.scala 69:67]
    node legal_address = or(_T_360, _T_346[6]) @[TLB.scala 69:67]
    node _T_362 = xor(mpu_physaddr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_363 = cvt(_T_362) @[Parameters.scala 117:49]
    node _T_365 = and(_T_363, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_366 = asSInt(_T_365) @[Parameters.scala 117:52]
    node _T_368 = eq(_T_366, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_370 = xor(mpu_physaddr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_371 = cvt(_T_370) @[Parameters.scala 117:49]
    node _T_373 = and(_T_371, asSInt(UInt<33>("h0ae000000"))) @[Parameters.scala 117:52]
    node _T_374 = asSInt(_T_373) @[Parameters.scala 117:52]
    node _T_376 = eq(_T_374, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_378 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_379 = cvt(_T_378) @[Parameters.scala 117:49]
    node _T_381 = and(_T_379, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_382 = asSInt(_T_381) @[Parameters.scala 117:52]
    node _T_384 = eq(_T_382, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_386 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_387 = cvt(_T_386) @[Parameters.scala 117:49]
    node _T_389 = and(_T_387, asSInt(UInt<33>("h0afff0000"))) @[Parameters.scala 117:52]
    node _T_390 = asSInt(_T_389) @[Parameters.scala 117:52]
    node _T_392 = eq(_T_390, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_394 = xor(mpu_physaddr, UInt<30>("h020000000")) @[Parameters.scala 117:31]
    node _T_395 = cvt(_T_394) @[Parameters.scala 117:49]
    node _T_397 = and(_T_395, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_398 = asSInt(_T_397) @[Parameters.scala 117:52]
    node _T_400 = eq(_T_398, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_402 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_403 = cvt(_T_402) @[Parameters.scala 117:49]
    node _T_405 = and(_T_403, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_406 = asSInt(_T_405) @[Parameters.scala 117:52]
    node _T_408 = eq(_T_406, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_410 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_411 = cvt(_T_410) @[Parameters.scala 117:49]
    node _T_413 = and(_T_411, asSInt(UInt<33>("h0ac000000"))) @[Parameters.scala 117:52]
    node _T_414 = asSInt(_T_413) @[Parameters.scala 117:52]
    node _T_416 = eq(_T_414, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    wire _T_419 : UInt<1>[7] @[Parameters.scala 112:36]
    _T_419 is invalid @[Parameters.scala 112:36]
    _T_419[0] <= _T_368 @[Parameters.scala 112:36]
    _T_419[1] <= _T_376 @[Parameters.scala 112:36]
    _T_419[2] <= _T_384 @[Parameters.scala 112:36]
    _T_419[3] <= _T_392 @[Parameters.scala 112:36]
    _T_419[4] <= _T_400 @[Parameters.scala 112:36]
    _T_419[5] <= _T_408 @[Parameters.scala 112:36]
    _T_419[6] <= _T_416 @[Parameters.scala 112:36]
    node _T_437 = mux(_T_419[0], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_439 = mux(_T_419[1], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_441 = mux(_T_419[2], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_443 = mux(_T_419[3], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_445 = mux(_T_419[4], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_447 = mux(_T_419[5], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_449 = mux(_T_419[6], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_451 = or(_T_437, _T_439) @[Mux.scala 19:72]
    node _T_452 = or(_T_451, _T_441) @[Mux.scala 19:72]
    node _T_453 = or(_T_452, _T_443) @[Mux.scala 19:72]
    node _T_454 = or(_T_453, _T_445) @[Mux.scala 19:72]
    node _T_455 = or(_T_454, _T_447) @[Mux.scala 19:72]
    node _T_456 = or(_T_455, _T_449) @[Mux.scala 19:72]
    wire _T_458 : UInt<1> @[Mux.scala 19:72]
    _T_458 is invalid @[Mux.scala 19:72]
    _T_458 <= _T_456 @[Mux.scala 19:72]
    node prot_r = and(legal_address, _T_458) @[TLB.scala 71:19]
    node _T_460 = xor(mpu_physaddr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_461 = cvt(_T_460) @[Parameters.scala 117:49]
    node _T_463 = and(_T_461, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_464 = asSInt(_T_463) @[Parameters.scala 117:52]
    node _T_466 = eq(_T_464, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_468 = xor(mpu_physaddr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_469 = cvt(_T_468) @[Parameters.scala 117:49]
    node _T_471 = and(_T_469, asSInt(UInt<33>("h0ae000000"))) @[Parameters.scala 117:52]
    node _T_472 = asSInt(_T_471) @[Parameters.scala 117:52]
    node _T_474 = eq(_T_472, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_476 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_477 = cvt(_T_476) @[Parameters.scala 117:49]
    node _T_479 = and(_T_477, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_480 = asSInt(_T_479) @[Parameters.scala 117:52]
    node _T_482 = eq(_T_480, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_484 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_485 = cvt(_T_484) @[Parameters.scala 117:49]
    node _T_487 = and(_T_485, asSInt(UInt<33>("h0afff0000"))) @[Parameters.scala 117:52]
    node _T_488 = asSInt(_T_487) @[Parameters.scala 117:52]
    node _T_490 = eq(_T_488, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_492 = xor(mpu_physaddr, UInt<30>("h020000000")) @[Parameters.scala 117:31]
    node _T_493 = cvt(_T_492) @[Parameters.scala 117:49]
    node _T_495 = and(_T_493, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_496 = asSInt(_T_495) @[Parameters.scala 117:52]
    node _T_498 = eq(_T_496, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_500 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_501 = cvt(_T_500) @[Parameters.scala 117:49]
    node _T_503 = and(_T_501, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_504 = asSInt(_T_503) @[Parameters.scala 117:52]
    node _T_506 = eq(_T_504, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_508 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_509 = cvt(_T_508) @[Parameters.scala 117:49]
    node _T_511 = and(_T_509, asSInt(UInt<33>("h0ac000000"))) @[Parameters.scala 117:52]
    node _T_512 = asSInt(_T_511) @[Parameters.scala 117:52]
    node _T_514 = eq(_T_512, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    wire _T_517 : UInt<1>[7] @[Parameters.scala 112:36]
    _T_517 is invalid @[Parameters.scala 112:36]
    _T_517[0] <= _T_466 @[Parameters.scala 112:36]
    _T_517[1] <= _T_474 @[Parameters.scala 112:36]
    _T_517[2] <= _T_482 @[Parameters.scala 112:36]
    _T_517[3] <= _T_490 @[Parameters.scala 112:36]
    _T_517[4] <= _T_498 @[Parameters.scala 112:36]
    _T_517[5] <= _T_506 @[Parameters.scala 112:36]
    _T_517[6] <= _T_514 @[Parameters.scala 112:36]
    node _T_535 = mux(_T_517[0], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_537 = mux(_T_517[1], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_539 = mux(_T_517[2], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_541 = mux(_T_517[3], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_543 = mux(_T_517[4], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_545 = mux(_T_517[5], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_547 = mux(_T_517[6], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_549 = or(_T_535, _T_537) @[Mux.scala 19:72]
    node _T_550 = or(_T_549, _T_539) @[Mux.scala 19:72]
    node _T_551 = or(_T_550, _T_541) @[Mux.scala 19:72]
    node _T_552 = or(_T_551, _T_543) @[Mux.scala 19:72]
    node _T_553 = or(_T_552, _T_545) @[Mux.scala 19:72]
    node _T_554 = or(_T_553, _T_547) @[Mux.scala 19:72]
    wire _T_556 : UInt<1> @[Mux.scala 19:72]
    _T_556 is invalid @[Mux.scala 19:72]
    _T_556 <= _T_554 @[Mux.scala 19:72]
    node prot_w = and(legal_address, _T_556) @[TLB.scala 71:19]
    node _T_558 = xor(mpu_physaddr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_559 = cvt(_T_558) @[Parameters.scala 117:49]
    node _T_561 = and(_T_559, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_562 = asSInt(_T_561) @[Parameters.scala 117:52]
    node _T_564 = eq(_T_562, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_566 = xor(mpu_physaddr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_567 = cvt(_T_566) @[Parameters.scala 117:49]
    node _T_569 = and(_T_567, asSInt(UInt<33>("h0ae000000"))) @[Parameters.scala 117:52]
    node _T_570 = asSInt(_T_569) @[Parameters.scala 117:52]
    node _T_572 = eq(_T_570, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_574 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_575 = cvt(_T_574) @[Parameters.scala 117:49]
    node _T_577 = and(_T_575, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_578 = asSInt(_T_577) @[Parameters.scala 117:52]
    node _T_580 = eq(_T_578, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_582 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_583 = cvt(_T_582) @[Parameters.scala 117:49]
    node _T_585 = and(_T_583, asSInt(UInt<33>("h0afff0000"))) @[Parameters.scala 117:52]
    node _T_586 = asSInt(_T_585) @[Parameters.scala 117:52]
    node _T_588 = eq(_T_586, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_590 = xor(mpu_physaddr, UInt<30>("h020000000")) @[Parameters.scala 117:31]
    node _T_591 = cvt(_T_590) @[Parameters.scala 117:49]
    node _T_593 = and(_T_591, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_594 = asSInt(_T_593) @[Parameters.scala 117:52]
    node _T_596 = eq(_T_594, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_598 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_599 = cvt(_T_598) @[Parameters.scala 117:49]
    node _T_601 = and(_T_599, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_602 = asSInt(_T_601) @[Parameters.scala 117:52]
    node _T_604 = eq(_T_602, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_606 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_607 = cvt(_T_606) @[Parameters.scala 117:49]
    node _T_609 = and(_T_607, asSInt(UInt<33>("h0ac000000"))) @[Parameters.scala 117:52]
    node _T_610 = asSInt(_T_609) @[Parameters.scala 117:52]
    node _T_612 = eq(_T_610, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    wire _T_615 : UInt<1>[7] @[Parameters.scala 112:36]
    _T_615 is invalid @[Parameters.scala 112:36]
    _T_615[0] <= _T_564 @[Parameters.scala 112:36]
    _T_615[1] <= _T_572 @[Parameters.scala 112:36]
    _T_615[2] <= _T_580 @[Parameters.scala 112:36]
    _T_615[3] <= _T_588 @[Parameters.scala 112:36]
    _T_615[4] <= _T_596 @[Parameters.scala 112:36]
    _T_615[5] <= _T_604 @[Parameters.scala 112:36]
    _T_615[6] <= _T_612 @[Parameters.scala 112:36]
    node _T_633 = mux(_T_615[0], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_635 = mux(_T_615[1], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_637 = mux(_T_615[2], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_639 = mux(_T_615[3], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_641 = mux(_T_615[4], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_643 = mux(_T_615[5], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_645 = mux(_T_615[6], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_647 = or(_T_633, _T_635) @[Mux.scala 19:72]
    node _T_648 = or(_T_647, _T_637) @[Mux.scala 19:72]
    node _T_649 = or(_T_648, _T_639) @[Mux.scala 19:72]
    node _T_650 = or(_T_649, _T_641) @[Mux.scala 19:72]
    node _T_651 = or(_T_650, _T_643) @[Mux.scala 19:72]
    node _T_652 = or(_T_651, _T_645) @[Mux.scala 19:72]
    wire _T_654 : UInt<1> @[Mux.scala 19:72]
    _T_654 is invalid @[Mux.scala 19:72]
    _T_654 <= _T_652 @[Mux.scala 19:72]
    node prot_x = and(legal_address, _T_654) @[TLB.scala 71:19]
    node _T_656 = xor(mpu_physaddr, UInt<13>("h01000")) @[Parameters.scala 117:31]
    node _T_657 = cvt(_T_656) @[Parameters.scala 117:49]
    node _T_659 = and(_T_657, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_660 = asSInt(_T_659) @[Parameters.scala 117:52]
    node _T_662 = eq(_T_660, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_664 = xor(mpu_physaddr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
    node _T_665 = cvt(_T_664) @[Parameters.scala 117:49]
    node _T_667 = and(_T_665, asSInt(UInt<33>("h0ae000000"))) @[Parameters.scala 117:52]
    node _T_668 = asSInt(_T_667) @[Parameters.scala 117:52]
    node _T_670 = eq(_T_668, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_672 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
    node _T_673 = cvt(_T_672) @[Parameters.scala 117:49]
    node _T_675 = and(_T_673, asSInt(UInt<33>("h0afff1000"))) @[Parameters.scala 117:52]
    node _T_676 = asSInt(_T_675) @[Parameters.scala 117:52]
    node _T_678 = eq(_T_676, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_680 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
    node _T_681 = cvt(_T_680) @[Parameters.scala 117:49]
    node _T_683 = and(_T_681, asSInt(UInt<33>("h0afff0000"))) @[Parameters.scala 117:52]
    node _T_684 = asSInt(_T_683) @[Parameters.scala 117:52]
    node _T_686 = eq(_T_684, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_688 = xor(mpu_physaddr, UInt<30>("h020000000")) @[Parameters.scala 117:31]
    node _T_689 = cvt(_T_688) @[Parameters.scala 117:49]
    node _T_691 = and(_T_689, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_692 = asSInt(_T_691) @[Parameters.scala 117:52]
    node _T_694 = eq(_T_692, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_696 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
    node _T_697 = cvt(_T_696) @[Parameters.scala 117:49]
    node _T_699 = and(_T_697, asSInt(UInt<33>("h0a0000000"))) @[Parameters.scala 117:52]
    node _T_700 = asSInt(_T_699) @[Parameters.scala 117:52]
    node _T_702 = eq(_T_700, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    node _T_704 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
    node _T_705 = cvt(_T_704) @[Parameters.scala 117:49]
    node _T_707 = and(_T_705, asSInt(UInt<33>("h0ac000000"))) @[Parameters.scala 117:52]
    node _T_708 = asSInt(_T_707) @[Parameters.scala 117:52]
    node _T_710 = eq(_T_708, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
    wire _T_713 : UInt<1>[7] @[Parameters.scala 112:36]
    _T_713 is invalid @[Parameters.scala 112:36]
    _T_713[0] <= _T_662 @[Parameters.scala 112:36]
    _T_713[1] <= _T_670 @[Parameters.scala 112:36]
    _T_713[2] <= _T_678 @[Parameters.scala 112:36]
    _T_713[3] <= _T_686 @[Parameters.scala 112:36]
    _T_713[4] <= _T_694 @[Parameters.scala 112:36]
    _T_713[5] <= _T_702 @[Parameters.scala 112:36]
    _T_713[6] <= _T_710 @[Parameters.scala 112:36]
    node _T_731 = mux(_T_713[0], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_733 = mux(_T_713[1], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_735 = mux(_T_713[2], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_737 = mux(_T_713[3], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_739 = mux(_T_713[4], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_741 = mux(_T_713[5], UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_743 = mux(_T_713[6], UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_745 = or(_T_731, _T_733) @[Mux.scala 19:72]
    node _T_746 = or(_T_745, _T_735) @[Mux.scala 19:72]
    node _T_747 = or(_T_746, _T_737) @[Mux.scala 19:72]
    node _T_748 = or(_T_747, _T_739) @[Mux.scala 19:72]
    node _T_749 = or(_T_748, _T_741) @[Mux.scala 19:72]
    node _T_750 = or(_T_749, _T_743) @[Mux.scala 19:72]
    wire _T_752 : UInt<1> @[Mux.scala 19:72]
    _T_752 is invalid @[Mux.scala 19:72]
    _T_752 <= _T_750 @[Mux.scala 19:72]
    node cacheable = and(legal_address, _T_752) @[TLB.scala 71:19]
    wire _T_754 : UInt<1>
    _T_754 is invalid
    _T_754 <= UInt<1>("h00")
    node _T_756 = eq(io.ptw.resp.bits.level, UInt<1>("h00")) @[TLB.scala 80:36]
    when _T_756 : @[TLB.scala 80:43]
      node _T_760 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_763 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_766 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_769 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_772 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_775 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      _T_754 <= UInt<1>("h00") @[TLB.scala 80:57]
      skip @[TLB.scala 80:43]
    node _T_777 = eq(io.ptw.resp.bits.level, UInt<1>("h01")) @[TLB.scala 80:36]
    when _T_777 : @[TLB.scala 80:43]
      node _T_779 = xor(mpu_physaddr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
      node _T_780 = cvt(_T_779) @[Parameters.scala 117:49]
      node _T_782 = and(_T_780, asSInt(UInt<26>("h02000000"))) @[Parameters.scala 117:52]
      node _T_783 = asSInt(_T_782) @[Parameters.scala 117:52]
      node _T_785 = eq(_T_783, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_787 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
      node _T_788 = cvt(_T_787) @[Parameters.scala 117:49]
      node _T_790 = and(_T_788, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 117:52]
      node _T_791 = asSInt(_T_790) @[Parameters.scala 117:52]
      node _T_793 = eq(_T_791, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_795 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
      node _T_796 = cvt(_T_795) @[Parameters.scala 117:49]
      node _T_798 = and(_T_796, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 117:52]
      node _T_799 = asSInt(_T_798) @[Parameters.scala 117:52]
      node _T_801 = eq(_T_799, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_803 = xor(mpu_physaddr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
      node _T_804 = cvt(_T_803) @[Parameters.scala 117:49]
      node _T_806 = and(_T_804, asSInt(UInt<30>("h020000000"))) @[Parameters.scala 117:52]
      node _T_807 = asSInt(_T_806) @[Parameters.scala 117:52]
      node _T_809 = eq(_T_807, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_811 = or(UInt<1>("h00"), _T_785) @[TLBPermissions.scala 89:65]
      node _T_812 = or(_T_811, _T_793) @[TLBPermissions.scala 89:65]
      node _T_813 = or(_T_812, _T_801) @[TLBPermissions.scala 89:65]
      node _T_814 = or(_T_813, _T_809) @[TLBPermissions.scala 89:65]
      node _T_817 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_820 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_822 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 117:31]
      node _T_823 = cvt(_T_822) @[Parameters.scala 117:49]
      node _T_825 = and(_T_823, asSInt(UInt<33>("h0f4000000"))) @[Parameters.scala 117:52]
      node _T_826 = asSInt(_T_825) @[Parameters.scala 117:52]
      node _T_828 = eq(_T_826, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_830 = or(UInt<1>("h00"), _T_828) @[TLBPermissions.scala 75:66]
      node _T_832 = eq(_T_830, UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_834 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 117:31]
      node _T_835 = cvt(_T_834) @[Parameters.scala 117:49]
      node _T_837 = and(_T_835, asSInt(UInt<33>("h0f4000000"))) @[Parameters.scala 117:52]
      node _T_838 = asSInt(_T_837) @[Parameters.scala 117:52]
      node _T_840 = eq(_T_838, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_842 = xor(mpu_physaddr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
      node _T_843 = cvt(_T_842) @[Parameters.scala 117:49]
      node _T_845 = and(_T_843, asSInt(UInt<33>("h0e0000000"))) @[Parameters.scala 117:52]
      node _T_846 = asSInt(_T_845) @[Parameters.scala 117:52]
      node _T_848 = eq(_T_846, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_850 = or(UInt<1>("h00"), _T_840) @[TLBPermissions.scala 75:66]
      node _T_851 = or(_T_850, _T_848) @[TLBPermissions.scala 75:66]
      node _T_853 = eq(_T_851, UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_855 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 117:31]
      node _T_856 = cvt(_T_855) @[Parameters.scala 117:49]
      node _T_858 = and(_T_856, asSInt(UInt<33>("h0f4000000"))) @[Parameters.scala 117:52]
      node _T_859 = asSInt(_T_858) @[Parameters.scala 117:52]
      node _T_861 = eq(_T_859, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_863 = or(UInt<1>("h00"), _T_861) @[TLBPermissions.scala 73:66]
      node _T_865 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 117:31]
      node _T_866 = cvt(_T_865) @[Parameters.scala 117:49]
      node _T_868 = and(_T_866, asSInt(UInt<33>("h0f4000000"))) @[Parameters.scala 117:52]
      node _T_869 = asSInt(_T_868) @[Parameters.scala 117:52]
      node _T_871 = eq(_T_869, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_873 = or(UInt<1>("h00"), _T_871) @[TLBPermissions.scala 73:66]
      _T_754 <= _T_814 @[TLB.scala 80:57]
      skip @[TLB.scala 80:43]
    node _T_875 = eq(io.ptw.resp.bits.level, UInt<2>("h02")) @[TLB.scala 80:36]
    when _T_875 : @[TLB.scala 80:43]
      node _T_877 = xor(mpu_physaddr, UInt<28>("h0a000000")) @[Parameters.scala 117:31]
      node _T_878 = cvt(_T_877) @[Parameters.scala 117:49]
      node _T_880 = and(_T_878, asSInt(UInt<26>("h02000000"))) @[Parameters.scala 117:52]
      node _T_881 = asSInt(_T_880) @[Parameters.scala 117:52]
      node _T_883 = eq(_T_881, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_885 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
      node _T_886 = cvt(_T_885) @[Parameters.scala 117:49]
      node _T_888 = and(_T_886, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 117:52]
      node _T_889 = asSInt(_T_888) @[Parameters.scala 117:52]
      node _T_891 = eq(_T_889, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_893 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
      node _T_894 = cvt(_T_893) @[Parameters.scala 117:49]
      node _T_896 = and(_T_894, asSInt(UInt<14>("h02000"))) @[Parameters.scala 117:52]
      node _T_897 = asSInt(_T_896) @[Parameters.scala 117:52]
      node _T_899 = eq(_T_897, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_901 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
      node _T_902 = cvt(_T_901) @[Parameters.scala 117:49]
      node _T_904 = and(_T_902, asSInt(UInt<17>("h010000"))) @[Parameters.scala 117:52]
      node _T_905 = asSInt(_T_904) @[Parameters.scala 117:52]
      node _T_907 = eq(_T_905, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_909 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
      node _T_910 = cvt(_T_909) @[Parameters.scala 117:49]
      node _T_912 = and(_T_910, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 117:52]
      node _T_913 = asSInt(_T_912) @[Parameters.scala 117:52]
      node _T_915 = eq(_T_913, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_917 = xor(mpu_physaddr, UInt<31>("h060000000")) @[Parameters.scala 117:31]
      node _T_918 = cvt(_T_917) @[Parameters.scala 117:49]
      node _T_920 = and(_T_918, asSInt(UInt<30>("h020000000"))) @[Parameters.scala 117:52]
      node _T_921 = asSInt(_T_920) @[Parameters.scala 117:52]
      node _T_923 = eq(_T_921, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_925 = or(UInt<1>("h00"), _T_883) @[TLBPermissions.scala 89:65]
      node _T_926 = or(_T_925, _T_891) @[TLBPermissions.scala 89:65]
      node _T_927 = or(_T_926, _T_899) @[TLBPermissions.scala 89:65]
      node _T_928 = or(_T_927, _T_907) @[TLBPermissions.scala 89:65]
      node _T_929 = or(_T_928, _T_915) @[TLBPermissions.scala 89:65]
      node _T_930 = or(_T_929, _T_923) @[TLBPermissions.scala 89:65]
      node _T_933 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_935 = xor(mpu_physaddr, UInt<13>("h01000")) @[Parameters.scala 117:31]
      node _T_936 = cvt(_T_935) @[Parameters.scala 117:49]
      node _T_938 = and(_T_936, asSInt(UInt<33>("h0fbff1000"))) @[Parameters.scala 117:52]
      node _T_939 = asSInt(_T_938) @[Parameters.scala 117:52]
      node _T_941 = eq(_T_939, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_943 = or(UInt<1>("h00"), _T_941) @[TLBPermissions.scala 75:66]
      node _T_945 = eq(_T_943, UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_947 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
      node _T_948 = cvt(_T_947) @[Parameters.scala 117:49]
      node _T_950 = and(_T_948, asSInt(UInt<33>("h0fe000000"))) @[Parameters.scala 117:52]
      node _T_951 = asSInt(_T_950) @[Parameters.scala 117:52]
      node _T_953 = eq(_T_951, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_955 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
      node _T_956 = cvt(_T_955) @[Parameters.scala 117:49]
      node _T_958 = and(_T_956, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
      node _T_959 = asSInt(_T_958) @[Parameters.scala 117:52]
      node _T_961 = eq(_T_959, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_963 = or(UInt<1>("h00"), _T_953) @[TLBPermissions.scala 75:66]
      node _T_964 = or(_T_963, _T_961) @[TLBPermissions.scala 75:66]
      node _T_966 = eq(_T_964, UInt<1>("h00")) @[TLBPermissions.scala 75:22]
      node _T_968 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 117:31]
      node _T_969 = cvt(_T_968) @[Parameters.scala 117:49]
      node _T_971 = and(_T_969, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
      node _T_972 = asSInt(_T_971) @[Parameters.scala 117:52]
      node _T_974 = eq(_T_972, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_976 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 117:31]
      node _T_977 = cvt(_T_976) @[Parameters.scala 117:49]
      node _T_979 = and(_T_977, asSInt(UInt<33>("h0f0000000"))) @[Parameters.scala 117:52]
      node _T_980 = asSInt(_T_979) @[Parameters.scala 117:52]
      node _T_982 = eq(_T_980, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_984 = or(UInt<1>("h00"), _T_974) @[TLBPermissions.scala 73:66]
      node _T_985 = or(_T_984, _T_982) @[TLBPermissions.scala 73:66]
      node _T_987 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
      node _T_988 = cvt(_T_987) @[Parameters.scala 117:49]
      node _T_990 = and(_T_988, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
      node _T_991 = asSInt(_T_990) @[Parameters.scala 117:52]
      node _T_993 = eq(_T_991, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_995 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
      node _T_996 = cvt(_T_995) @[Parameters.scala 117:49]
      node _T_998 = and(_T_996, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
      node _T_999 = asSInt(_T_998) @[Parameters.scala 117:52]
      node _T_1001 = eq(_T_999, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_1003 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
      node _T_1004 = cvt(_T_1003) @[Parameters.scala 117:49]
      node _T_1006 = and(_T_1004, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
      node _T_1007 = asSInt(_T_1006) @[Parameters.scala 117:52]
      node _T_1009 = eq(_T_1007, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_1011 = or(UInt<1>("h00"), _T_993) @[TLBPermissions.scala 73:66]
      node _T_1012 = or(_T_1011, _T_1001) @[TLBPermissions.scala 73:66]
      node _T_1013 = or(_T_1012, _T_1009) @[TLBPermissions.scala 73:66]
      node _T_1015 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 117:31]
      node _T_1016 = cvt(_T_1015) @[Parameters.scala 117:49]
      node _T_1018 = and(_T_1016, asSInt(UInt<33>("h0ffff1000"))) @[Parameters.scala 117:52]
      node _T_1019 = asSInt(_T_1018) @[Parameters.scala 117:52]
      node _T_1021 = eq(_T_1019, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_1023 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 117:31]
      node _T_1024 = cvt(_T_1023) @[Parameters.scala 117:49]
      node _T_1026 = and(_T_1024, asSInt(UInt<33>("h0ffff0000"))) @[Parameters.scala 117:52]
      node _T_1027 = asSInt(_T_1026) @[Parameters.scala 117:52]
      node _T_1029 = eq(_T_1027, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_1031 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 117:31]
      node _T_1032 = cvt(_T_1031) @[Parameters.scala 117:49]
      node _T_1034 = and(_T_1032, asSInt(UInt<33>("h0fc000000"))) @[Parameters.scala 117:52]
      node _T_1035 = asSInt(_T_1034) @[Parameters.scala 117:52]
      node _T_1037 = eq(_T_1035, asSInt(UInt<1>("h00"))) @[Parameters.scala 117:67]
      node _T_1039 = or(UInt<1>("h00"), _T_1021) @[TLBPermissions.scala 73:66]
      node _T_1040 = or(_T_1039, _T_1029) @[TLBPermissions.scala 73:66]
      node _T_1041 = or(_T_1040, _T_1037) @[TLBPermissions.scala 73:66]
      _T_754 <= _T_930 @[TLB.scala 80:57]
      skip @[TLB.scala 80:43]
    node isSpecial = eq(_T_754, UInt<1>("h00")) @[TLB.scala 82:5]
    node _T_1043 = bits(vpn, 26, 0) @[TLB.scala 85:45]
    node lookup_tag = cat(io.ptw.ptbr.asid, _T_1043) @[Cat.scala 30:58]
    node _T_1044 = bits(valid, 0, 0) @[TLB.scala 87:25]
    node _T_1046 = lt(levels[0], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1047 = bits(tags[0], 26, 18) @[TLB.scala 90:55]
    node _T_1048 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1049 = eq(_T_1047, _T_1048) @[TLB.scala 90:86]
    node _T_1050 = or(_T_1046, _T_1049) @[TLB.scala 90:45]
    node _T_1051 = and(_T_1044, _T_1050) @[TLB.scala 90:27]
    node _T_1053 = lt(levels[0], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1054 = bits(tags[0], 17, 9) @[TLB.scala 90:55]
    node _T_1055 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1056 = eq(_T_1054, _T_1055) @[TLB.scala 90:86]
    node _T_1057 = or(_T_1053, _T_1056) @[TLB.scala 90:45]
    node _T_1058 = and(_T_1051, _T_1057) @[TLB.scala 90:27]
    node _T_1060 = lt(levels[0], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1061 = bits(tags[0], 8, 0) @[TLB.scala 90:55]
    node _T_1062 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1063 = eq(_T_1061, _T_1062) @[TLB.scala 90:86]
    node _T_1064 = or(_T_1060, _T_1063) @[TLB.scala 90:45]
    node _T_1065 = and(_T_1058, _T_1064) @[TLB.scala 90:27]
    node hitsVec_0 = and(vm_enabled, _T_1065) @[TLB.scala 86:62]
    node _T_1066 = bits(valid, 1, 1) @[TLB.scala 87:25]
    node _T_1068 = lt(levels[1], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1069 = bits(tags[1], 26, 18) @[TLB.scala 90:55]
    node _T_1070 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1071 = eq(_T_1069, _T_1070) @[TLB.scala 90:86]
    node _T_1072 = or(_T_1068, _T_1071) @[TLB.scala 90:45]
    node _T_1073 = and(_T_1066, _T_1072) @[TLB.scala 90:27]
    node _T_1075 = lt(levels[1], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1076 = bits(tags[1], 17, 9) @[TLB.scala 90:55]
    node _T_1077 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1078 = eq(_T_1076, _T_1077) @[TLB.scala 90:86]
    node _T_1079 = or(_T_1075, _T_1078) @[TLB.scala 90:45]
    node _T_1080 = and(_T_1073, _T_1079) @[TLB.scala 90:27]
    node _T_1082 = lt(levels[1], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1083 = bits(tags[1], 8, 0) @[TLB.scala 90:55]
    node _T_1084 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1085 = eq(_T_1083, _T_1084) @[TLB.scala 90:86]
    node _T_1086 = or(_T_1082, _T_1085) @[TLB.scala 90:45]
    node _T_1087 = and(_T_1080, _T_1086) @[TLB.scala 90:27]
    node hitsVec_1 = and(vm_enabled, _T_1087) @[TLB.scala 86:62]
    node _T_1088 = bits(valid, 2, 2) @[TLB.scala 87:25]
    node _T_1090 = lt(levels[2], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1091 = bits(tags[2], 26, 18) @[TLB.scala 90:55]
    node _T_1092 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1093 = eq(_T_1091, _T_1092) @[TLB.scala 90:86]
    node _T_1094 = or(_T_1090, _T_1093) @[TLB.scala 90:45]
    node _T_1095 = and(_T_1088, _T_1094) @[TLB.scala 90:27]
    node _T_1097 = lt(levels[2], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1098 = bits(tags[2], 17, 9) @[TLB.scala 90:55]
    node _T_1099 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1100 = eq(_T_1098, _T_1099) @[TLB.scala 90:86]
    node _T_1101 = or(_T_1097, _T_1100) @[TLB.scala 90:45]
    node _T_1102 = and(_T_1095, _T_1101) @[TLB.scala 90:27]
    node _T_1104 = lt(levels[2], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1105 = bits(tags[2], 8, 0) @[TLB.scala 90:55]
    node _T_1106 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1107 = eq(_T_1105, _T_1106) @[TLB.scala 90:86]
    node _T_1108 = or(_T_1104, _T_1107) @[TLB.scala 90:45]
    node _T_1109 = and(_T_1102, _T_1108) @[TLB.scala 90:27]
    node hitsVec_2 = and(vm_enabled, _T_1109) @[TLB.scala 86:62]
    node _T_1110 = bits(valid, 3, 3) @[TLB.scala 87:25]
    node _T_1112 = lt(levels[3], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1113 = bits(tags[3], 26, 18) @[TLB.scala 90:55]
    node _T_1114 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1115 = eq(_T_1113, _T_1114) @[TLB.scala 90:86]
    node _T_1116 = or(_T_1112, _T_1115) @[TLB.scala 90:45]
    node _T_1117 = and(_T_1110, _T_1116) @[TLB.scala 90:27]
    node _T_1119 = lt(levels[3], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1120 = bits(tags[3], 17, 9) @[TLB.scala 90:55]
    node _T_1121 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1122 = eq(_T_1120, _T_1121) @[TLB.scala 90:86]
    node _T_1123 = or(_T_1119, _T_1122) @[TLB.scala 90:45]
    node _T_1124 = and(_T_1117, _T_1123) @[TLB.scala 90:27]
    node _T_1126 = lt(levels[3], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1127 = bits(tags[3], 8, 0) @[TLB.scala 90:55]
    node _T_1128 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1129 = eq(_T_1127, _T_1128) @[TLB.scala 90:86]
    node _T_1130 = or(_T_1126, _T_1129) @[TLB.scala 90:45]
    node _T_1131 = and(_T_1124, _T_1130) @[TLB.scala 90:27]
    node hitsVec_3 = and(vm_enabled, _T_1131) @[TLB.scala 86:62]
    node _T_1132 = bits(valid, 4, 4) @[TLB.scala 87:25]
    node _T_1134 = lt(levels[4], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1135 = bits(tags[4], 26, 18) @[TLB.scala 90:55]
    node _T_1136 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1137 = eq(_T_1135, _T_1136) @[TLB.scala 90:86]
    node _T_1138 = or(_T_1134, _T_1137) @[TLB.scala 90:45]
    node _T_1139 = and(_T_1132, _T_1138) @[TLB.scala 90:27]
    node _T_1141 = lt(levels[4], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1142 = bits(tags[4], 17, 9) @[TLB.scala 90:55]
    node _T_1143 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1144 = eq(_T_1142, _T_1143) @[TLB.scala 90:86]
    node _T_1145 = or(_T_1141, _T_1144) @[TLB.scala 90:45]
    node _T_1146 = and(_T_1139, _T_1145) @[TLB.scala 90:27]
    node _T_1148 = lt(levels[4], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1149 = bits(tags[4], 8, 0) @[TLB.scala 90:55]
    node _T_1150 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1151 = eq(_T_1149, _T_1150) @[TLB.scala 90:86]
    node _T_1152 = or(_T_1148, _T_1151) @[TLB.scala 90:45]
    node _T_1153 = and(_T_1146, _T_1152) @[TLB.scala 90:27]
    node hitsVec_4 = and(vm_enabled, _T_1153) @[TLB.scala 86:62]
    node _T_1154 = bits(valid, 5, 5) @[TLB.scala 87:25]
    node _T_1156 = lt(levels[5], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1157 = bits(tags[5], 26, 18) @[TLB.scala 90:55]
    node _T_1158 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1159 = eq(_T_1157, _T_1158) @[TLB.scala 90:86]
    node _T_1160 = or(_T_1156, _T_1159) @[TLB.scala 90:45]
    node _T_1161 = and(_T_1154, _T_1160) @[TLB.scala 90:27]
    node _T_1163 = lt(levels[5], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1164 = bits(tags[5], 17, 9) @[TLB.scala 90:55]
    node _T_1165 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1166 = eq(_T_1164, _T_1165) @[TLB.scala 90:86]
    node _T_1167 = or(_T_1163, _T_1166) @[TLB.scala 90:45]
    node _T_1168 = and(_T_1161, _T_1167) @[TLB.scala 90:27]
    node _T_1170 = lt(levels[5], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1171 = bits(tags[5], 8, 0) @[TLB.scala 90:55]
    node _T_1172 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1173 = eq(_T_1171, _T_1172) @[TLB.scala 90:86]
    node _T_1174 = or(_T_1170, _T_1173) @[TLB.scala 90:45]
    node _T_1175 = and(_T_1168, _T_1174) @[TLB.scala 90:27]
    node hitsVec_5 = and(vm_enabled, _T_1175) @[TLB.scala 86:62]
    node _T_1176 = bits(valid, 6, 6) @[TLB.scala 87:25]
    node _T_1178 = lt(levels[6], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1179 = bits(tags[6], 26, 18) @[TLB.scala 90:55]
    node _T_1180 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1181 = eq(_T_1179, _T_1180) @[TLB.scala 90:86]
    node _T_1182 = or(_T_1178, _T_1181) @[TLB.scala 90:45]
    node _T_1183 = and(_T_1176, _T_1182) @[TLB.scala 90:27]
    node _T_1185 = lt(levels[6], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1186 = bits(tags[6], 17, 9) @[TLB.scala 90:55]
    node _T_1187 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1188 = eq(_T_1186, _T_1187) @[TLB.scala 90:86]
    node _T_1189 = or(_T_1185, _T_1188) @[TLB.scala 90:45]
    node _T_1190 = and(_T_1183, _T_1189) @[TLB.scala 90:27]
    node _T_1192 = lt(levels[6], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1193 = bits(tags[6], 8, 0) @[TLB.scala 90:55]
    node _T_1194 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1195 = eq(_T_1193, _T_1194) @[TLB.scala 90:86]
    node _T_1196 = or(_T_1192, _T_1195) @[TLB.scala 90:45]
    node _T_1197 = and(_T_1190, _T_1196) @[TLB.scala 90:27]
    node hitsVec_6 = and(vm_enabled, _T_1197) @[TLB.scala 86:62]
    node _T_1198 = bits(valid, 7, 7) @[TLB.scala 87:25]
    node _T_1200 = lt(levels[7], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1201 = bits(tags[7], 26, 18) @[TLB.scala 90:55]
    node _T_1202 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1203 = eq(_T_1201, _T_1202) @[TLB.scala 90:86]
    node _T_1204 = or(_T_1200, _T_1203) @[TLB.scala 90:45]
    node _T_1205 = and(_T_1198, _T_1204) @[TLB.scala 90:27]
    node _T_1207 = lt(levels[7], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1208 = bits(tags[7], 17, 9) @[TLB.scala 90:55]
    node _T_1209 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1210 = eq(_T_1208, _T_1209) @[TLB.scala 90:86]
    node _T_1211 = or(_T_1207, _T_1210) @[TLB.scala 90:45]
    node _T_1212 = and(_T_1205, _T_1211) @[TLB.scala 90:27]
    node _T_1214 = lt(levels[7], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1215 = bits(tags[7], 8, 0) @[TLB.scala 90:55]
    node _T_1216 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1217 = eq(_T_1215, _T_1216) @[TLB.scala 90:86]
    node _T_1218 = or(_T_1214, _T_1217) @[TLB.scala 90:45]
    node _T_1219 = and(_T_1212, _T_1218) @[TLB.scala 90:27]
    node hitsVec_7 = and(vm_enabled, _T_1219) @[TLB.scala 86:62]
    node _T_1220 = bits(valid, 8, 8) @[TLB.scala 87:25]
    node _T_1222 = lt(levels[8], UInt<1>("h00")) @[TLB.scala 90:41]
    node _T_1223 = bits(tags[8], 26, 18) @[TLB.scala 90:55]
    node _T_1224 = bits(vpn, 26, 18) @[TLB.scala 90:93]
    node _T_1225 = eq(_T_1223, _T_1224) @[TLB.scala 90:86]
    node _T_1226 = or(_T_1222, _T_1225) @[TLB.scala 90:45]
    node _T_1227 = and(_T_1220, _T_1226) @[TLB.scala 90:27]
    node _T_1229 = lt(levels[8], UInt<1>("h01")) @[TLB.scala 90:41]
    node _T_1230 = bits(tags[8], 17, 9) @[TLB.scala 90:55]
    node _T_1231 = bits(vpn, 17, 9) @[TLB.scala 90:93]
    node _T_1232 = eq(_T_1230, _T_1231) @[TLB.scala 90:86]
    node _T_1233 = or(_T_1229, _T_1232) @[TLB.scala 90:45]
    node _T_1234 = and(_T_1227, _T_1233) @[TLB.scala 90:27]
    node _T_1236 = lt(levels[8], UInt<2>("h02")) @[TLB.scala 90:41]
    node _T_1237 = bits(tags[8], 8, 0) @[TLB.scala 90:55]
    node _T_1238 = bits(vpn, 8, 0) @[TLB.scala 90:93]
    node _T_1239 = eq(_T_1237, _T_1238) @[TLB.scala 90:86]
    node _T_1240 = or(_T_1236, _T_1239) @[TLB.scala 90:45]
    node _T_1241 = and(_T_1234, _T_1240) @[TLB.scala 90:27]
    node hitsVec_8 = and(vm_enabled, _T_1241) @[TLB.scala 86:62]
    node hitsVec_9 = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 93:9]
    node _T_1243 = cat(hitsVec_1, hitsVec_0) @[Cat.scala 30:58]
    node _T_1244 = cat(hitsVec_4, hitsVec_3) @[Cat.scala 30:58]
    node _T_1245 = cat(_T_1244, hitsVec_2) @[Cat.scala 30:58]
    node _T_1246 = cat(_T_1245, _T_1243) @[Cat.scala 30:58]
    node _T_1247 = cat(hitsVec_6, hitsVec_5) @[Cat.scala 30:58]
    node _T_1248 = cat(hitsVec_9, hitsVec_8) @[Cat.scala 30:58]
    node _T_1249 = cat(_T_1248, hitsVec_7) @[Cat.scala 30:58]
    node _T_1250 = cat(_T_1249, _T_1247) @[Cat.scala 30:58]
    node hits = cat(_T_1250, _T_1246) @[Cat.scala 30:58]
    node _T_1252 = mux(hitsVec_0, levels[0], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1254 = mux(hitsVec_1, levels[1], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1256 = mux(hitsVec_2, levels[2], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1258 = mux(hitsVec_3, levels[3], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1260 = mux(hitsVec_4, levels[4], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1262 = mux(hitsVec_5, levels[5], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1264 = mux(hitsVec_6, levels[6], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1266 = mux(hitsVec_7, levels[7], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1268 = mux(hitsVec_8, levels[8], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1270 = or(_T_1252, _T_1254) @[Mux.scala 19:72]
    node _T_1271 = or(_T_1270, _T_1256) @[Mux.scala 19:72]
    node _T_1272 = or(_T_1271, _T_1258) @[Mux.scala 19:72]
    node _T_1273 = or(_T_1272, _T_1260) @[Mux.scala 19:72]
    node _T_1274 = or(_T_1273, _T_1262) @[Mux.scala 19:72]
    node _T_1275 = or(_T_1274, _T_1264) @[Mux.scala 19:72]
    node _T_1276 = or(_T_1275, _T_1266) @[Mux.scala 19:72]
    node _T_1277 = or(_T_1276, _T_1268) @[Mux.scala 19:72]
    wire level : UInt<2> @[Mux.scala 19:72]
    level is invalid @[Mux.scala 19:72]
    level <= _T_1277 @[Mux.scala 19:72]
    node _T_1280 = mux(hitsVec_0, ppns[0], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1282 = mux(hitsVec_1, ppns[1], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1284 = mux(hitsVec_2, ppns[2], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1286 = mux(hitsVec_3, ppns[3], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1288 = mux(hitsVec_4, ppns[4], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1290 = mux(hitsVec_5, ppns[5], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1292 = mux(hitsVec_6, ppns[6], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1294 = mux(hitsVec_7, ppns[7], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1296 = mux(hitsVec_8, ppns[8], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1298 = or(_T_1280, _T_1282) @[Mux.scala 19:72]
    node _T_1299 = or(_T_1298, _T_1284) @[Mux.scala 19:72]
    node _T_1300 = or(_T_1299, _T_1286) @[Mux.scala 19:72]
    node _T_1301 = or(_T_1300, _T_1288) @[Mux.scala 19:72]
    node _T_1302 = or(_T_1301, _T_1290) @[Mux.scala 19:72]
    node _T_1303 = or(_T_1302, _T_1292) @[Mux.scala 19:72]
    node _T_1304 = or(_T_1303, _T_1294) @[Mux.scala 19:72]
    node _T_1305 = or(_T_1304, _T_1296) @[Mux.scala 19:72]
    wire partialPPN : UInt<20> @[Mux.scala 19:72]
    partialPPN is invalid @[Mux.scala 19:72]
    partialPPN <= _T_1305 @[Mux.scala 19:72]
    node _T_1307 = mux(vm_enabled, partialPPN, vpn) @[TLB.scala 98:18]
    node _T_1308 = bits(_T_1307, 26, 18) @[TLB.scala 98:47]
    node _T_1310 = lt(level, UInt<1>("h01")) @[TLB.scala 100:33]
    node _T_1312 = mux(_T_1310, vpn, UInt<1>("h00")) @[TLB.scala 100:26]
    node _T_1313 = or(_T_1312, partialPPN) @[TLB.scala 100:48]
    node _T_1314 = bits(_T_1313, 17, 9) @[TLB.scala 100:61]
    node _T_1315 = cat(_T_1308, _T_1314) @[Cat.scala 30:58]
    node _T_1317 = lt(level, UInt<2>("h02")) @[TLB.scala 100:33]
    node _T_1319 = mux(_T_1317, vpn, UInt<1>("h00")) @[TLB.scala 100:26]
    node _T_1320 = or(_T_1319, partialPPN) @[TLB.scala 100:48]
    node _T_1321 = bits(_T_1320, 8, 0) @[TLB.scala 100:61]
    node ppn = cat(_T_1315, _T_1321) @[Cat.scala 30:58]
    reg u_array : UInt<9>, clock @[TLB.scala 105:20]
    reg sw_array : UInt<9>, clock @[TLB.scala 106:21]
    reg sx_array : UInt<9>, clock @[TLB.scala 107:21]
    reg sr_array : UInt<9>, clock @[TLB.scala 108:21]
    reg xr_array : UInt<9>, clock @[TLB.scala 109:21]
    reg cash_array : UInt<8>, clock @[TLB.scala 110:23]
    when do_refill : @[TLB.scala 111:20]
      node _T_1329 = mux(isSpecial, UInt<4>("h08"), r_refill_waddr) @[TLB.scala 112:20]
      ppns[_T_1329] <= io.ptw.resp.bits.pte.ppn @[TLB.scala 114:17]
      tags[_T_1329] <= r_refill_tag @[TLB.scala 115:17]
      levels[_T_1329] <= io.ptw.resp.bits.level @[TLB.scala 116:19]
      node _T_1334 = dshl(UInt<1>("h01"), _T_1329) @[OneHot.scala 47:11]
      node _T_1335 = or(valid, _T_1334) @[TLB.scala 119:20]
      valid <= _T_1335 @[TLB.scala 119:11]
      node _T_1336 = or(u_array, _T_1334) @[TLB.scala 120:35]
      node _T_1337 = not(_T_1334) @[TLB.scala 120:53]
      node _T_1338 = and(u_array, _T_1337) @[TLB.scala 120:51]
      node _T_1339 = mux(io.ptw.resp.bits.pte.u, _T_1336, _T_1338) @[TLB.scala 120:19]
      u_array <= _T_1339 @[TLB.scala 120:13]
      node _T_1341 = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 56:47]
      node _T_1342 = and(io.ptw.resp.bits.pte.x, _T_1341) @[PTW.scala 56:44]
      node _T_1343 = or(io.ptw.resp.bits.pte.r, _T_1342) @[PTW.scala 56:38]
      node _T_1344 = and(io.ptw.resp.bits.pte.v, _T_1343) @[PTW.scala 56:32]
      node _T_1345 = and(_T_1344, io.ptw.resp.bits.pte.a) @[PTW.scala 56:52]
      node _T_1346 = and(_T_1345, io.ptw.resp.bits.pte.w) @[PTW.scala 61:35]
      node _T_1347 = and(_T_1346, io.ptw.resp.bits.pte.d) @[PTW.scala 61:40]
      node _T_1348 = or(isSpecial, prot_w) @[TLB.scala 121:44]
      node _T_1349 = and(_T_1347, _T_1348) @[TLB.scala 121:30]
      node _T_1350 = or(sw_array, _T_1334) @[TLB.scala 121:65]
      node _T_1351 = not(_T_1334) @[TLB.scala 121:84]
      node _T_1352 = and(sw_array, _T_1351) @[TLB.scala 121:82]
      node _T_1353 = mux(_T_1349, _T_1350, _T_1352) @[TLB.scala 121:20]
      sw_array <= _T_1353 @[TLB.scala 121:14]
      node _T_1355 = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 56:47]
      node _T_1356 = and(io.ptw.resp.bits.pte.x, _T_1355) @[PTW.scala 56:44]
      node _T_1357 = or(io.ptw.resp.bits.pte.r, _T_1356) @[PTW.scala 56:38]
      node _T_1358 = and(io.ptw.resp.bits.pte.v, _T_1357) @[PTW.scala 56:32]
      node _T_1359 = and(_T_1358, io.ptw.resp.bits.pte.a) @[PTW.scala 56:52]
      node _T_1360 = and(_T_1359, io.ptw.resp.bits.pte.x) @[PTW.scala 62:35]
      node _T_1361 = or(isSpecial, prot_x) @[TLB.scala 122:44]
      node _T_1362 = and(_T_1360, _T_1361) @[TLB.scala 122:30]
      node _T_1363 = or(sx_array, _T_1334) @[TLB.scala 122:65]
      node _T_1364 = not(_T_1334) @[TLB.scala 122:84]
      node _T_1365 = and(sx_array, _T_1364) @[TLB.scala 122:82]
      node _T_1366 = mux(_T_1362, _T_1363, _T_1365) @[TLB.scala 122:20]
      sx_array <= _T_1366 @[TLB.scala 122:14]
      node _T_1368 = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 56:47]
      node _T_1369 = and(io.ptw.resp.bits.pte.x, _T_1368) @[PTW.scala 56:44]
      node _T_1370 = or(io.ptw.resp.bits.pte.r, _T_1369) @[PTW.scala 56:38]
      node _T_1371 = and(io.ptw.resp.bits.pte.v, _T_1370) @[PTW.scala 56:32]
      node _T_1372 = and(_T_1371, io.ptw.resp.bits.pte.a) @[PTW.scala 56:52]
      node _T_1373 = and(_T_1372, io.ptw.resp.bits.pte.r) @[PTW.scala 60:35]
      node _T_1374 = or(isSpecial, prot_r) @[TLB.scala 123:44]
      node _T_1375 = and(_T_1373, _T_1374) @[TLB.scala 123:30]
      node _T_1376 = or(sr_array, _T_1334) @[TLB.scala 123:65]
      node _T_1377 = not(_T_1334) @[TLB.scala 123:84]
      node _T_1378 = and(sr_array, _T_1377) @[TLB.scala 123:82]
      node _T_1379 = mux(_T_1375, _T_1376, _T_1378) @[TLB.scala 123:20]
      sr_array <= _T_1379 @[TLB.scala 123:14]
      node _T_1381 = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 56:47]
      node _T_1382 = and(io.ptw.resp.bits.pte.x, _T_1381) @[PTW.scala 56:44]
      node _T_1383 = or(io.ptw.resp.bits.pte.r, _T_1382) @[PTW.scala 56:38]
      node _T_1384 = and(io.ptw.resp.bits.pte.v, _T_1383) @[PTW.scala 56:32]
      node _T_1385 = and(_T_1384, io.ptw.resp.bits.pte.a) @[PTW.scala 56:52]
      node _T_1386 = and(_T_1385, io.ptw.resp.bits.pte.x) @[PTW.scala 62:35]
      node _T_1387 = or(isSpecial, prot_r) @[TLB.scala 124:44]
      node _T_1388 = and(_T_1386, _T_1387) @[TLB.scala 124:30]
      node _T_1389 = or(xr_array, _T_1334) @[TLB.scala 124:65]
      node _T_1390 = not(_T_1334) @[TLB.scala 124:84]
      node _T_1391 = and(xr_array, _T_1390) @[TLB.scala 124:82]
      node _T_1392 = mux(_T_1388, _T_1389, _T_1391) @[TLB.scala 124:20]
      xr_array <= _T_1392 @[TLB.scala 124:14]
      node _T_1393 = or(cash_array, _T_1334) @[TLB.scala 125:45]
      node _T_1394 = not(_T_1334) @[TLB.scala 125:66]
      node _T_1395 = and(cash_array, _T_1394) @[TLB.scala 125:64]
      node _T_1396 = mux(cacheable, _T_1393, _T_1395) @[TLB.scala 125:22]
      cash_array <= _T_1396 @[TLB.scala 125:16]
      skip @[TLB.scala 111:20]
    reg _T_1398 : UInt<8>, clock @[Replacement.scala 42:22]
    node _T_1399 = not(valid) @[TLB.scala 129:31]
    node _T_1401 = eq(_T_1399, UInt<1>("h00")) @[TLB.scala 129:31]
    node _T_1403 = eq(_T_1401, UInt<1>("h00")) @[TLB.scala 129:24]
    node _T_1404 = not(valid) @[TLB.scala 129:53]
    node _T_1405 = bits(_T_1404, 0, 0) @[OneHot.scala 39:40]
    node _T_1406 = bits(_T_1404, 1, 1) @[OneHot.scala 39:40]
    node _T_1407 = bits(_T_1404, 2, 2) @[OneHot.scala 39:40]
    node _T_1408 = bits(_T_1404, 3, 3) @[OneHot.scala 39:40]
    node _T_1409 = bits(_T_1404, 4, 4) @[OneHot.scala 39:40]
    node _T_1410 = bits(_T_1404, 5, 5) @[OneHot.scala 39:40]
    node _T_1411 = bits(_T_1404, 6, 6) @[OneHot.scala 39:40]
    node _T_1412 = bits(_T_1404, 7, 7) @[OneHot.scala 39:40]
    node _T_1413 = bits(_T_1404, 8, 8) @[OneHot.scala 39:40]
    node _T_1423 = mux(_T_1412, UInt<3>("h07"), UInt<4>("h08")) @[Mux.scala 31:69]
    node _T_1424 = mux(_T_1411, UInt<3>("h06"), _T_1423) @[Mux.scala 31:69]
    node _T_1425 = mux(_T_1410, UInt<3>("h05"), _T_1424) @[Mux.scala 31:69]
    node _T_1426 = mux(_T_1409, UInt<3>("h04"), _T_1425) @[Mux.scala 31:69]
    node _T_1427 = mux(_T_1408, UInt<2>("h03"), _T_1426) @[Mux.scala 31:69]
    node _T_1428 = mux(_T_1407, UInt<2>("h02"), _T_1427) @[Mux.scala 31:69]
    node _T_1429 = mux(_T_1406, UInt<1>("h01"), _T_1428) @[Mux.scala 31:69]
    node _T_1430 = mux(_T_1405, UInt<1>("h00"), _T_1429) @[Mux.scala 31:69]
    node _T_1432 = dshr(_T_1398, UInt<1>("h01")) @[Replacement.scala 60:27]
    node _T_1433 = bits(_T_1432, 0, 0) @[Replacement.scala 60:27]
    node _T_1434 = cat(UInt<1>("h01"), _T_1433) @[Cat.scala 30:58]
    node _T_1435 = dshr(_T_1398, _T_1434) @[Replacement.scala 60:27]
    node _T_1436 = bits(_T_1435, 0, 0) @[Replacement.scala 60:27]
    node _T_1437 = cat(_T_1434, _T_1436) @[Cat.scala 30:58]
    node _T_1438 = dshr(_T_1398, _T_1437) @[Replacement.scala 60:27]
    node _T_1439 = bits(_T_1438, 0, 0) @[Replacement.scala 60:27]
    node _T_1440 = cat(_T_1437, _T_1439) @[Cat.scala 30:58]
    node _T_1441 = bits(_T_1440, 2, 0) @[Replacement.scala 61:8]
    node repl_waddr = mux(_T_1403, _T_1430, _T_1441) @[TLB.scala 129:23]
    node _T_1443 = mux(io.ptw.status.pum, u_array, UInt<1>("h00")) @[TLB.scala 131:33]
    node _T_1444 = not(_T_1443) @[TLB.scala 131:29]
    node priv_ok = mux(priv_s, _T_1444, u_array) @[TLB.scala 131:20]
    node _T_1445 = not(prot_w) @[TLB.scala 132:41]
    node _T_1446 = shl(_T_1445, 8) @[TLB.scala 132:49]
    node _T_1447 = not(_T_1446) @[TLB.scala 132:39]
    node _T_1448 = and(priv_ok, _T_1447) @[TLB.scala 132:37]
    node _T_1449 = and(_T_1448, sw_array) @[TLB.scala 132:66]
    node w_array = cat(prot_w, _T_1449) @[Cat.scala 30:58]
    node _T_1450 = not(prot_x) @[TLB.scala 133:41]
    node _T_1451 = shl(_T_1450, 8) @[TLB.scala 133:49]
    node _T_1452 = not(_T_1451) @[TLB.scala 133:39]
    node _T_1453 = and(priv_ok, _T_1452) @[TLB.scala 133:37]
    node _T_1454 = and(_T_1453, sx_array) @[TLB.scala 133:66]
    node x_array = cat(prot_x, _T_1454) @[Cat.scala 30:58]
    node _T_1455 = not(prot_r) @[TLB.scala 134:41]
    node _T_1456 = shl(_T_1455, 8) @[TLB.scala 134:49]
    node _T_1457 = not(_T_1456) @[TLB.scala 134:39]
    node _T_1458 = and(priv_ok, _T_1457) @[TLB.scala 134:37]
    node _T_1460 = mux(io.ptw.status.mxr, xr_array, UInt<1>("h00")) @[TLB.scala 134:83]
    node _T_1461 = or(sr_array, _T_1460) @[TLB.scala 134:78]
    node _T_1462 = and(_T_1458, _T_1461) @[TLB.scala 134:66]
    node r_array = cat(prot_r, _T_1462) @[Cat.scala 30:58]
    node _T_1463 = cat(cacheable, cacheable) @[Cat.scala 30:58]
    node c_array = cat(_T_1463, cash_array) @[Cat.scala 30:58]
    node _T_1464 = bits(vpn, 27, 27) @[TLB.scala 139:13]
    node _T_1465 = bits(vpn, 26, 26) @[TLB.scala 139:30]
    node bad_va = neq(_T_1464, _T_1465) @[TLB.scala 139:23]
    node _T_1466 = bits(hits, 8, 0) @[TLB.scala 140:21]
    node tlb_hit = neq(_T_1466, UInt<1>("h00")) @[TLB.scala 140:41]
    node _T_1469 = eq(bad_va, UInt<1>("h00")) @[TLB.scala 141:32]
    node _T_1470 = and(vm_enabled, _T_1469) @[TLB.scala 141:29]
    node _T_1472 = eq(tlb_hit, UInt<1>("h00")) @[TLB.scala 141:43]
    node tlb_miss = and(_T_1470, _T_1472) @[TLB.scala 141:40]
    node _T_1474 = eq(tlb_miss, UInt<1>("h00")) @[TLB.scala 143:25]
    node _T_1475 = and(io.req.valid, _T_1474) @[TLB.scala 143:22]
    node _T_1476 = bits(hits, 8, 8) @[TLB.scala 143:43]
    node _T_1478 = eq(_T_1476, UInt<1>("h00")) @[TLB.scala 143:38]
    node _T_1479 = and(_T_1475, _T_1478) @[TLB.scala 143:35]
    when _T_1479 : @[TLB.scala 143:59]
      node _T_1480 = bits(hits, 7, 0) @[TLB.scala 144:30]
      node _T_1481 = bits(_T_1480, 7, 4) @[OneHot.scala 26:18]
      node _T_1482 = bits(_T_1480, 3, 0) @[OneHot.scala 27:18]
      node _T_1484 = neq(_T_1481, UInt<1>("h00")) @[OneHot.scala 28:14]
      node _T_1485 = or(_T_1481, _T_1482) @[OneHot.scala 28:28]
      node _T_1486 = bits(_T_1485, 3, 2) @[OneHot.scala 26:18]
      node _T_1487 = bits(_T_1485, 1, 0) @[OneHot.scala 27:18]
      node _T_1489 = neq(_T_1486, UInt<1>("h00")) @[OneHot.scala 28:14]
      node _T_1490 = or(_T_1486, _T_1487) @[OneHot.scala 28:28]
      node _T_1491 = bits(_T_1490, 1, 1) @[CircuitMath.scala 30:8]
      node _T_1492 = cat(_T_1489, _T_1491) @[Cat.scala 30:58]
      node _T_1493 = cat(_T_1484, _T_1492) @[Cat.scala 30:58]
      node _T_1495 = bits(_T_1493, 2, 2) @[Replacement.scala 50:20]
      node _T_1497 = eq(_T_1495, UInt<1>("h00")) @[Replacement.scala 51:43]
      node _T_1499 = dshl(UInt<1>("h01"), UInt<1>("h01")) @[Replacement.scala 51:37]
      node _T_1500 = or(_T_1398, _T_1499) @[Replacement.scala 51:37]
      node _T_1501 = not(_T_1398) @[Replacement.scala 51:37]
      node _T_1502 = or(_T_1501, _T_1499) @[Replacement.scala 51:37]
      node _T_1503 = not(_T_1502) @[Replacement.scala 51:37]
      node _T_1504 = mux(_T_1497, _T_1500, _T_1503) @[Replacement.scala 51:37]
      node _T_1505 = cat(UInt<1>("h01"), _T_1495) @[Cat.scala 30:58]
      node _T_1506 = bits(_T_1493, 1, 1) @[Replacement.scala 50:20]
      node _T_1508 = eq(_T_1506, UInt<1>("h00")) @[Replacement.scala 51:43]
      node _T_1510 = dshl(UInt<1>("h01"), _T_1505) @[Replacement.scala 51:37]
      node _T_1511 = or(_T_1504, _T_1510) @[Replacement.scala 51:37]
      node _T_1512 = not(_T_1504) @[Replacement.scala 51:37]
      node _T_1513 = or(_T_1512, _T_1510) @[Replacement.scala 51:37]
      node _T_1514 = not(_T_1513) @[Replacement.scala 51:37]
      node _T_1515 = mux(_T_1508, _T_1511, _T_1514) @[Replacement.scala 51:37]
      node _T_1516 = cat(_T_1505, _T_1506) @[Cat.scala 30:58]
      node _T_1517 = bits(_T_1493, 0, 0) @[Replacement.scala 50:20]
      node _T_1519 = eq(_T_1517, UInt<1>("h00")) @[Replacement.scala 51:43]
      node _T_1521 = dshl(UInt<1>("h01"), _T_1516) @[Replacement.scala 51:37]
      node _T_1522 = or(_T_1515, _T_1521) @[Replacement.scala 51:37]
      node _T_1523 = not(_T_1515) @[Replacement.scala 51:37]
      node _T_1524 = or(_T_1523, _T_1521) @[Replacement.scala 51:37]
      node _T_1525 = not(_T_1524) @[Replacement.scala 51:37]
      node _T_1526 = mux(_T_1519, _T_1522, _T_1525) @[Replacement.scala 51:37]
      node _T_1527 = cat(_T_1516, _T_1517) @[Cat.scala 30:58]
      _T_1398 <= _T_1526 @[Replacement.scala 44:15]
      skip @[TLB.scala 143:59]
    node _T_1528 = bits(hits, 8, 0) @[TLB.scala 152:42]
    node _T_1529 = bits(_T_1528, 3, 0) @[Package.scala 62:39]
    node _T_1530 = bits(_T_1529, 1, 0) @[Package.scala 62:39]
    node _T_1531 = bits(_T_1530, 0, 0) @[Package.scala 62:39]
    node _T_1532 = bits(_T_1531, 0, 0) @[Package.scala 59:20]
    node _T_1534 = bits(_T_1530, 1, 1) @[Package.scala 63:41]
    node _T_1535 = bits(_T_1534, 0, 0) @[Package.scala 59:20]
    node _T_1537 = or(_T_1532, _T_1535) @[Package.scala 64:18]
    node _T_1538 = or(UInt<1>("h00"), UInt<1>("h00")) @[Package.scala 64:39]
    node _T_1539 = and(_T_1532, _T_1535) @[Package.scala 64:63]
    node _T_1540 = or(_T_1538, _T_1539) @[Package.scala 64:51]
    node _T_1541 = bits(_T_1529, 3, 2) @[Package.scala 63:41]
    node _T_1542 = bits(_T_1541, 0, 0) @[Package.scala 62:39]
    node _T_1543 = bits(_T_1542, 0, 0) @[Package.scala 59:20]
    node _T_1545 = bits(_T_1541, 1, 1) @[Package.scala 63:41]
    node _T_1546 = bits(_T_1545, 0, 0) @[Package.scala 59:20]
    node _T_1548 = or(_T_1543, _T_1546) @[Package.scala 64:18]
    node _T_1549 = or(UInt<1>("h00"), UInt<1>("h00")) @[Package.scala 64:39]
    node _T_1550 = and(_T_1543, _T_1546) @[Package.scala 64:63]
    node _T_1551 = or(_T_1549, _T_1550) @[Package.scala 64:51]
    node _T_1552 = or(_T_1537, _T_1548) @[Package.scala 64:18]
    node _T_1553 = or(_T_1540, _T_1551) @[Package.scala 64:39]
    node _T_1554 = and(_T_1537, _T_1548) @[Package.scala 64:63]
    node _T_1555 = or(_T_1553, _T_1554) @[Package.scala 64:51]
    node _T_1556 = bits(_T_1528, 8, 4) @[Package.scala 63:41]
    node _T_1557 = bits(_T_1556, 1, 0) @[Package.scala 62:39]
    node _T_1558 = bits(_T_1557, 0, 0) @[Package.scala 62:39]
    node _T_1559 = bits(_T_1558, 0, 0) @[Package.scala 59:20]
    node _T_1561 = bits(_T_1557, 1, 1) @[Package.scala 63:41]
    node _T_1562 = bits(_T_1561, 0, 0) @[Package.scala 59:20]
    node _T_1564 = or(_T_1559, _T_1562) @[Package.scala 64:18]
    node _T_1565 = or(UInt<1>("h00"), UInt<1>("h00")) @[Package.scala 64:39]
    node _T_1566 = and(_T_1559, _T_1562) @[Package.scala 64:63]
    node _T_1567 = or(_T_1565, _T_1566) @[Package.scala 64:51]
    node _T_1568 = bits(_T_1556, 4, 2) @[Package.scala 63:41]
    node _T_1569 = bits(_T_1568, 0, 0) @[Package.scala 62:39]
    node _T_1570 = bits(_T_1569, 0, 0) @[Package.scala 59:20]
    node _T_1572 = bits(_T_1568, 2, 1) @[Package.scala 63:41]
    node _T_1573 = bits(_T_1572, 0, 0) @[Package.scala 62:39]
    node _T_1574 = bits(_T_1573, 0, 0) @[Package.scala 59:20]
    node _T_1576 = bits(_T_1572, 1, 1) @[Package.scala 63:41]
    node _T_1577 = bits(_T_1576, 0, 0) @[Package.scala 59:20]
    node _T_1579 = or(_T_1574, _T_1577) @[Package.scala 64:18]
    node _T_1580 = or(UInt<1>("h00"), UInt<1>("h00")) @[Package.scala 64:39]
    node _T_1581 = and(_T_1574, _T_1577) @[Package.scala 64:63]
    node _T_1582 = or(_T_1580, _T_1581) @[Package.scala 64:51]
    node _T_1583 = or(_T_1570, _T_1579) @[Package.scala 64:18]
    node _T_1584 = or(UInt<1>("h00"), _T_1582) @[Package.scala 64:39]
    node _T_1585 = and(_T_1570, _T_1579) @[Package.scala 64:63]
    node _T_1586 = or(_T_1584, _T_1585) @[Package.scala 64:51]
    node _T_1587 = or(_T_1564, _T_1583) @[Package.scala 64:18]
    node _T_1588 = or(_T_1567, _T_1586) @[Package.scala 64:39]
    node _T_1589 = and(_T_1564, _T_1583) @[Package.scala 64:63]
    node _T_1590 = or(_T_1588, _T_1589) @[Package.scala 64:51]
    node _T_1591 = or(_T_1552, _T_1587) @[Package.scala 64:18]
    node _T_1592 = or(_T_1555, _T_1590) @[Package.scala 64:39]
    node _T_1593 = and(_T_1552, _T_1587) @[Package.scala 64:63]
    node multipleHits = or(_T_1592, _T_1593) @[Package.scala 64:51]
    node _T_1594 = eq(state, UInt<2>("h00")) @[TLB.scala 154:25]
    io.req.ready <= _T_1594 @[TLB.scala 154:16]
    node _T_1595 = not(r_array) @[TLB.scala 155:33]
    node _T_1596 = and(_T_1595, hits) @[TLB.scala 155:42]
    node _T_1598 = neq(_T_1596, UInt<1>("h00")) @[TLB.scala 155:50]
    node _T_1599 = or(bad_va, _T_1598) @[TLB.scala 155:29]
    io.resp.xcpt_ld <= _T_1599 @[TLB.scala 155:19]
    node _T_1600 = not(w_array) @[TLB.scala 156:33]
    node _T_1601 = and(_T_1600, hits) @[TLB.scala 156:42]
    node _T_1603 = neq(_T_1601, UInt<1>("h00")) @[TLB.scala 156:50]
    node _T_1604 = or(bad_va, _T_1603) @[TLB.scala 156:29]
    io.resp.xcpt_st <= _T_1604 @[TLB.scala 156:19]
    node _T_1605 = not(x_array) @[TLB.scala 157:33]
    node _T_1606 = and(_T_1605, hits) @[TLB.scala 157:42]
    node _T_1608 = neq(_T_1606, UInt<1>("h00")) @[TLB.scala 157:50]
    node _T_1609 = or(bad_va, _T_1608) @[TLB.scala 157:29]
    io.resp.xcpt_if <= _T_1609 @[TLB.scala 157:19]
    node _T_1610 = and(c_array, hits) @[TLB.scala 158:33]
    node _T_1612 = neq(_T_1610, UInt<1>("h00")) @[TLB.scala 158:41]
    io.resp.cacheable <= _T_1612 @[TLB.scala 158:21]
    node _T_1613 = or(do_refill, tlb_miss) @[TLB.scala 159:29]
    node _T_1614 = or(_T_1613, multipleHits) @[TLB.scala 159:41]
    io.resp.miss <= _T_1614 @[TLB.scala 159:16]
    node _T_1615 = cat(ppn, pgOffset) @[Cat.scala 30:58]
    io.resp.paddr <= _T_1615 @[TLB.scala 160:17]
    node _T_1616 = eq(state, UInt<2>("h01")) @[TLB.scala 162:29]
    io.ptw.req.valid <= _T_1616 @[TLB.scala 162:20]
    io.ptw.req.bits <- io.ptw.status @[TLB.scala 163:19]
    io.ptw.req.bits.addr <= r_refill_tag @[TLB.scala 164:24]
    io.ptw.req.bits.store <= r_req.store @[TLB.scala 165:25]
    io.ptw.req.bits.fetch <= r_req.instruction @[TLB.scala 166:25]
    node _T_1617 = and(io.req.ready, io.req.valid) @[Decoupled.scala 30:37]
    node _T_1618 = and(_T_1617, tlb_miss) @[TLB.scala 169:25]
    when _T_1618 : @[TLB.scala 169:38]
      state <= UInt<2>("h01") @[TLB.scala 170:13]
      r_refill_tag <= lookup_tag @[TLB.scala 171:20]
      r_refill_waddr <= repl_waddr @[TLB.scala 172:22]
      r_req <- io.req.bits @[TLB.scala 173:13]
      skip @[TLB.scala 169:38]
    node _T_1619 = eq(state, UInt<2>("h01")) @[TLB.scala 175:17]
    when _T_1619 : @[TLB.scala 175:32]
      when io.ptw.invalidate : @[TLB.scala 176:32]
        state <= UInt<2>("h00") @[TLB.scala 177:15]
        skip @[TLB.scala 176:32]
      when io.ptw.req.ready : @[TLB.scala 179:31]
        state <= UInt<2>("h02") @[TLB.scala 180:15]
        when io.ptw.invalidate : @[TLB.scala 181:34]
          state <= UInt<2>("h03") @[TLB.scala 181:42]
          skip @[TLB.scala 181:34]
        skip @[TLB.scala 179:31]
      skip @[TLB.scala 175:32]
    node _T_1620 = eq(state, UInt<2>("h02")) @[TLB.scala 184:17]
    node _T_1621 = and(_T_1620, io.ptw.invalidate) @[TLB.scala 184:28]
    when _T_1621 : @[TLB.scala 184:50]
      state <= UInt<2>("h03") @[TLB.scala 185:13]
      skip @[TLB.scala 184:50]
    when io.ptw.resp.valid : @[TLB.scala 187:30]
      state <= UInt<2>("h00") @[TLB.scala 188:13]
      skip @[TLB.scala 187:30]
    node _T_1622 = or(io.ptw.invalidate, multipleHits) @[TLB.scala 191:29]
    when _T_1622 : @[TLB.scala 191:46]
      valid <= UInt<1>("h00") @[TLB.scala 192:13]
      skip @[TLB.scala 191:46]
    
  module L1MetadataArray : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip read : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, flip write : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, resp : {coh : {state : UInt<2>}, tag : UInt<20>}[4]}
    
    io is invalid
    io is invalid
    wire _T_6 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_6 is invalid @[Metadata.scala 160:20]
    _T_6.state <= UInt<2>("h00") @[Metadata.scala 161:16]
    wire rstVal : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 202:20]
    rstVal is invalid @[HellaCache.scala 202:20]
    rstVal.tag <= UInt<1>("h00") @[HellaCache.scala 203:14]
    rstVal.coh <- _T_6 @[HellaCache.scala 204:14]
    reg rst_cnt : UInt<7>, clock with : (reset => (reset, UInt<7>("h00"))) @[HellaCache.scala 226:20]
    node rst = lt(rst_cnt, UInt<7>("h040")) @[HellaCache.scala 227:21]
    node waddr = mux(rst, rst_cnt, io.write.bits.idx) @[HellaCache.scala 228:18]
    node _T_155 = mux(rst, rstVal, io.write.bits.data) @[HellaCache.scala 229:18]
    node wdata = cat(_T_155.coh.state, _T_155.tag) @[HellaCache.scala 229:52]
    node _T_160 = or(rst, UInt<1>("h00")) @[HellaCache.scala 230:23]
    node _T_162 = asSInt(io.write.bits.way_en) @[HellaCache.scala 230:75]
    node _T_163 = mux(_T_160, asSInt(UInt<1>("h01")), _T_162) @[HellaCache.scala 230:18]
    node wmask_0 = bits(_T_163, 0, 0) @[HellaCache.scala 230:83]
    node wmask_1 = bits(_T_163, 1, 1) @[HellaCache.scala 230:83]
    node wmask_2 = bits(_T_163, 2, 2) @[HellaCache.scala 230:83]
    node wmask_3 = bits(_T_163, 3, 3) @[HellaCache.scala 230:83]
    node _T_165 = or(rst, UInt<1>("h00")) @[HellaCache.scala 231:23]
    node _T_167 = asSInt(io.read.bits.way_en) @[HellaCache.scala 231:74]
    node _T_168 = mux(_T_165, asSInt(UInt<1>("h01")), _T_167) @[HellaCache.scala 231:18]
    node rmask_0 = bits(_T_168, 0, 0) @[HellaCache.scala 231:82]
    node rmask_1 = bits(_T_168, 1, 1) @[HellaCache.scala 231:82]
    node rmask_2 = bits(_T_168, 2, 2) @[HellaCache.scala 231:82]
    node rmask_3 = bits(_T_168, 3, 3) @[HellaCache.scala 231:82]
    when rst : @[HellaCache.scala 232:14]
      node _T_170 = add(rst_cnt, UInt<1>("h01")) @[HellaCache.scala 232:34]
      node _T_171 = tail(_T_170, 1) @[HellaCache.scala 232:34]
      rst_cnt <= _T_171 @[HellaCache.scala 232:24]
      skip @[HellaCache.scala 232:14]
    smem _T_182 : UInt<22>[4][64] @[HellaCache.scala 246:25]
    node _T_183 = or(rst, io.write.valid) @[HellaCache.scala 247:15]
    when _T_183 : @[HellaCache.scala 247:34]
      wire _T_186 : UInt<22>[4] @[HellaCache.scala 248:43]
      _T_186 is invalid @[HellaCache.scala 248:43]
      _T_186[0] <= wdata @[HellaCache.scala 248:43]
      _T_186[1] <= wdata @[HellaCache.scala 248:43]
      _T_186[2] <= wdata @[HellaCache.scala 248:43]
      _T_186[3] <= wdata @[HellaCache.scala 248:43]
      node _T_193 = bits(waddr, 5, 0)
      write mport _T_194 = _T_182[_T_193], clock
      when wmask_0 :
        _T_194[0] <= _T_186[0]
        skip
      when wmask_1 :
        _T_194[1] <= _T_186[1]
        skip
      when wmask_2 :
        _T_194[2] <= _T_186[2]
        skip
      when wmask_3 :
        _T_194[3] <= _T_186[3]
        skip
      skip @[HellaCache.scala 247:34]
    wire _T_207 : UInt
    _T_207 is invalid
    when io.read.valid :
      _T_207 <= io.read.bits.idx
      node _T_209 = or(_T_207, UInt<6>("h00"))
      node _T_210 = bits(_T_209, 5, 0)
      read mport _T_211 = _T_182[_T_210], clock
      skip
    wire _T_227 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 250:81]
    _T_227 is invalid @[HellaCache.scala 250:81]
    wire _T_232 : UInt<22>
    _T_232 is invalid
    _T_232 <= _T_211[0]
    node _T_233 = bits(_T_232, 19, 0) @[HellaCache.scala 250:81]
    _T_227.tag <= _T_233 @[HellaCache.scala 250:81]
    node _T_234 = bits(_T_232, 21, 20) @[HellaCache.scala 250:81]
    wire _T_236 : UInt<2>
    _T_236 is invalid
    _T_236 <= _T_234
    node _T_237 = bits(_T_236, 1, 0) @[HellaCache.scala 250:81]
    _T_227.coh.state <= _T_237 @[HellaCache.scala 250:81]
    wire _T_242 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 250:81]
    _T_242 is invalid @[HellaCache.scala 250:81]
    wire _T_247 : UInt<22>
    _T_247 is invalid
    _T_247 <= _T_211[1]
    node _T_248 = bits(_T_247, 19, 0) @[HellaCache.scala 250:81]
    _T_242.tag <= _T_248 @[HellaCache.scala 250:81]
    node _T_249 = bits(_T_247, 21, 20) @[HellaCache.scala 250:81]
    wire _T_251 : UInt<2>
    _T_251 is invalid
    _T_251 <= _T_249
    node _T_252 = bits(_T_251, 1, 0) @[HellaCache.scala 250:81]
    _T_242.coh.state <= _T_252 @[HellaCache.scala 250:81]
    wire _T_257 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 250:81]
    _T_257 is invalid @[HellaCache.scala 250:81]
    wire _T_262 : UInt<22>
    _T_262 is invalid
    _T_262 <= _T_211[2]
    node _T_263 = bits(_T_262, 19, 0) @[HellaCache.scala 250:81]
    _T_257.tag <= _T_263 @[HellaCache.scala 250:81]
    node _T_264 = bits(_T_262, 21, 20) @[HellaCache.scala 250:81]
    wire _T_266 : UInt<2>
    _T_266 is invalid
    _T_266 <= _T_264
    node _T_267 = bits(_T_266, 1, 0) @[HellaCache.scala 250:81]
    _T_257.coh.state <= _T_267 @[HellaCache.scala 250:81]
    wire _T_272 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 250:81]
    _T_272 is invalid @[HellaCache.scala 250:81]
    wire _T_277 : UInt<22>
    _T_277 is invalid
    _T_277 <= _T_211[3]
    node _T_278 = bits(_T_277, 19, 0) @[HellaCache.scala 250:81]
    _T_272.tag <= _T_278 @[HellaCache.scala 250:81]
    node _T_279 = bits(_T_277, 21, 20) @[HellaCache.scala 250:81]
    wire _T_281 : UInt<2>
    _T_281 is invalid
    _T_281 <= _T_279
    node _T_282 = bits(_T_281, 1, 0) @[HellaCache.scala 250:81]
    _T_272.coh.state <= _T_282 @[HellaCache.scala 250:81]
    io.resp[0] <- _T_227 @[HellaCache.scala 250:13]
    io.resp[1] <- _T_242 @[HellaCache.scala 250:13]
    io.resp[2] <- _T_257 @[HellaCache.scala 250:13]
    io.resp[3] <- _T_272 @[HellaCache.scala 250:13]
    node _T_284 = eq(rst, UInt<1>("h00")) @[HellaCache.scala 253:20]
    node _T_286 = eq(io.write.valid, UInt<1>("h00")) @[HellaCache.scala 253:28]
    node _T_287 = and(_T_284, _T_286) @[HellaCache.scala 253:25]
    io.read.ready <= _T_287 @[HellaCache.scala 253:17]
    node _T_289 = eq(rst, UInt<1>("h00")) @[HellaCache.scala 254:21]
    io.write.ready <= _T_289 @[HellaCache.scala 254:18]
    
  module AMOALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip addr : UInt<3>, flip cmd : UInt<5>, flip typ : UInt<2>, flip lhs : UInt<64>, flip rhs : UInt<64>, out : UInt<64>}
    
    io is invalid
    io is invalid
    node _T_14 = bits(io.typ, 1, 0) @[AmoAlu.scala 12:17]
    node _T_16 = eq(_T_14, UInt<2>("h02")) @[AmoAlu.scala 28:19]
    node _T_17 = bits(io.rhs, 31, 0) @[AmoAlu.scala 28:66]
    node _T_18 = cat(_T_17, _T_17) @[Cat.scala 30:58]
    node rhs = mux(_T_16, _T_18, io.rhs) @[AmoAlu.scala 28:13]
    node _T_20 = eq(io.cmd, UInt<4>("h0c")) @[AmoAlu.scala 73:22]
    node _T_22 = eq(io.cmd, UInt<4>("h0d")) @[AmoAlu.scala 73:45]
    node sgned = or(_T_20, _T_22) @[AmoAlu.scala 73:35]
    node _T_24 = eq(io.cmd, UInt<4>("h0d")) @[AmoAlu.scala 74:20]
    node _T_26 = eq(io.cmd, UInt<4>("h0f")) @[AmoAlu.scala 74:43]
    node max = or(_T_24, _T_26) @[AmoAlu.scala 74:33]
    node _T_28 = eq(io.cmd, UInt<4>("h0c")) @[AmoAlu.scala 75:20]
    node _T_30 = eq(io.cmd, UInt<4>("h0e")) @[AmoAlu.scala 75:43]
    node min = or(_T_28, _T_30) @[AmoAlu.scala 75:33]
    node _T_32 = not(UInt<64>("h00")) @[AmoAlu.scala 80:18]
    node _T_33 = bits(io.addr, 2, 2) @[AmoAlu.scala 80:40]
    node _T_34 = shl(_T_33, 31) @[AmoAlu.scala 80:44]
    node _T_35 = xor(_T_32, _T_34) @[AmoAlu.scala 80:30]
    node _T_36 = and(io.lhs, _T_35) @[AmoAlu.scala 81:15]
    node _T_37 = and(rhs, _T_35) @[AmoAlu.scala 81:30]
    node _T_38 = add(_T_36, _T_37) @[AmoAlu.scala 81:23]
    node adder_out = tail(_T_38, 1) @[AmoAlu.scala 81:23]
    node _T_39 = bits(io.typ, 0, 0) @[AmoAlu.scala 87:25]
    node _T_41 = eq(_T_39, UInt<1>("h00")) @[AmoAlu.scala 87:18]
    node _T_42 = bits(io.addr, 2, 2) @[AmoAlu.scala 88:41]
    node _T_44 = eq(_T_42, UInt<1>("h00")) @[AmoAlu.scala 88:33]
    node _T_45 = and(_T_41, _T_44) @[AmoAlu.scala 88:30]
    node _T_46 = bits(io.lhs, 31, 31) @[AmoAlu.scala 88:52]
    node _T_47 = bits(io.lhs, 63, 63) @[AmoAlu.scala 88:64]
    node _T_48 = mux(_T_45, _T_46, _T_47) @[AmoAlu.scala 88:24]
    node _T_49 = bits(io.addr, 2, 2) @[AmoAlu.scala 89:41]
    node _T_51 = eq(_T_49, UInt<1>("h00")) @[AmoAlu.scala 89:33]
    node _T_52 = and(_T_41, _T_51) @[AmoAlu.scala 89:30]
    node _T_53 = bits(rhs, 31, 31) @[AmoAlu.scala 89:49]
    node _T_54 = bits(rhs, 63, 63) @[AmoAlu.scala 89:58]
    node _T_55 = mux(_T_52, _T_53, _T_54) @[AmoAlu.scala 89:24]
    node _T_56 = bits(io.lhs, 31, 0) @[AmoAlu.scala 90:25]
    node _T_57 = bits(rhs, 31, 0) @[AmoAlu.scala 90:37]
    node _T_58 = lt(_T_56, _T_57) @[AmoAlu.scala 90:32]
    node _T_59 = bits(io.lhs, 63, 32) @[AmoAlu.scala 91:25]
    node _T_60 = bits(rhs, 63, 32) @[AmoAlu.scala 91:38]
    node _T_61 = lt(_T_59, _T_60) @[AmoAlu.scala 91:33]
    node _T_62 = bits(io.lhs, 63, 32) @[AmoAlu.scala 92:25]
    node _T_63 = bits(rhs, 63, 32) @[AmoAlu.scala 92:40]
    node _T_64 = eq(_T_62, _T_63) @[AmoAlu.scala 92:33]
    node _T_65 = bits(io.addr, 2, 2) @[AmoAlu.scala 93:37]
    node _T_66 = mux(_T_65, _T_61, _T_58) @[AmoAlu.scala 93:29]
    node _T_67 = and(_T_64, _T_58) @[AmoAlu.scala 93:72]
    node _T_68 = or(_T_61, _T_67) @[AmoAlu.scala 93:63]
    node _T_69 = mux(_T_41, _T_66, _T_68) @[AmoAlu.scala 93:19]
    node _T_70 = eq(_T_48, _T_55) @[AmoAlu.scala 94:19]
    node _T_71 = mux(sgned, _T_48, _T_55) @[AmoAlu.scala 94:39]
    node less = mux(_T_70, _T_69, _T_71) @[AmoAlu.scala 94:10]
    node _T_73 = eq(io.cmd, UInt<4>("h08")) @[AmoAlu.scala 97:24]
    node _T_75 = eq(io.cmd, UInt<4>("h0b")) @[AmoAlu.scala 98:24]
    node _T_76 = and(io.lhs, rhs) @[AmoAlu.scala 98:45]
    node _T_78 = eq(io.cmd, UInt<4>("h0a")) @[AmoAlu.scala 99:24]
    node _T_79 = or(io.lhs, rhs) @[AmoAlu.scala 99:45]
    node _T_81 = eq(io.cmd, UInt<4>("h09")) @[AmoAlu.scala 100:24]
    node _T_82 = xor(io.lhs, rhs) @[AmoAlu.scala 100:45]
    node _T_83 = mux(less, min, max) @[AmoAlu.scala 101:20]
    node _T_85 = eq(_T_14, UInt<1>("h00")) @[AmoAlu.scala 28:19]
    node _T_86 = bits(io.rhs, 7, 0) @[AmoAlu.scala 28:66]
    node _T_87 = cat(_T_86, _T_86) @[Cat.scala 30:58]
    node _T_88 = cat(_T_87, _T_87) @[Cat.scala 30:58]
    node _T_89 = cat(_T_88, _T_88) @[Cat.scala 30:58]
    node _T_91 = eq(_T_14, UInt<1>("h01")) @[AmoAlu.scala 28:19]
    node _T_92 = bits(io.rhs, 15, 0) @[AmoAlu.scala 28:66]
    node _T_93 = cat(_T_92, _T_92) @[Cat.scala 30:58]
    node _T_94 = cat(_T_93, _T_93) @[Cat.scala 30:58]
    node _T_96 = eq(_T_14, UInt<2>("h02")) @[AmoAlu.scala 28:19]
    node _T_97 = bits(io.rhs, 31, 0) @[AmoAlu.scala 28:66]
    node _T_98 = cat(_T_97, _T_97) @[Cat.scala 30:58]
    node _T_99 = mux(_T_96, _T_98, io.rhs) @[AmoAlu.scala 28:13]
    node _T_100 = mux(_T_91, _T_94, _T_99) @[AmoAlu.scala 28:13]
    node _T_101 = mux(_T_85, _T_89, _T_100) @[AmoAlu.scala 28:13]
    node _T_102 = mux(_T_83, io.lhs, _T_101) @[AmoAlu.scala 101:16]
    node _T_103 = mux(_T_81, _T_82, _T_102) @[AmoAlu.scala 100:16]
    node _T_104 = mux(_T_78, _T_79, _T_103) @[AmoAlu.scala 99:16]
    node _T_105 = mux(_T_75, _T_76, _T_104) @[AmoAlu.scala 98:16]
    node out = mux(_T_73, adder_out, _T_105) @[AmoAlu.scala 97:16]
    node _T_107 = bits(io.addr, 0, 0) @[AmoAlu.scala 19:27]
    node _T_109 = mux(_T_107, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_111 = geq(_T_14, UInt<1>("h01")) @[AmoAlu.scala 19:57]
    node _T_114 = mux(_T_111, UInt<1>("h01"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_115 = or(_T_109, _T_114) @[AmoAlu.scala 19:46]
    node _T_116 = bits(io.addr, 0, 0) @[AmoAlu.scala 20:27]
    node _T_118 = mux(_T_116, UInt<1>("h00"), UInt<1>("h01")) @[AmoAlu.scala 20:22]
    node _T_119 = cat(_T_115, _T_118) @[Cat.scala 30:58]
    node _T_120 = bits(io.addr, 1, 1) @[AmoAlu.scala 19:27]
    node _T_122 = mux(_T_120, _T_119, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_124 = geq(_T_14, UInt<2>("h02")) @[AmoAlu.scala 19:57]
    node _T_127 = mux(_T_124, UInt<2>("h03"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_128 = or(_T_122, _T_127) @[AmoAlu.scala 19:46]
    node _T_129 = bits(io.addr, 1, 1) @[AmoAlu.scala 20:27]
    node _T_131 = mux(_T_129, UInt<1>("h00"), _T_119) @[AmoAlu.scala 20:22]
    node _T_132 = cat(_T_128, _T_131) @[Cat.scala 30:58]
    node _T_133 = bits(io.addr, 2, 2) @[AmoAlu.scala 19:27]
    node _T_135 = mux(_T_133, _T_132, UInt<1>("h00")) @[AmoAlu.scala 19:22]
    node _T_137 = geq(_T_14, UInt<2>("h03")) @[AmoAlu.scala 19:57]
    node _T_140 = mux(_T_137, UInt<4>("h0f"), UInt<1>("h00")) @[AmoAlu.scala 19:51]
    node _T_141 = or(_T_135, _T_140) @[AmoAlu.scala 19:46]
    node _T_142 = bits(io.addr, 2, 2) @[AmoAlu.scala 20:27]
    node _T_144 = mux(_T_142, UInt<1>("h00"), _T_132) @[AmoAlu.scala 20:22]
    node _T_145 = cat(_T_141, _T_144) @[Cat.scala 30:58]
    node _T_146 = bits(_T_145, 0, 0) @[Bitwise.scala 27:51]
    node _T_147 = bits(_T_145, 1, 1) @[Bitwise.scala 27:51]
    node _T_148 = bits(_T_145, 2, 2) @[Bitwise.scala 27:51]
    node _T_149 = bits(_T_145, 3, 3) @[Bitwise.scala 27:51]
    node _T_150 = bits(_T_145, 4, 4) @[Bitwise.scala 27:51]
    node _T_151 = bits(_T_145, 5, 5) @[Bitwise.scala 27:51]
    node _T_152 = bits(_T_145, 6, 6) @[Bitwise.scala 27:51]
    node _T_153 = bits(_T_145, 7, 7) @[Bitwise.scala 27:51]
    node _T_154 = bits(_T_146, 0, 0) @[Bitwise.scala 71:15]
    node _T_157 = mux(_T_154, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_158 = bits(_T_147, 0, 0) @[Bitwise.scala 71:15]
    node _T_161 = mux(_T_158, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_162 = bits(_T_148, 0, 0) @[Bitwise.scala 71:15]
    node _T_165 = mux(_T_162, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_166 = bits(_T_149, 0, 0) @[Bitwise.scala 71:15]
    node _T_169 = mux(_T_166, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_170 = bits(_T_150, 0, 0) @[Bitwise.scala 71:15]
    node _T_173 = mux(_T_170, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_174 = bits(_T_151, 0, 0) @[Bitwise.scala 71:15]
    node _T_177 = mux(_T_174, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_178 = bits(_T_152, 0, 0) @[Bitwise.scala 71:15]
    node _T_181 = mux(_T_178, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_182 = bits(_T_153, 0, 0) @[Bitwise.scala 71:15]
    node _T_185 = mux(_T_182, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 71:12]
    node _T_186 = cat(_T_161, _T_157) @[Cat.scala 30:58]
    node _T_187 = cat(_T_169, _T_165) @[Cat.scala 30:58]
    node _T_188 = cat(_T_187, _T_186) @[Cat.scala 30:58]
    node _T_189 = cat(_T_177, _T_173) @[Cat.scala 30:58]
    node _T_190 = cat(_T_185, _T_181) @[Cat.scala 30:58]
    node _T_191 = cat(_T_190, _T_189) @[Cat.scala 30:58]
    node wmask = cat(_T_191, _T_188) @[Cat.scala 30:58]
    node _T_192 = and(wmask, out) @[AmoAlu.scala 105:19]
    node _T_193 = not(wmask) @[AmoAlu.scala 105:27]
    node _T_194 = and(_T_193, io.lhs) @[AmoAlu.scala 105:34]
    node _T_195 = or(_T_192, _T_194) @[AmoAlu.scala 105:25]
    io.out <= _T_195 @[AmoAlu.scala 105:10]
    
